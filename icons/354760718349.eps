%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: 9-Template_Glyph_632799876006.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Zee Abbasi
%%CreationDate: 12/9/2022
%%BoundingBox: 0 0 837 716
%%HiResBoundingBox: 0 0 836.6680 715.2735
%%CropBox: 0 0 836.6680 715.2735
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.0 x682 R agm 4.6676 ct 5.2591%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Navigation 25 Solid Glyph icon pack including location. map. navigation. navigation. gps</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Navigation 25 Solid Glyph icon pack including location. map. navigation. navigation. gps</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>arrow</rdf:li>
               <rdf:li> back</rdf:li>
               <rdf:li> navigation</rdf:li>
               <rdf:li> way</rdf:li>
               <rdf:li> world</rdf:li>
               <rdf:li> map</rdf:li>
               <rdf:li> location</rdf:li>
               <rdf:li> location</rdf:li>
               <rdf:li> navigation</rdf:li>
               <rdf:li> place</rdf:li>
               <rdf:li> info</rdf:li>
               <rdf:li> define</rdf:li>
               <rdf:li> gps</rdf:li>
               <rdf:li> location</rdf:li>
               <rdf:li> navigation</rdf:li>
               <rdf:li> map</rdf:li>
               <rdf:li> navigation</rdf:li>
               <rdf:li> location</rdf:li>
               <rdf:li> navigation</rdf:li>
               <rdf:li> road</rdf:li>
               <rdf:li> route</rdf:li>
               <rdf:li> arrow</rdf:li>
               <rdf:li> direction</rdf:li>
               <rdf:li> navigation</rdf:li>
               <rdf:li> compass</rdf:li>
               <rdf:li> navigation</rdf:li>
               <rdf:li> way</rdf:li>
               <rdf:li> world</rdf:li>
               <rdf:li> map</rdf:li>
               <rdf:li> navigation</rdf:li>
               <rdf:li> location</rdf:li>
               <rdf:li> map</rdf:li>
               <rdf:li> compass</rdf:li>
               <rdf:li> navigation</rdf:li>
               <rdf:li> location</rdf:li>
            </rdf:Bag>
         </dc:subject>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2022-12-09T14:55:26+05:00</xmp:CreateDate>
         <xmp:ModifyDate>2022-12-09T14:55:26+05:00</xmp:ModifyDate>
         <xmp:MetadataDate>2022-12-09T14:55:26+05:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>220</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBkAGQAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABkAAAAAEA&#xA;AQGQAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA3AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9O5Ni7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWwrHcAkYEt8H/AJT92Ku4P/Kf&#xA;uxV3B/5T92KrcKHYq7FXYql+u67puh6e1/qDssIZY0WNHlkeRzRI0jjDMzMegAxUlIIfzL00Xtrb&#xA;appWqaKl9IsFndahbCOB5X+xHzjeXgzdg4XDSOJMPM3nKy0C7sLOWyvb+71ETNbQWEPrvxt+HqFh&#xA;yWgHqrgpJLWh+b/0tem1/Quq6fRC/r31r6MWxA48uTfEa7DGlBTbUr+Ows2upFZ0Vo0KrStZHWMd&#xA;fdsVSO88821vY6nfLavNbabcrYVSSLm9006W/AqWHpj1JF+JyPh+LpSrSLQ0X5l6Qy6OZLaeM6y/&#xA;ow14MqTi6W0MbOrMp+MsysPhZV2O4BNLxNL+ZenG51eE2Nwf0Ws7RlDC7XH1a4NpIFQPVD6wovqU&#xA;qN8aXiRI892guNDtpLSUT63JcRKqFGEMlq4jlWRqgbO1NvDx2wUtqMv5kaT+jdVvbW3nvG0q9NhJ&#xA;bQBXllfkFDRKpPIMahe5Iw0to8ebrV9VfSo7S5a9RigUxlULC1S64+qf3QakgXjyrXfpvgpNo7Qt&#xA;Yj1jTItRiglt4Zy3pJOoWQqpK8ioJoDTavbFQUwxV2KuxV2KuxV2KuxV2KuxV2KuxV2KoqL+7GRL&#xA;JJ/NnnXyr5R0z9J+ZNSh02zrxR5SSzt14xxoGdz7KpwKlnkz82Py+86XE1r5c1iO7vLdecto8ctv&#xA;OE2+MRTpE7LuKsoIFRirLcVQr/bb5nJIW4UOxV2KuxVg35qzLf6dZeUrUCXVtduoBEg3MMFvMk01&#xA;y/gqLHSvidsIRLuXeZ4tet/Puk6vZaLPq1ra6ddwqLd7dCs80sR+JriSJVHCM7jfEKeaY6R54gu9&#xA;ZXQ9S0270TV5UaW2t7wRlJ1Td/QmheWNyg3Za1pv0wUtp/fQPPavEixM5oVE6epHVWDAstVrSm2/&#xA;XDGr35Mcglw+muLz5foSceXZpLieS6t9KlW+4pqJ+pHnPGKfDIzSNy2G3IHLjLFWwl8x+pxow1F7&#xA;mFdfSf8Ails+harzSO1TSY7O34rZQvZOxiSJ1kiUcZlUcHRWHEChAIwROOtxK/eP1Obsu/QV+kcs&#xA;tvFpUeoX3IarcfUm43C9EDgShmopIPNmyBMb2umzF4e/GCfcQP0FvTtBvITEl3DpbW1srfVYreza&#xA;IxuZFlqvKRwo9RA5oPtAHqMjIitubOZw16RL4kfqVY9GuYypji05CojVStqRRYSzRAUk6Rl2K+FT&#xA;TMLh1P8AOh/pT/xTK8HdP5j/AIlFy2Ev1n14UtVkLeoZGhJf1CgjL8gy78FC18NslkGe/SYAeYJ/&#xA;3wa4nHW4PzH6layt5LeERMIlRNo0gQxqo8ONWyzCMlesxPuBH3ksZ8P8N/FEZc1uxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxVFRf3YyJZPlX/nM7S9ZXWtC1cu36Jazks7Jg3BIb/1hJIWYkKplt9l8ePtgV5j&#xA;/wA48aZrdz+a/l+PTxJFPaXYuZAzfFFYxxuboP04rKJFUVX4idsVffWKoV/tt8zkkLcKHYq7FWNe&#xA;fvPGneTtD/SN2PUmmkFvZW9eIkncEqGc7IgAJZj0HvtiBaCaYf5Q85flzpT3Grat5ptNQ8y6kAdQ&#xA;vasERRutvbqV+CGPt3Y7n2JBQCGZ6n+YPlHSryK11O/WyNxEk9tcTo6W8iPWnCYj067dOVcFJsMf&#xA;n1vT/OHnLy+PLx+u2OhTzXmo6tGp+rpygeFII5CKSO5kqePQDCi7LLPN13f2flTWrzTiV1C2sLma&#xA;zZVDsJo4WaMhCGDHkBsRvgDIvPZPzD89addS2N5p7z30NxFaSf6K7W7+mqiWaOSNkKiZXEq1DU3G&#xA;wUnJUxsoXUvzU862tzFNJpQth6c1oLeRGKyXkMlskrKC0fJebyrH+8HwqW3xpeIou1/MnzdqF9FB&#xA;BFFFZqbeS51JLOaSExsypKY6TPzjYyKyP8J470oa4KWypaV+ZXn2ZbCy/RAE08Ngj3FzBc/u3uja&#xA;IZ5XAjjdXNxIeKEFfTNfY0tl6X5e1G51HRrW8uoRb3Mqn1ohWgdWKmnLeh41FciyCY4q7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FUVF/djIlk8T/ADs89aDq/l/V/Jup+TfNF6LhXS11C10stAtxFvFN&#xA;FI8iFgr0Ow3G3Q4Feaf8476/YflzZ3y33k3zJqmvanIqyahp2mtNEsKfYhj5tHJsSWf4eu1PhBxV&#xA;9W6Nqa6pplvfrbXFmLheX1W8iMFwlCRSSNt1O2Krn+23zOSQtwodiriaAmlfbFVL1pP98P8Aen/N&#xA;WNIt3rSf74f70/5qxpbaaR2BVrdypFCDwoR/wWNLbYlcAAW7gDYAFP8AmrGlt3rSf74f70/5qxpb&#xA;d60n++H+9P8AmrGltC6lYWGp24t9R01LyBWDrFOkUihhUBgGJFaE4V+CvDSGJIYbUxwxqEjjT01V&#xA;VUUCqA1AAMC2v9aT/fD/AHp/zVjS271pP98P96f81Y0tu9aT/fD/AHp/zVjS271pP98P96f81Y0t&#xA;u9aT/fD/AHp/zVjS271pP98P96f81Y0tu9aT/fD/AHp/zVjS271pP98P96f81Y0tu9aT/fD/AHp/&#xA;zVjS271pP98P96f81Y0tu9aT/fD/AHp/zVjS271pP98P96f81Y0tu9aT/fD/AHp/zVjS271pP98P&#xA;96f81Y0tu9aT/fD/AHp/zVjS2qKSVBKlT4GlfwrilERyoEAJ3yJCV3rR+P68aS71o/H9eNK71o/H&#xA;9eNKh2NWJHc4UNYUOxVsCpp44pX+hJ7YLWnehJ7Y2tO9CT2xtaaaJ1FT0GNqtVSxoOpxVf6Entja&#xA;070JPbG1p3oSe2NrTTRsoqemNq0qFjQYqu9CT2xtad6Entja070JPbG1pa6MtK98VckbNWnbG1Xe&#xA;hJ7Y2tO9CT2xtad6Entja0tZCpocVbWNmFR0xtW/Qk9sbWnehJ7Y2tO9CT2xtaWMpU0PUYquELkA&#xA;jocbVv0JPbG1p3oSe2NrTvQk9sbWlMihp4YVdih2Krk+2vzGBKJZlVSzEKqirMdgAO5yKXmC/nTq&#xA;Gt3UyeQPKF/5ssLd2jl1gTQafYu6mjC3nuSBNxIoaDFU48mfmtp+v6xL5d1TTbvy15qhj9U6NqKq&#xA;GljHWS1lUlJ0Hcrv7UxVm0v92cIVQh/vB/n2wlCJyKXlPnf/AJyB0Xyp+Ydn5NuNKurlpjbLdX0Z&#xA;osRu24xlUKn1AKjkeQ8BUimKvR7vW9PtdWsdKmZxe6isrWirFIyEQANJykVSiUDD7RFcVRc/2Ppw&#xA;hSst/tn5YSgLdS1Kx0zTrrUr+Zbexsonnurh/spFGpZ2NPADIpeAz/8AOZXlpNU9KLy7eS6Xy+G6&#xA;+sW6XLRno62jHl8QIKguKjfFXvGga9pXmDRbPWtJuFutNv4lmtp1qOSt4g7gg7EHcHbFUTcfs/Th&#xA;CC3b9GxKhu6ura0tpbq6lS3toEaSeeVgkaIoqzOzUCgDck4EsIsPz0/KO/vY7O28z2ZmmlaCFnLx&#xA;RPIgUlVlkVYz9taUbeu2Ks7xVQuPtj5ZIIK+D7H04CkPJdU/5ya8kaL5x1Lyvrllf2U2nzmBb9Ih&#xA;PbSAEKGqh9Rfian2CK98CsZvP+c0PIaXkiWGj6jd2UC8prpvRhYjmqfu4yzcvt/tFcVet/lz+Y/l&#xA;z8wNBfW9A9cWsU7Ws0dzH6UqTIiSFSAWU/DKpqpIxVkE394f8+2SCFeP+7X5YCl5/wDmP+efkjyB&#xA;qMGm6t9YudQmjEzW1osJMcbFgrSPPLBGOXBuK8uRp0wKnumfmN5Ov/JyecBqMdroB2lu7v8Acei4&#xA;l9AxzB6cHEvwUPfFU+sNQsNRsob7T7mK7srhRJb3MDrJFIh6MjqSrD5Yqsf7bfM5JC3Ch2Krk+2v&#xA;zGBLBP8AnIe+vbL8mvMstpK0EkkUFvLKgJKwXN1FBcGg3/uZHrkUvMPO/wCXWq+cPzW0LyAbK60/&#xA;8uNF0YSWcljcBbc0DKl1yMbK0gYonpkFqjlXixOKpVouoX9z+S/k/Xb28e58yeXPNcNjol7JVriW&#xA;N7r0Xti9SzK8LGq13CgdsVfU8v8AdnCFUIf7wf59sJQhPMWn295YI9ze3FhBYzRX0k1tK0JK2zeo&#xA;ySFftRMFo69xkUvjTz5+fEutfmvo/miHy1YFdDYnR5bkysZ7apZJp3RgP3e8kfEfu2rXlSmKvrf8&#xA;tPP+m+ffJ1l5l0+J7eO5LpNayEF4pYmKOhI2PSoPgRirJJ/sfThClZb/AGz8sJQEl/MPyxJ5p8j6&#xA;35eil9CbU7OWCGU9FkK1Qt/k8gK+2RS/Oi7024ttenhuAYNUguzFNpaJILgXKyUeKMIrJtJ8I+Kv&#xA;t2xV+gn5NeS7nyX+Wmh+Xrty95bQtJdgmoSa4kaeSNe3FHkKinWle+KsuuP2fpwhBbt+jYlQ8F/5&#xA;zK1PWYPIOlabYu8drqmoCK94V/eenE0kUJp/O4qB3KjAl8nTTXEOkQ2zWzvpEc8jwXRZgtxy9NH4&#xA;q5KV4Doo5L/sWqq+5v8AnHDVtX1X8mfLl1qrNJcrHNBHNIas8ME8kUJPfZEC79aV74q9DuPtj5ZI&#xA;IK+D7H04CkPz6/O6Vv8AleHmNPhoNSC/YXlQlG+1SvUda+3TArB7RlmgvUhh4t6JO5B29WHbovTi&#xA;Tir7D/5wsVl/K3VAwof03OfoNnaEYq91m/vD/n2yQQrx/wB2vywFL88PzS88at5x866nealbWr3d&#xA;vKbIQxiSNZI7eSSOKQ/vK+onOhoaEGtNicCopfzL81P+Xv8AgGI6SfL+rSSzzSSSBLhpYZxcs8re&#xA;rH6POSMempQVWgFeuKvr/wD5xyYP+SvldgoQGGYhFrQf6VLsKkn7zirPn+23zOSQtwodiq5Ptr8x&#xA;gSs1rRtO1vSLzSNThFxp9/C9vdQnblHIpVhUbg77EdMil5jpFj+dvkO1TQ9OsLPzz5ftQItJuJrw&#xA;adqEMKiiRXBkSSKQRiiqy7kdfAKqfkz8qdeutcsNb83WunaPpmizPeaD5Q0erWsV5L9q8upCFEs4&#xA;/Y4ig6jvVV67L/dnCFUIf7wf59sJQvvrO3vrK4srledtdRvDMnSqSKVYVHiDkUvkLW/+cUPzE0xZ&#xA;rTRjbazZrdkWEzTLBMtnPFJHMJPUChG3XZeYJ3AG4ZV9Ifk/+Xo8geQtP8uNP9Zuouc17OKhWnmb&#xA;k4QH9ldlHjSuKsvn+x9OEKVlv9s/LCUBI/Ot/wCfbO0ibyhpFjqtwxPrre3b2vAbceCiJw9d61da&#xA;e/aKXzxqP5Z/nVf/AJmRfmLJ5G0tdYgdJFsPrkRtJJo1Kx3En74P6qfD0oCQG2oeSr3jyLqv5q3s&#xA;jDzloOnaVCEqstnevNIZNvh9H02WnXf1dvA4qyy4/Z+nCEFu36NiVCUedPJfl/zn5dudA1639ewu&#xA;QDVTxkjkXdJYm34up6H6DUVGBLxaL/nDjy081vHf+Ybu60yCeWY26QQwzyCURjjJcCvL+6FW4VPt&#xA;ir3vS9L0/StNtdM06BbawsokgtbdPspHGAqqK+AGKr7j7Y+WSCCvg+x9OApD5Z/Nv/nF7z5rXn7U&#xA;PNmhXNle22oXa3LWTu0E6fZqBzBjalOvMfLAqT6H/wA4Z+fxpl1Lea5YWOoTQ+nb28ZmlAq6sRJK&#xA;FTjstPhVuuKvbv8AnHT8uPM35f8AkzUdE8xGF7yTVJbmGW3kMsbwG2t4kILBGG8JFCoxV6XN/eH/&#xA;AD7ZIIV4/wC7X5YCl8d61/zhx+Z99rWoX0GqaKkV3cTTRhp7sMEldmAalqRWjb74Fbt/+cRfzlhF&#xA;mi65oaR2Xqi3pLcMUWfaXrafFWvc4q+ofy38nDyZ5H0jyyLn62dNhMb3PHgHd3aRyF3ovJzT2xVO&#xA;n+23zOSQtwodiramjA+BwJRHrx4KTbvXjxpbd68eNLa2SVChA6nEBClGwVwT0wlVf148FJt3rx40&#xA;tu9ePGltZLIrLQeOICFkTBWJPhhKq3rx4KTbvXjxpbd68eNLalM6tSnbCENwyKta98SFVPXjwUm3&#xA;evHjS27148aW1GVgzAjwwhC+KRVWh8cBCr/XjxpNu9ePGlt3rx40tqEjBnJHTCEKqTIEAPUYKVd6&#xA;8eNJt3rx40tu9ePGltDsasT4nChrCh2KtgVIHjilV+rn+bI2tO+rn+bG1p31c/zY2tNNCVUmvTDa&#xA;0sReTBelcVVPq5/mwWtO+rn+bG1p31c/zY2tLXi4LWtcNqtjTmaVp3xKqn1c/wA2C1p31c/zY2tO&#xA;+rn+bG1pZJHwpvWuEFXRx8670piSq/6uf5sFrTvq5/mxtad9XP8ANja0pyJwNK174Qq5Iua1rTG1&#xA;XfVz/Ngtad9XP82NrTvq5/mxtaUnXixHhhVUWAsoNeuNrTf1c/zYLWnfVz/Nja076uf5sbWlIihI&#xA;8MkrWKHYquT7a/MYEr76+s7CyuL69mW3s7WN5rmeQ8USONSzux7AAVyKXgX/ACv781/OV9dn8pvJ&#xA;aalotm5i/S2qExpMy9eAaa0RTQg8PUZqUJArTFWRflr+fd7q/mo+R/PWhv5Y83FS1tExb6vc0Bai&#xA;c91JUEr8TK1Nmrtir2CX+7OEKoQ/3g/z7YShE5FLzP8AMr8yfOHlrz55O8v6Ro0V9p/mKf0bm6k5&#xA;lqiRRIkZQhYzHExlLOGBA2GxOKvTMVU5/sfThClZb/bPywlAYR+cP5nX35f6BBqVpoF1rbTzLCWg&#xA;p6MPIgVmYcnBatEAWhO3IZFLG/Kf/ORQ1vzdpPlu+8n6vocusPJHa3V8npoWiiaQ7MqFtl3p0rir&#xA;2LFVG4/Z+nCEFu36NiVCF1fWrPS0h9YSTXFy/pWlpAvOaaSleKLt0AqzMQqjdiBgS870n89tDvfz&#xA;R8yeUCyy2ej20ElncWyvPJNMhpeKqxhmf0/VT4UFaI53xV6dZ3lre2kN5aTJcWtwiywTxsGR43HJ&#xA;WVhsQQag4qtuPtj5ZIIK+D7H04CkPGvNvn78+7HzLqNponlmG60mCZksrg6fPOXiH2WMi38Aavsg&#xA;wKq/nT+dfmPyD5Z8vX9jp1rcXuqMY9RluObW9tLHErvCVjdX5uWbj8RoFOzHbFXqflrVLjVvLmla&#xA;rc2zWVxqFnb3U1m1S0LzRLI0RqBuhbj0xVETf3h/z7ZIIV4/7tflgKXk356/nvH+XC2mnafZpf69&#xA;exG5pOXW3trYP6Ymm4Dm3OT4VVad9+gIViv5Q/8AOT+oeZPNNt5Z82afa211fv6Vnf6es8cSzkFk&#xA;gmhueTqZFX4WDbnanUhV9C4qhX+23zOSQtwodiq5Ptr8xgS8+/5yTW+b8kfNIseXrejAX4dfRF1E&#xA;Z/o9LlX2yKWKaXF50uv+ce/LA/Ki8tbQrp8C3wWL1LozGi3notX01kWUyM1VqT0IOKpZ/wA5MC0/&#xA;xz+WFvprcvNa6nGbYqazfV/WiCtIevH1R8Nf8r3xV9Dy/wB2cIVQh/vB/n2wlCJyKX5/effPHmiX&#xA;807srreoQWY1m7MUYupgkcZ1CeMcAG4gLF8G3bbFX2N+Req3WrflH5Xvrqd7q5ksws1xKSzu0TtG&#xA;SzNux+DqeuKs3n+x9OEKVlv9s/LCUBhP5wfmpZfl3oUF/daRd6sLyUQIlulYUJI/vpTVU5A/AvVi&#xA;Ke4il4b+ZH5u3vn7zz5B07yjBqflbURezwLqOr2EAZXu/RiV4AXmrwXnzoV6jFXsf5PeQPzG8r3O&#xA;sz+bvNTa5FfXEj2tmEAjUs/I3FSKxtJufST4BWpqeir0a4/Z+nCEFu36NiVDx38+NL/OC9nSPyRc&#xA;aahurO4tI4OZi1WSKQI10lu07ehvwUkpxcU67bBL5E8saP5suPNNrpXlu2k/xTbzqbC0hi9G7trm&#xA;3cMzTSOkQHphW5lmpXqPBV9vfkrZfmJaeXJI/OF1pdyTPO0R03kZFnadzdLOy0g5CfmCsSgKajFW&#xA;e3H2x8skEFfB9j6cBSHgf/OV/mbXbWy0jy/YTta2OoJdXN+6TxW5mFvHWOBjIRyiJr6i0NRStANw&#xA;r5e0AXyXCSzQ2d2bIRSR2xu7eRJ5Fug379GlYycml3UMoagxV+jdnO1xZwXDRmJpo0kaJuqFlB4n&#xA;3FaYqsm/vD/n2yQQrx/3a/LAUvnL/nL/AMgz3GmWfnuxjZ5dNiXT9VKfbS2ab1YJ07fupzRvEP2p&#xA;UBXnf/OL3kiXzT5//Trczonl6SO7eRkWFXvAri2ijjRmVQhkeRqMeg2HLFX2niqFf7bfM5JC3Ch2&#xA;Krk+2vzGBKtdW1vd20trcxLNbTo0U8LgMjo44srA7EEGhyKXgcv/ADjj538sahdzflb53m0LTL1y&#xA;76RdBpIoy2x4v+8DUGylo+VAKseuKsj/ACy/IGLy35jfzj5r1qbzV5wcER31wCI4KrxPph2dmbjV&#xA;QxIAXYKMVety/wB2cIVQh/vB/n2wlCJyKXybqv8AziH59v8AWItQOsaUAkskpjrcioe5kuKf3R/3&#xA;7TFX0B+T/kzVPJX5d6T5Y1O4iu7zTvXV7iAuY2WW4kmTjzCt8KyBenbFWXT/AGPpwhSst/tn5YSg&#xA;IbVU1GZfQhsLS9tZF/epdzNGCa9OAgnVh8zkUvOPzG/Lvzx5r86eRvMFvHpltD5TvJbq4gkvLhmm&#xA;WV4GCoRaUBHoHr44q9Js5tdeYC8s7WGChq8NzJM9e3wtbxD/AIbFURcfs/ThCC3b9GxKhQ1XR9N1&#xA;a1+q6hAJolYSRmrI8ci/ZkikQq8br+y6EMOxwJefaX+SGj2X5k+YfNwnkSHWbS2t4ooZpY50dafW&#xA;y0wPqfvvRjPNX5kl6nxVej2dnaWVpDaWkKW9rboI4YYwFREUUCqB0AxVq4+2Plkggr4PsfTgKQwr&#xA;82fyo0v8w9HgtZ7hrDUbJnaxvkXmAsgCywyx1XnFKAOS1HQb4FeU+UP+cRjZarBceYdZgubCI/6T&#xA;Z2FuLc3SLIzCOWQceMbjhzUA1pSo64q+jwAoAAoBsAOgGKoab+8P+fbJBCvH/dr8sBS8r88eS/zz&#xA;1oX9pp/mrRl0a9SSFrCbTSoaGUcTHIztdE/AachSvgOwVi3kD8m/zy8l2J0nQ/NOjado5m9c24sz&#xA;dOzuFWRnd44XY/DtVvbYAYq9z0eHVodMt4tXuob3UUWlzdW8JtonapoViaSYrtT9s+O3TFVz/bb5&#xA;nJIW4UOxVtTRgfA4Eq31hfA4KW3fWF8DjS276wvgcaW2nmVlIAO+NLamjcWB8MKqv1hfA4KW3fWF&#xA;8DjS276wvgcaW1skoZaAYQFWxOEap8MSqp9YXwOClt31hfA40tu+sL4HGltZLIHpQdMICuikCVqO&#xA;uJCr/rC+BwUtu+sL4HGlt31hfA40tqcrh2qPDCFXRyhVoRiQq76wvgcFLbvrC+Bxpbd9YXwONLak&#xA;7cmJ8cKqiTKFAIO2Cltv6wvgcaW3fWF8DjS276wvgcaW1FjVifE5JWsUOxVtRVgPE4pVvq6+JyNr&#xA;Tvq6+Jxtad9XXxONrTTwqqkgnbG1pTRQzgHvhKqv1dfE4LWnfV18Tja076uvicbWlskQVagnCCq2&#xA;JA7UPhiVVPq6+JwWtO+rr4nG1p31dfE42tLJYwlKHrhBV0UYetT0xJVf9XXxOC1p31dfE42tO+rr&#xA;4nG1pTlQI1B4YQq6OIMtSTiSq76uvicFrTvq6+Jxtad9XXxONrSk68WI8MKqiQqVBqd8FrTf1dfE&#xA;42tO+rr4nG1p31dfE42tKJFCR4ZJWsUOxVcn21+YwJRWRS+bf+ckfz486eUfM0egeWpl06O1ghnv&#xA;LwRQyzTSXPqcI0FwksaRqkRJbiSW22xVm/8Azjl+aWvefPLN9+ngsuqaVNFG99HGIlniuIhLGzIv&#xA;wLIu4YLt0xV6zL/dnCFUIf7wf59sJQ7U75LDTbu/dS6WkMk7INiwjQuQK+NMil8fav8A85ZebLrz&#xA;rb6ppd7cWHlVZ7Zp/L7QafI7xIU9eP6y49VfVo3xfs19sVe1flb/AM5KeXfP/mZ/LtvpF9Y3nptJ&#xA;HKQtzARH9rnJDURj+Vm+E9K1IBVeuT/Y+nCFKy3+2flhKA8s/wCck/Onnvyf5LtNX8qzC0QXix6p&#xA;f+kk7wxMp9OiyrKgV5KIWKHcjxyKWReUvOOtP5M0X9OwG486XljHPdaZZxhpFeRao8yFoo4ARQt6&#xA;jovKqg1xVA/lpoX532Oq3F15+8yafqunTQfuNOs7ZEaKcsGqJVigPFVqvxcq+2KvQLj9n6cIQW7f&#xA;o2JUMd/M3zrH5I8h6x5oeH6w2nQqYYDUB5pZFhhViNwpkkXl7YEvkrS/+cq/zatfMrS319DqNnA7&#xA;vc6Uba3hgZI/ilSKREWdOKq3Bmdq7VXtir7T0vUbfU9MtNRtiTbXsMdxCT14SoHWv0Niq64+2Plk&#xA;ggr4PsfTgKQ+ZPzr/wCchfOmn+drzy55WvIdGsdJf0brUJIo5ZJZgsZk5etHcBEVpkRQkTMTUkgd&#xA;ArMf+cd/zn13zldap5a8ytFc61pSest/Aqp6sYlMMiyrH+65pJTiyUDKQaA1xV7diqGm/vD/AJ9s&#xA;kEK8f92vywFKF1m51G10q7uNNs/0hqEcTNaWXqJEJZafApkchVBPU+HjgVgf5B+d/OPnLyImreab&#xA;Fba9M8qQ3KBUWeNXIr6NeUZQjhv1AB7nFXpGKoV/tt8zkkLcKHYquT7a/MYEqOv+YNG8v6TPq+tX&#xA;cdjpltw+sXUpIRPUdY0rSvV3AyKXyp/zk9q/5decE03zF5S8w2V95gswLG7sENWuLV35x0VxxYxS&#xA;mvHuGr+yMVeifkb5n/KTyH5MsPL8vmvT7jzBqMgutTeKb1ud5ccVEauoYHgAqDfele+KvdZf7s4Q&#xA;qhD/AHg/z7YShj/5medJ/JvlC81+HRrnXWt6A2NrQHi3WSVqOVjX9pgjU8KVIil8Y+YPzUv9a/M6&#xA;084xaFd2MMFzZT/oBLtlt5BalCyMxtkQLLw+Kq9++Kvrj8mPP6+e/Ll7rJ0BfL0tvfPYtarKs/MR&#xA;xRSiT1Fig2PrUpQ9OuKs7n+x9OEKVlv9s/LCUBjX5hfl1ZedtOFldarqWmoqOtLC5aKKQsNvXh3j&#xA;lCsAQGGRSwXX/N+p/lz+Ud5Lo2nibzBotzFba2bx5LjjJcOOV/I7MktxHLyBjZn70YjgyhVl/wCT&#xA;PnXW/On5faf5h1mzjtLy6aZf3IZY5UikZFmRGLsgfj0LHxGxGKsxuP2fpwhBbt+jYlQxTztYp5ne&#xA;fyJqWiXc2g61p8zXWuxtCILeWN09JKM3P1ORDr8PUDZhzKhL5U8kf8493Ws/nFr/AJL1i+ddJ8vc&#xA;Jr69jhRJrqJ2RoEDVJjaeN+TNVunfFX2nYvp4iNrYvGY7Ii2aKJgwiZEUiNgD8JCMux7UxVu4+2P&#xA;lkggr4PsfTgKQ+efzk/5xo1nzH5vm8zeWbi1Iv29W+0+7cxcZjGsTvE/pXCMsiopZXXZhVTvTAqU&#xA;eSNEuP8AnH7WoNU85wJdWHmKNbKXWrJ5JU08rI0hjm5Ro0xlZlYsN/hbitE3VfTlrdW13bRXVrKk&#xA;9tOiyQTxsHR0cVVlYVBBBqCMVU5v7w/59skEK8f92vywFLwXzn+S35q3195zv4PP7pYazbxLa2tw&#xA;ojSSNDKfqczrxFvEgfiGiHx825DxCvPPyr/Kfz75o/Ku5n8secf0XZX9/FJDo8Y/d1tp4w1xJMEh&#xA;khkQxF1EafFxWpqa4q+sNAsL/T9FsrHUNQk1W9t4ljuNRlRI3ndRu5RPhWv+ZJ3xVVf7bfM5JC3C&#xA;h2Krk+2vzGBKU+ffJ1r5y8p33lu7up7K3v8A0ud1akLMnozJMOJYMNzHQ7dMil5B/wBCd+Vf+pp1&#xA;z/kbD/1TxVEad/ziP5YsdQtr1PM+tSPaypMqPLFxYxsGAakfQ0xV7rL/AHZwhVCH+8H+fbCUInIp&#xA;eT+Zv+ce9G1781LP8w5tWuIb20ubK6WxSNDEzWBQqpY/FRvS3xV6xiqnP9j6cIUrLf7Z+WEoCvkU&#xA;sS8+eQf8U27JbapLpE89vJY30sUMFwtzZy/at5o50dSAd0YUZatxI5GqqY+SvLdz5a8uWuiz6lJq&#xA;gs1EVvPJDBb8IUAWOJY7dI14oq9TUnucVTa4/Z+nCEFu36NiVCEurLVpJ2e31H0IjTjF6KPSgAPx&#xA;E1NTvgSlNn5OurPW9R1q31LhqGqpbx30ot4vjFoHWL7hKRiqI8s+ULDQLnUri0WFJNVnN1fNDAkJ&#xA;knYUaRyvUn7q1PUnFU3uPtj5ZIIK+D7H04CkKmBUBruhaRr+kXWj6xape6beoY7i3kFVZT+IIO4I&#xA;3B3G+KpN+XHkGx8ieWl8vWF7dX1nFNLLbteOHaNJGqIk4hQEX9dT3xVP5v7w/wCfbJBCvH/dr8sB&#xA;SoanplhqmnXOm6hAlzY3kbQ3NvIKo8bjiyke4OBWPflx+W3lr8v9AOi6DGwheV557iUhppXc7GRg&#xA;BXitFG3QYqyrFUK/22+ZySFuFDsVbBoQfDFKt9YH8uRpbd9YH8uNLbvrA/lxpbWvNyUilK4aW1iN&#xA;xYHwxVV+sD+XBS276wP5caW3fWB/LjS2skl5rSlMICtRvwatK7UxKqn1gfy4KW3fWB/LjS276wP5&#xA;caW1OSTnTalMICujk4V2rXEhVT6wP5cFLbvrA/lxpbd9YH8uNLanI/Nq0ptTCFbjlCLQiuJCr/rA&#xA;8MFLbvrA8MaW3fWB4Y0tqTtyYnxwqvSfioFK0xpbXfWB/Lgpbd9YH8uNLbvrA/lxpbUSaknxyStY&#xA;odirairAeJwJRHox+H68Fpd6Mfh+vG1d6Mfh+vG1WyRIEJA3xBQpRgM4B6YSqv6Mfh+vBaXejH4f&#xA;rxtXejH4frxtVksaKtQKGuIKFsKqzEEVFMJVV9GPw/XgtLvRj8P142rvRj8P142qnMirTiKVrhCC&#xA;6FFYHkK0xKqnox+H68Fpd6Mfh+vG1d6Mfh+vG1UplVWAAoKYQhdFGjLUiprgJVf6Mfh+vG0u9GPw&#xA;/Xjau9GPw/XjaqEihXIHTCEKyRIUBI3OC1b9GPw/XjaXejH4frxtXejH4frxtUOwoxHgcKGsKHYq&#xA;uT7a/MYEq88yQQSTPyKRKXYIrO1FFTxRAzMfYCpyKXyr/wA5UebTpt55Y1zy/qN7HNr9rLNc2bXd&#xA;7a+nDGIfq7/VYpYGiL+o9eS7kexxV7T+TAvz5J8tXNtcpf6RqGlpe391PdzXV0upTLG0kKGQyUij&#xA;PqKVZyynbtuq9Cl/uzhCqEP94P8APthKFDzDq6aNoGp6w8ZmTTbSe7aJftOII2kKigO540yKX5/6&#xA;/wDmN+YHmHVptX1HWbo3khR4xBczQw2/qKbiNLdYmVIQsa/aevxdejNir6q/5xf/ADH17zh5QvrX&#xA;XZ3vb/RZ44k1CQfHNbzx+pF6p6GRdwx+Vd9yq9in+x9OEKVlv9s/LCUBgf5q+c/zM8u3GnJ5M8qf&#xA;4kiuUla9fky+iyFQg+Ej7QY/dkUvCvzD/M/887vXfKk2o+WJ/LtxZ3yTafYQzyqmpzG4t1FrKAw5&#xA;KSwFD/Nir2X8tPP/AObuveY2sfNvkr/D+lC3eVb/AJs1ZVZQsdCT9oEn6MVem3H7P04Qgt2/RsSo&#xA;Y/8AmL5muvLvknX9X09Fn1PTtPnu7a3PxGqKeMjJ1KId29hgS+GNJ/OT8zrPzINaTzJqMt+iC6mW&#xA;6uGezkqvqGJ7beMRvURoopQkUptRV+g1jPJcWVvcSxNBLNGkjwP9pGZQSje6nbFWrj7Y+WSCCvg+&#xA;x9OApD5p/wCcqL38y9HhuNRsPNRTyrM8CQ6bbtHb3lte71HqQIkzQlFY/HId2pTYHArwfyX5z/Ma&#xA;783aNZ6X5qvjqNzKqWzXV3M9ulw4IiMqy80Kq9CwZWWnj0xV94fl/beZLfytZx+ZdZTXddoWv72F&#xA;IY4hI2/pRiBIl4p0qRU9fYKpzN/eH/PtkghXj/u1+WApS/zNBBN5f1CO5vZ9OtTA5ub20YpPFEo5&#xA;SNGyhmVuANCoqO2+BWPflLfaJqHlJb/RtRnv7S5lLulxJPKLWf00We2ia5rN6aSqzAOzULGhpQBV&#xA;meKoV/tt8zkkLcKHYquT7a/MYEorIpfFv5j/APOOP5yanq+rea9XuNOuJL269RuNw5ek0oiiReUQ&#xA;AVAyqBWgAxV6x/zjP+V35nfl9daxZeY/QXQr6NJoIYpxNxu0YKWCgfDzjPxHvxXwxV7xL/dnCFUI&#xA;f7wf59sJQpazDqc9l6WnG3EryRCcXaNJE1uZB668VK/EYuQWu1eu2RS+BPzf8i6p+Xvny+8t20TS&#xA;6deUm0RvjLPbTOSiUQj1GRy0RDg18N8VfX/5G+UdO8jeVbfynNMreaHhXV9djFS3qXbFAeVOLBPS&#xA;9PY/s174q9Gn+x9OEKVlv9s/LCUB4T/zlp560bT/ACzb+U5pby11bUTHfWVxCB9UKwScWiumWRZQ&#xA;rAk/Ch3AyKXkHm389/LWrP8AlpDpsOq3R8l3drJqE16sQnvVt2tmPHhNNV3e3OzHw3xV9E/lp/zk&#xA;Donn7zG2h2Wianp8y273Pr3qRrFxjZVK1V2NTzxV6bcfs/ThCC3b9GxKh55+Y35pflL5L1mnmIxz&#xA;+Y7q0+q/Vbe3NxePZyMW9FiBxVHfcI7CvhgS+QfKF1+X+nfmPFrN5Lezfl9p9699p9gVR7h2QloY&#xA;3g9Wn7viGkYV+ClQOeKvtD8tfzE8ueeDquoaDro1S0jkhpp7W5t5bENGRwfkA0glZGYN06gHbFWX&#xA;3H2x8skEFfB9j6cBSHyH/wA5Zxfl/wD4g1CW0ivLXzwIrZb+NowlncWfIFbhWoS8nIRx1DUoCCKj&#xA;Arwvy5FpbeYtNTXJnTSHUjUZLUhpo7UowmMfIOvMR1KilK9sVffv5ML5PX8utKXyfbXFv5fVWW0k&#xA;vI/TnnIaj3D9ORkep5UAPYcaYqy6b+8P+fbJBCvH/dr8sBS+PPzM/wCcntZ83aDfeX9N0mTQZEMs&#xA;k17BfG5aWCNXieGSGOGEhX51PJqbbgjArF/yy/OvXvyz1eVGtZdU0eVJreHRWlk022jnf6vL64Eq&#xA;TIGADCnEH4q1oQMVfZH5b+cv8aeSdL8z/U/qH6SR3+qer6/p8JXjp6nGPlXhX7IxVO3+23zOSQtw&#xA;odiq5Ptr8xgSisilC6npttqVm1pcgmFmjchTQ1idZF3/ANZBiqKxVbL/AHZwhVCH+8H+fbCUOvrS&#xA;4uUVYb2ayKmpaAQsW9j60co+7IpYtr/5X6R5g1XR9V1e/u7q/wBAma50uZksgYpGA3oLYBt1VgD3&#xA;AOKsgg0i9inWV9YvJgpHKN0swrgfssUt0anyYYqjp/sfThClZb/bPywlAVZI45EMcih0bZlYAgj3&#xA;ByKWL+afyz8q+ZtY8vavqcMn1vyvcfWtJ9F/TRZBJFIOagfEvKBdvnirKsVUbj9n6cIQW7fo2JUM&#xA;Y86flR+X3nSSObzHo0V5dxKEivFZ4LhVBqoE0LRuQpNQCaYEsNT/AJxT/Jlbh5m026f1AA8bXtzQ&#xA;itTUhwx5d/ixV6D5S8i+UPJ9k9l5a0qDTIJSDN6IJeQrXiZJGLSPSppyY0xVNrj7Y+WSCCvg+x9O&#xA;ApDH/Of5c+SfOlqlt5m0qPUEQgo/KSGUBSSF9aFo5eFTXjypXemBWMab/wA42/kppt/Bf2nlpBc2&#xA;ziSIyXV7MlR/NHLM8br4qykHvir0i3t4LeCO3t41ht4VWOGGNQqIiiiqqigAAFABiqjN/eH/AD7Z&#xA;IIV4/wC7X5YClj3n3yD5e886Gui68sr2KzLcAQuY25qrIPiAO1JDgVJPIX5I+RvI2tz61oMdyt9c&#xA;W72kjTzGRfTkeN2otBvWBcVZ9iqFf7bfM5JC3Ch2Ktg0IPhilV+sH+XI0tu+sH+XGlt31g/y40tt&#xA;PMWUilK4aW1NG4sD4Yqq/WD/AC4KW3fWD/LjS276wf5caW1skpcUpTCAq2N+BrSvbEqqfWD/AC4K&#xA;W3fWD/LjS276wf5caW1kknOm1KYQFdHJwrtWuJCr/rB/lwUtu+sH+XGlt31g/wAuNLanI/M1pTth&#xA;Cro5eC0pXEhV31j/ACfxwUtu+sf5P440tu+sf5P440tqbtyYt0rhVekxVQKVpjS239YP8uClt31g&#xA;/wAuNLbvrB/lxpbUiaknxyStYodirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVX/ALn/ACvwwJd+5/yvwxV37n/K/DFXfuf8r8MVd+5/yvwx&#xA;V37n/K/DFXfuf8r8MVd+5/yvwxV37n/K/DFXfuf8r8MVd+5/yvwxV37n/K/DFXfuf8r8MVd+5/yv&#xA;wxV37n/K/DFXfuf8r8MVd+5/yvwxV37n/K/DFXfuf8r8MVd+5/yvwxV37n/K/DFXfuf8r8MVd+5/&#xA;yvwxV37n/K/DFXfuf8r8MVd+5/yvwxV37n/K/DFXfuf8r8MVd+5/yvwxV37n/K/DFXfuf8r8MVd+&#xA;5/yvwxV//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:OriginalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:0D77E699A777ED11AC5B90F9F6F049F2</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:0D77E699A777ED11AC5B90F9F6F049F2</xmpMM:InstanceID>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:f1805ebb-d3fd-f541-a130-bcd48370ee1b</stRef:instanceID>
            <stRef:documentID>xmp.did:f1805ebb-d3fd-f541-a130-bcd48370ee1b</stRef:documentID>
            <stRef:originalDocumentID>uuid:65E6390686CF11DBA6E2D887CEACB407</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:657668f3-1036-d04e-9cbc-e16a93514d13</stEvt:instanceID>
                  <stEvt:when>2022-08-30T17:45:09+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:53cd870b-7f83-aa49-9f0c-d42970fa6261</stEvt:instanceID>
                  <stEvt:when>2022-08-30T17:53:35+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 24.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f1805ebb-d3fd-f541-a130-bcd48370ee1b</stEvt:instanceID>
                  <stEvt:when>2022-09-19T22:50:54-07:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator 26.5 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0D77E699A777ED11AC5B90F9F6F049F2</stEvt:instanceID>
                  <stEvt:when>2022-12-09T14:55:26+05:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/">
         <illustrator:StartupProfile>Web</illustrator:StartupProfile>
         <illustrator:CreatorSubTool>Adobe Illustrator</illustrator:CreatorSubTool>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>836.667969</stDim:w>
            <stDim:h>715.273438</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -715.273 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 715.273 li
836.668 715.273 li
836.668 0 li
cp
clp
836.668 715.273 mo
0 715.273 li
0 0 li
836.668 0 li
836.668 715.273 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.956863 .964706 .980392 rgb
f
177.334 307.637 mo
277.334 307.637 li
277.334 407.637 li
177.334 407.637 li
177.334 307.637 li
cp
1 1 1 rgb
f
304.667 307.637 mo
404.667 307.637 li
404.667 407.637 li
304.667 407.637 li
304.667 307.637 li
cp
f
50 307.637 mo
150 307.637 li
150 407.637 li
50 407.637 li
50 307.637 li
cp
f
559.334 436.455 mo
659.334 436.455 li
659.334 536.455 li
559.334 536.455 li
559.334 436.455 li
cp
f
432 436.455 mo
532 436.455 li
532 536.455 li
432 536.455 li
432 436.455 li
cp
f
304.667 436.455 mo
404.667 436.455 li
404.667 536.455 li
304.667 536.455 li
304.667 436.455 li
cp
f
177.334 436.455 mo
277.334 436.455 li
277.334 536.455 li
177.334 536.455 li
177.334 436.455 li
cp
f
50 436.455 mo
150 436.455 li
150 536.455 li
50 536.455 li
50 436.455 li
cp
f
559.334 178.818 mo
659.334 178.818 li
659.334 278.818 li
559.334 278.818 li
559.334 178.818 li
cp
f
432 178.818 mo
532 178.818 li
532 278.818 li
432 278.818 li
432 178.818 li
cp
f
304.667 178.818 mo
404.667 178.818 li
404.667 278.818 li
304.667 278.818 li
304.667 178.818 li
cp
f
177.334 178.818 mo
277.334 178.818 li
277.334 278.818 li
177.334 278.818 li
177.334 178.818 li
cp
f
50 178.818 mo
150 178.818 li
150 278.818 li
50 278.818 li
50 178.818 li
cp
f
50 148.358 mo
659.333 148.358 li
659.333 149.727 li
50 149.727 li
50 148.358 li
cp
.741176 .831373 .870588 rgb
f
686.668 178.818 mo
786.668 178.818 li
786.668 278.818 li
686.668 278.818 li
686.668 178.818 li
cp
1 1 1 rgb
f
432 307.637 mo
532 307.637 li
532 407.637 li
432 407.637 li
432 307.637 li
cp
f
559.334 307.637 mo
659.334 307.637 li
659.334 407.637 li
559.334 407.637 li
559.334 307.637 li
cp
f
686.668 307.637 mo
786.668 307.637 li
786.668 407.637 li
686.668 407.637 li
686.668 307.637 li
cp
f
686.668 50 mo
786.668 50 li
786.668 150 li
686.668 150 li
686.668 50 li
cp
f
559.334 565.273 mo
659.334 565.273 li
659.334 665.273 li
559.334 665.273 li
559.334 565.273 li
cp
f
559.334 436.455 mo
659.334 436.455 li
659.334 536.455 li
559.334 536.455 li
559.334 436.455 li
cp
f
559.334 565.273 mo
659.334 565.273 li
659.334 665.273 li
559.334 665.273 li
559.334 565.273 li
cp
f
686.668 436.455 mo
786.668 436.455 li
786.668 536.455 li
686.668 536.455 li
686.668 436.455 li
cp
f
686.668 565.273 mo
786.668 565.273 li
786.668 665.273 li
686.668 665.273 li
686.668 565.273 li
cp
f
432 565.273 mo
532 565.273 li
532 665.273 li
432 665.273 li
432 565.273 li
cp
f
304.667 565.273 mo
404.667 565.273 li
404.667 665.273 li
304.667 665.273 li
304.667 565.273 li
cp
f
177.334 565.273 mo
277.334 565.273 li
277.334 665.273 li
177.334 665.273 li
177.334 565.273 li
cp
f
50 565.273 mo
150 565.273 li
150 665.273 li
50 665.273 li
50 565.273 li
cp
f
177.334 88.502 mo
205.602 88.502 li
205.602 92.0195 li
177.334 92.0195 li
177.334 88.502 li
cp
.168627 .74902 .909804 rgb
f
213.633 88.502 mo
241.898 88.502 li
241.898 92.0195 li
213.633 92.0195 li
213.633 88.502 li
cp
.494118 .407843 .776471 rgb
f
249.929 88.502 mo
278.194 88.502 li
278.194 92.0195 li
249.929 92.0195 li
249.929 88.502 li
cp
.796078 .278431 .611765 rgb
f
286.227 88.502 mo
314.492 88.502 li
314.492 92.0195 li
286.227 92.0195 li
286.227 88.502 li
cp
.980392 .623529 .235294 rgb
f
322.523 88.502 mo
350.789 88.502 li
350.789 92.0195 li
322.523 92.0195 li
322.523 88.502 li
cp
.968627 .733333 .25098 rgb
f
180.475 67.9048 mo
180.475 80.894 li
178.799 80.894 li
178.799 67.9048 li
180.475 67.9048 li
cp
.164706 .223529 .258824 rgb
f
197.3 80.4702 mo
196.684 80.7783 195.45 81.0869 193.87 81.0869 cv
190.208 81.0869 187.453 78.7739 187.453 74.5151 cv
187.453 70.4487 190.208 67.6929 194.236 67.6929 cv
195.855 67.6929 196.876 68.0396 197.32 68.271 cv
196.915 69.6392 li
196.279 69.3311 195.374 69.0996 194.294 69.0996 cv
191.249 69.0996 189.226 71.0459 189.226 74.457 cv
189.226 77.6372 191.057 79.6797 194.217 79.6797 cv
195.238 79.6797 196.279 79.4678 196.954 79.1401 cv
197.3 80.4702 li
cp
f
204.836 74.4766 mo
204.836 77.2515 206.34 79.7378 208.98 79.7378 cv
211.64 79.7378 213.143 77.29 213.143 74.3418 cv
213.143 71.7593 211.794 69.061 209 69.061 cv
206.224 69.061 204.836 71.6245 204.836 74.4766 cv
cp
214.916 74.2646 mo
214.916 78.7354 212.199 81.106 208.884 81.106 cv
205.453 81.106 203.044 78.4463 203.044 74.5151 cv
203.044 70.3911 205.607 67.6929 209.077 67.6929 cv
212.623 67.6929 214.916 70.4102 214.916 74.2646 cv
cp
f
221.913 80.894 mo
221.913 67.9048 li
223.743 67.9048 li
227.906 74.4766 li
228.87 75.999 229.621 77.3672 230.238 78.6973 cv
230.276 78.6777 li
230.122 76.9434 230.083 75.3628 230.083 73.3394 cv
230.083 67.9048 li
231.664 67.9048 li
231.664 80.894 li
229.968 80.894 li
225.844 74.3032 li
224.938 72.8579 224.071 71.3735 223.416 69.9668 cv
223.358 69.9863 li
223.454 71.6245 223.493 73.1855 223.493 75.3438 cv
223.493 80.894 li
221.913 80.894 li
cp
f
240.434 74.4766 mo
240.434 77.2515 241.937 79.7378 244.577 79.7378 cv
247.237 79.7378 248.74 77.29 248.74 74.3418 cv
248.74 71.7593 247.391 69.061 244.597 69.061 cv
241.821 69.061 240.434 71.6245 240.434 74.4766 cv
cp
250.513 74.2646 mo
250.513 78.7354 247.796 81.106 244.481 81.106 cv
241.05 81.106 238.642 78.4463 238.642 74.5151 cv
238.642 70.3911 241.205 67.6929 244.674 67.6929 cv
248.22 67.6929 250.513 70.4102 250.513 74.2646 cv
cp
f
267.396 80.3159 mo
266.645 80.5859 265.161 81.0288 263.407 81.0288 cv
261.441 81.0288 259.823 80.5278 258.551 79.314 cv
257.433 78.2344 256.739 76.5 256.739 74.4766 cv
256.758 70.603 259.418 67.77 263.773 67.77 cv
265.277 67.77 266.452 68.0977 267.011 68.3672 cv
266.606 69.7358 li
265.913 69.4272 265.045 69.1768 263.735 69.1768 cv
260.574 69.1768 258.512 71.1426 258.512 74.3994 cv
258.512 77.6948 260.497 79.6416 263.523 79.6416 cv
264.622 79.6416 265.373 79.4873 265.758 79.2944 cv
265.758 75.4209 li
263.118 75.4209 li
263.118 74.0718 li
267.396 74.0718 li
267.396 80.3159 li
cp
f
276.455 73.9946 mo
278.17 73.9946 li
279.963 73.9946 281.1 73.0117 281.1 71.5278 cv
281.1 69.8511 279.886 69.1191 278.113 69.0996 cv
277.303 69.0996 276.725 69.1768 276.455 69.2539 cv
276.455 73.9946 li
cp
274.779 68.0781 mo
275.626 67.9048 276.841 67.8086 277.997 67.8086 cv
279.79 67.8086 280.946 68.1362 281.755 68.8682 cv
282.41 69.4468 282.776 70.333 282.776 71.335 cv
282.776 73.0503 281.697 74.1875 280.329 74.6499 cv
280.329 74.708 li
281.331 75.0547 281.929 75.9795 282.237 77.3286 cv
282.661 79.1401 282.969 80.3931 283.239 80.894 cv
281.504 80.894 li
281.292 80.5278 281.003 79.4102 280.637 77.7915 cv
280.252 75.999 279.558 75.3247 278.036 75.2666 cv
276.455 75.2666 li
276.455 80.894 li
274.779 80.894 li
274.779 68.0781 li
cp
f
296.421 75.498 mo
295.149 71.7593 li
294.86 70.9111 294.668 70.1401 294.475 69.3887 cv
294.437 69.3887 li
294.244 70.1597 294.032 70.9497 293.781 71.7397 cv
292.509 75.498 li
296.421 75.498 li
cp
292.163 76.8086 mo
290.813 80.894 li
289.079 80.894 li
293.492 67.9048 li
295.516 67.9048 li
299.948 80.894 li
298.156 80.894 li
296.769 76.8086 li
292.163 76.8086 li
cp
f
308.352 74.3223 mo
308.718 74.4189 309.181 74.457 309.74 74.457 cv
311.763 74.457 312.997 73.4746 312.997 71.6821 cv
312.997 69.9668 311.783 69.1382 309.933 69.1382 cv
309.2 69.1382 308.641 69.1958 308.352 69.2729 cv
308.352 74.3223 li
cp
306.676 68.0591 mo
307.485 67.9243 308.545 67.8086 309.894 67.8086 cv
311.551 67.8086 312.766 68.1938 313.537 68.8877 cv
314.25 69.5044 314.673 70.4487 314.673 71.605 cv
314.673 72.7808 314.327 73.7056 313.671 74.3804 cv
312.785 75.3247 311.339 75.8062 309.701 75.8062 cv
309.2 75.8062 308.738 75.7871 308.352 75.6904 cv
308.352 80.894 li
306.676 80.894 li
306.676 68.0591 li
cp
f
323.423 67.9048 mo
323.423 73.3394 li
329.706 73.3394 li
329.706 67.9048 li
331.402 67.9048 li
331.402 80.894 li
329.706 80.894 li
329.706 74.8042 li
323.423 74.8042 li
323.423 80.894 li
321.747 80.894 li
321.747 67.9048 li
323.423 67.9048 li
cp
f
341.887 80.894 mo
341.887 75.3823 li
337.782 67.9048 li
339.69 67.9048 li
341.521 71.4893 li
342.022 72.4722 342.408 73.2622 342.812 74.168 cv
342.851 74.168 li
343.217 73.3203 343.66 72.4722 344.161 71.4893 cv
346.031 67.9048 li
347.938 67.9048 li
343.583 75.3628 li
343.583 80.894 li
341.887 80.894 li
cp
f
106.076 130.008 mo
68.542 130.008 li
68.542 126.398 li
84.499 109.744 li
88.9834 105.095 92.1289 101.539 93.9336 99.0781 cv
95.7393 96.6172 97.0645 94.2656 97.9121 92.0234 cv
98.7598 89.7813 99.1846 87.4287 99.1846 84.9668 cv
99.1846 81.3848 98.0088 78.4727 95.6563 76.2305 cv
93.3037 73.9883 90.2559 72.8662 86.5098 72.8662 cv
81.5049 72.8662 76.7188 74.6855 72.1523 78.3223 cv
69.9365 75.4922 li
74.9414 71.2813 80.4932 69.1738 86.5908 69.1738 cv
91.8145 69.1738 95.9229 70.5693 98.918 73.3594 cv
101.912 76.1484 103.409 79.9902 103.409 84.8848 cv
103.409 88.8506 102.404 92.6865 100.395 96.3916 cv
98.3848 100.098 94.7129 104.671 89.3799 110.113 cv
73.998 125.906 li
73.998 126.07 li
106.076 126.07 li
106.076 130.008 li
cp
f
130.527 93.9512 mo
136.927 93.9512 141.965 95.4961 145.643 98.5859 cv
149.321 101.677 151.161 105.93 151.161 111.344 cv
151.161 117.496 149.246 122.283 145.418 125.701 cv
141.589 129.12 136.311 130.828 129.584 130.828 cv
126.603 130.828 123.772 130.533 121.092 129.946 cv
118.412 129.358 116.17 128.518 114.365 127.424 cv
114.365 123.199 li
117.318 124.703 119.944 125.749 122.241 126.336 cv
124.538 126.926 126.985 127.219 129.584 127.219 cv
134.835 127.219 139.046 125.83 142.218 123.055 cv
145.39 120.279 146.977 116.526 146.977 111.795 cv
146.977 107.338 145.431 103.837 142.342 101.294 cv
139.251 98.75 135.053 97.4785 129.747 97.4785 cv
126.192 97.4785 122.473 98.0117 118.59 99.0781 cv
116.129 97.4785 li
118.508 70.0352 li
147.387 70.0352 li
147.387 73.9746 li
122.364 73.9746 li
120.519 95.1406 li
124.784 94.3477 128.12 93.9512 130.527 93.9512 cv
cp
f
194.025 128.388 mo
190.597 128.388 li
182.182 114.753 li
182.088 114.753 li
182.147 115.514 li
182.256 116.965 182.311 118.292 182.311 119.493 cv
182.311 128.388 li
179.771 128.388 li
179.771 111.277 li
183.165 111.277 li
191.556 124.842 li
191.626 124.842 li
191.611 124.662 191.58 124.009 191.533 122.881 cv
191.486 121.754 191.462 120.874 191.462 120.242 cv
191.462 111.277 li
194.025 111.277 li
194.025 128.388 li
cp
f
201.294 126.515 mo
202.293 126.515 203.095 126.236 203.699 125.678 cv
204.304 125.121 204.606 124.338 204.606 123.332 cv
204.606 122.208 li
202.944 122.278 li
201.649 122.325 200.707 122.542 200.118 122.928 cv
199.529 123.314 199.234 123.905 199.234 124.701 cv
199.234 125.279 199.406 125.725 199.75 126.041 cv
200.093 126.357 200.608 126.515 201.294 126.515 cv
cp
205.391 128.388 mo
204.84 126.585 li
204.747 126.585 li
204.123 127.374 203.495 127.91 202.863 128.195 cv
202.23 128.479 201.419 128.622 200.428 128.622 cv
199.157 128.622 198.164 128.278 197.45 127.592 cv
196.736 126.905 196.379 125.934 196.379 124.678 cv
196.379 123.344 196.875 122.337 197.865 121.658 cv
198.856 120.979 200.366 120.609 202.395 120.546 cv
204.63 120.476 li
204.63 119.786 li
204.63 118.959 204.437 118.34 204.05 117.931 cv
203.665 117.521 203.065 117.316 202.254 117.316 cv
201.591 117.316 200.955 117.414 200.346 117.609 cv
199.738 117.804 199.153 118.034 198.591 118.299 cv
197.702 116.333 li
198.404 115.967 199.172 115.688 200.007 115.497 cv
200.842 115.305 201.63 115.21 202.371 115.21 cv
204.017 115.21 205.26 115.569 206.099 116.287 cv
206.937 117.004 207.357 118.132 207.357 119.668 cv
207.357 128.388 li
205.391 128.388 li
cp
f
213.186 128.388 mo
208.271 115.444 li
211.173 115.444 li
213.806 122.969 li
214.259 124.233 214.532 125.255 214.625 126.035 cv
214.719 126.035 li
214.789 125.474 215.063 124.452 215.538 122.969 cv
218.171 115.444 li
221.097 115.444 li
216.159 128.388 li
213.186 128.388 li
cp
f
224.855 128.388 mo
222.105 128.388 li
222.105 115.444 li
224.855 115.444 li
224.855 128.388 li
cp
221.941 112.015 mo
221.941 111.523 222.076 111.145 222.345 110.879 cv
222.614 110.614 222.998 110.481 223.498 110.481 cv
223.981 110.481 224.358 110.614 224.627 110.879 cv
224.896 111.145 225.031 111.523 225.031 112.015 cv
225.031 112.483 224.896 112.852 224.627 113.121 cv
224.358 113.39 223.981 113.524 223.498 113.524 cv
222.998 113.524 222.614 113.39 222.345 113.121 cv
222.076 112.852 221.941 112.483 221.941 112.015 cv
cp
f
229.771 119.634 mo
229.771 120.445 229.98 121.069 230.397 121.506 cv
230.814 121.943 231.414 122.162 232.194 122.162 cv
233.786 122.162 234.582 121.311 234.582 119.61 cv
234.582 118.768 234.384 118.118 233.99 117.662 cv
233.596 117.205 232.998 116.977 232.194 116.977 cv
231.398 116.977 230.795 117.203 230.386 117.656 cv
229.976 118.108 229.771 118.768 229.771 119.634 cv
cp
228.589 130.401 mo
228.589 130.994 228.856 131.45 229.391 131.77 cv
229.925 132.09 230.676 132.25 231.644 132.25 cv
233.142 132.25 234.257 132.035 234.991 131.606 cv
235.724 131.177 236.091 130.607 236.091 129.897 cv
236.091 129.335 235.89 128.936 235.488 128.698 cv
235.086 128.46 234.339 128.341 233.247 128.341 cv
231.164 128.341 li
230.376 128.341 229.75 128.526 229.286 128.897 cv
228.821 129.267 228.589 129.769 228.589 130.401 cv
cp
238.759 115.444 mo
238.759 116.954 li
236.547 117.363 li
236.75 117.636 236.918 117.972 237.051 118.37 cv
237.183 118.768 237.25 119.189 237.25 119.634 cv
237.25 120.968 236.789 122.017 235.869 122.782 cv
234.948 123.546 233.68 123.929 232.065 123.929 cv
231.651 123.929 231.277 123.897 230.941 123.835 cv
230.349 124.202 230.052 124.631 230.052 125.123 cv
230.052 125.419 230.19 125.642 230.468 125.79 cv
230.745 125.938 231.253 126.012 231.995 126.012 cv
234.253 126.012 li
235.682 126.012 236.766 126.316 237.507 126.925 cv
238.248 127.533 238.619 128.411 238.619 129.558 cv
238.619 131.025 238.014 132.156 236.805 132.952 cv
235.596 133.748 233.848 134.146 231.562 134.146 cv
229.798 134.146 228.453 133.833 227.524 133.209 cv
226.596 132.585 226.131 131.696 226.131 130.541 cv
226.131 129.745 226.383 129.076 226.886 128.534 cv
227.39 127.992 228.094 127.615 228.999 127.405 cv
228.632 127.249 228.33 126.997 228.092 126.65 cv
227.854 126.303 227.735 125.938 227.735 125.556 cv
227.735 125.072 227.871 124.662 228.145 124.327 cv
228.417 123.991 228.823 123.66 229.362 123.332 cv
228.69 123.043 228.146 122.573 227.729 121.921 cv
227.312 121.27 227.103 120.507 227.103 119.634 cv
227.103 118.229 227.545 117.141 228.431 116.368 cv
229.316 115.596 230.579 115.21 232.217 115.21 cv
232.584 115.21 232.968 115.235 233.37 115.286 cv
233.772 115.336 234.074 115.389 234.277 115.444 cv
238.759 115.444 li
cp
f
244.203 126.515 mo
245.201 126.515 246.003 126.236 246.607 125.678 cv
247.212 125.121 247.515 124.338 247.515 123.332 cv
247.515 122.208 li
245.853 122.278 li
244.558 122.325 243.615 122.542 243.026 122.928 cv
242.437 123.314 242.143 123.905 242.143 124.701 cv
242.143 125.279 242.314 125.725 242.658 126.041 cv
243.001 126.357 243.516 126.515 244.203 126.515 cv
cp
248.299 128.388 mo
247.749 126.585 li
247.655 126.585 li
247.031 127.374 246.403 127.91 245.771 128.195 cv
245.139 128.479 244.327 128.622 243.336 128.622 cv
242.065 128.622 241.072 128.278 240.358 127.592 cv
239.644 126.905 239.287 125.934 239.287 124.678 cv
239.287 123.344 239.783 122.337 240.773 121.658 cv
241.764 120.979 243.274 120.609 245.303 120.546 cv
247.538 120.476 li
247.538 119.786 li
247.538 118.959 247.345 118.34 246.958 117.931 cv
246.573 117.521 245.974 117.316 245.162 117.316 cv
244.499 117.316 243.863 117.414 243.254 117.609 cv
242.646 117.804 242.061 118.034 241.499 118.299 cv
240.61 116.333 li
241.312 115.967 242.08 115.688 242.915 115.497 cv
243.75 115.305 244.538 115.21 245.279 115.21 cv
246.925 115.21 248.168 115.569 249.007 116.287 cv
249.845 117.004 250.265 118.132 250.265 119.668 cv
250.265 128.388 li
248.299 128.388 li
cp
f
257.967 126.398 mo
258.638 126.398 259.309 126.293 259.979 126.082 cv
259.979 128.154 li
259.675 128.287 259.283 128.397 258.803 128.487 cv
258.324 128.577 257.826 128.622 257.311 128.622 cv
254.705 128.622 253.402 127.249 253.402 124.502 cv
253.402 117.527 li
251.635 117.527 li
251.635 116.31 li
253.531 115.303 li
254.467 112.565 li
256.165 112.565 li
256.165 115.444 li
259.851 115.444 li
259.851 117.527 li
256.165 117.527 li
256.165 124.456 li
256.165 125.119 256.33 125.608 256.662 125.924 cv
256.993 126.24 257.428 126.398 257.967 126.398 cv
cp
f
264.357 128.388 mo
261.607 128.388 li
261.607 115.444 li
264.357 115.444 li
264.357 128.388 li
cp
261.443 112.015 mo
261.443 111.523 261.578 111.145 261.847 110.879 cv
262.116 110.614 262.5 110.481 263 110.481 cv
263.484 110.481 263.86 110.614 264.129 110.879 cv
264.398 111.145 264.533 111.523 264.533 112.015 cv
264.533 112.483 264.398 112.852 264.129 113.121 cv
263.86 113.39 263.484 113.524 263 113.524 cv
262.5 113.524 262.116 113.39 261.847 113.121 cv
261.578 112.852 261.443 112.483 261.443 112.015 cv
cp
f
269.391 121.893 mo
269.391 124.881 270.495 126.375 272.703 126.375 cv
274.887 126.375 275.979 124.881 275.979 121.893 cv
275.979 118.936 274.879 117.457 272.679 117.457 cv
271.524 117.457 270.688 117.839 270.169 118.604 cv
269.65 119.369 269.391 120.464 269.391 121.893 cv
cp
278.812 121.893 mo
278.812 124.007 278.27 125.657 277.185 126.843 cv
276.101 128.029 274.591 128.622 272.656 128.622 cv
271.446 128.622 270.377 128.349 269.449 127.803 cv
268.521 127.256 267.807 126.472 267.308 125.45 cv
266.808 124.428 266.559 123.242 266.559 121.893 cv
266.559 119.793 267.097 118.155 268.173 116.977 cv
269.25 115.799 270.768 115.21 272.726 115.21 cv
274.599 115.21 276.081 115.813 277.173 117.018 cv
278.266 118.223 278.812 119.848 278.812 121.893 cv
cp
f
292.4 128.388 mo
289.638 128.388 li
289.638 120.429 li
289.638 119.431 289.438 118.686 289.036 118.194 cv
288.634 117.703 287.996 117.457 287.122 117.457 cv
285.959 117.457 285.109 117.8 284.571 118.487 cv
284.033 119.173 283.763 120.324 283.763 121.939 cv
283.763 128.388 li
281.013 128.388 li
281.013 115.444 li
283.167 115.444 li
283.553 117.141 li
283.693 117.141 li
284.083 116.524 284.637 116.048 285.355 115.713 cv
286.073 115.377 286.869 115.21 287.743 115.21 cv
290.848 115.21 292.4 116.79 292.4 119.95 cv
292.4 128.388 li
cp
f
686 50 mo
786 50 li
786 150 li
686 150 li
686 50 li
cp
1 1 1 rgb
f
735.5 77.3999 mo
742.4 77.3999 748.1 83 748.1 90 cv
748.1 97 742.5 102.6 735.5 102.6 cv
728.5 102.6 722.9 96.8999 722.9 90 cv
722.9 83.1001 728.6 77.3999 735.5 77.3999 cv
cp
723.9 105.3 mo
724.8 106.8 725.8 108.5 726.8 110.1 cv
727.2 110.8 727.6 111.4 727.9 112 cv
729.3 114.4 730.9 117 732.4 119.6 cv
733.3 121 734 122.3 734.6 123.3 cv
734.6 123.4 734.7 123.4 734.7 123.5 cv
734.8 123.7 734.9 123.9 735 124.1 cv
735.1 124.2 735.2 124.3 735.2 124.5 cv
735.3 124.6 li
735.4 124.7 735.5 124.9 735.5 125 cv
736.1 124.1 737 122.5 738.2 120.4 cv
738.3 120.2 738.5 119.9 738.6 119.7 cv
739.5 118.3 740.3 116.8 741.1 115.5 cv
741.8 114.4 742.4 113.2 743 112.1 cv
744.3 109.9 745.6 107.8 746.8 105.7 cv
750.6 99.5 753.9 94.1001 753.9 90 cv
753.9 80 745.5 71.8999 735.2 71.8999 cv
729.9 71.8999 724.8 74.1001 721.2 77.7998 cv
718 81.2002 716.3 85.5 716.5 89.8999 cv
716.9 93.8999 720.1 99.2002 723.9 105.3 cv
cp
0 0 0 rgb
f
757.3 122.1 mo
752.7 121.3 746.5 120.8 739.7 120.7 cv
739.7 120.7 li
739.6 120.8 739.6 120.9 739.5 121.1 cv
737.6 124.3 736.2 126.5 736.2 126.5 cv
736.1 126.7 735.9 126.8 735.7 126.8 cv
735.7 126.8 li
735.7 126.8 li
735.5 126.8 735.3 126.7 735.2 126.5 cv
735.2 126.5 734.6 125.6 733.7 124 cv
733.7 124 li
733.7 123.9 733.6 123.9 733.6 123.8 cv
733.6 123.8 li
733.6 123.7 733.5 123.7 733.5 123.6 cv
733.5 123.6 li
733.5 123.5 733.4 123.5 733.4 123.4 cv
733.4 123.4 li
733.4 123.3 733.3 123.3 733.3 123.2 cv
733.3 123.2 733.3 123.2 733.3 123.1 cv
733.3 123 733.2 123 733.2 122.9 cv
733.2 122.9 li
733.2 122.8 733.1 122.8 733.1 122.7 cv
733.1 122.7 733.1 122.6 733 122.6 cv
733 122.5 732.9 122.5 732.9 122.4 cv
732.9 122.4 732.9 122.3 732.8 122.3 cv
732.8 122.2 732.7 122.2 732.7 122.1 cv
732.7 122.1 732.7 122 732.6 122 cv
732.6 121.9 732.5 121.9 732.5 121.8 cv
732.5 121.8 732.5 121.8 732.5 121.7 cv
732.5 121.6 732.4 121.5 732.4 121.5 cv
732.4 121.5 732.4 121.4 732.3 121.4 cv
732.3 121.3 732.2 121.3 732.2 121.2 cv
732.2 121.2 732.2 121.2 732.2 121.1 cv
732.1 121 732.1 120.9 732 120.8 cv
732 120.8 li
725.4 121 719.3 121.5 714.9 122.2 cv
709.5 123.1 708.3 124.2 708.3 124.5 cv
708.3 124.8 709.7 126 716.2 127 cv
721.6 127.8 728.8 128.3 736.4 128.3 cv
744 128.3 751.2 127.8 756.6 127 cv
763 126 764.5 124.9 764.5 124.5 cv
764.1 124.1 762.9 123 757.3 122.1 cv
cp
f
731.5 86.7002 mo
731.3 86.3999 731.3 86 731.5 85.7998 cv
731.8 85.6001 732.2 85.6001 732.4 85.7998 cv
735.3 89 li
738.2 85.7998 li
738.4 85.5 738.8 85.5 739.1 85.7998 cv
739.4 86 739.4 86.3999 739.1 86.7002 cv
736.1 90 li
739.1 93.2998 li
739.3 93.6001 739.3 94 739.1 94.2002 cv
739 94.2998 738.8 94.3999 738.7 94.3999 cv
738.5 94.3999 738.4 94.2998 738.2 94.2002 cv
735.3 91 li
732.4 94.2002 li
732.3 94.2998 732.1 94.3999 731.9 94.3999 cv
731.8 94.3999 731.6 94.2998 731.5 94.2002 cv
731.2 94 731.2 93.6001 731.5 93.2998 cv
734.5 90 li
731.5 86.7002 li
cp
735.5 101.3 mo
741.7 101.3 746.8 96.2002 746.8 90 cv
746.8 83.7998 741.7 78.7002 735.5 78.7002 cv
729.3 78.7002 724.2 83.7002 724.2 90 cv
724.2 96.2002 729.3 101.3 735.5 101.3 cv
cp
f
685.178 556.143 mo
786 556.143 li
786 656.965 li
685.178 656.965 li
685.178 556.143 li
cp
1 1 1 rgb
f
711.694 622.281 mo
718.046 622.281 li
718.349 622.281 718.651 622.584 718.651 622.887 cv
718.651 623.189 718.349 623.491 718.046 623.491 cv
711.694 623.491 li
711.392 623.491 711.089 623.189 711.089 622.887 cv
710.988 622.584 711.291 622.281 711.694 622.281 cv
cp
711.694 618.552 mo
718.046 618.552 li
718.349 618.552 718.651 618.854 718.651 619.156 cv
718.651 619.459 718.349 619.761 718.046 619.761 cv
711.694 619.761 li
711.392 619.761 711.089 619.459 711.089 619.156 cv
711.089 618.854 711.291 618.552 711.694 618.552 cv
cp
707.258 627.323 mo
722.381 627.323 li
722.381 614.72 li
707.258 614.72 li
707.258 627.323 li
cp
0 0 0 rgb
f
741.94 629.238 mo
744.461 629.238 li
744.461 631.759 li
741.94 631.759 li
741.94 629.238 li
cp
741.94 624.197 mo
744.461 624.197 li
744.461 626.718 li
741.94 626.718 li
741.94 624.197 li
cp
741.94 619.156 mo
744.461 619.156 li
744.461 621.677 li
741.94 621.677 li
741.94 619.156 li
cp
741.94 614.115 mo
744.461 614.115 li
744.461 616.636 li
741.94 616.636 li
741.94 614.115 li
cp
741.94 609.074 mo
744.461 609.074 li
744.461 611.595 li
741.94 611.595 li
741.94 609.074 li
cp
739.42 611.595 mo
736.899 611.595 li
736.899 609.074 li
739.42 609.074 li
739.42 611.595 li
cp
739.42 616.636 mo
736.899 616.636 li
736.899 614.115 li
739.42 614.115 li
739.42 616.636 li
cp
739.42 621.677 mo
736.899 621.677 li
736.899 619.156 li
739.42 619.156 li
739.42 621.677 li
cp
739.42 626.718 mo
736.899 626.718 li
736.899 624.197 li
739.42 624.197 li
739.42 626.718 li
cp
739.42 631.759 mo
736.899 631.759 li
736.899 629.238 li
739.42 629.238 li
739.42 631.759 li
cp
734.379 611.595 mo
731.858 611.595 li
731.858 609.074 li
734.379 609.074 li
734.379 611.595 li
cp
734.379 616.636 mo
731.858 616.636 li
731.858 614.115 li
734.379 614.115 li
734.379 616.636 li
cp
734.379 621.677 mo
731.858 621.677 li
731.858 619.156 li
734.379 619.156 li
734.379 621.677 li
cp
734.379 626.718 mo
731.858 626.718 li
731.858 624.197 li
734.379 624.197 li
734.379 626.718 li
cp
734.379 631.759 mo
731.858 631.759 li
731.858 629.238 li
734.379 629.238 li
734.379 631.759 li
cp
729.338 611.595 mo
726.817 611.595 li
726.817 609.074 li
729.338 609.074 li
729.338 611.595 li
cp
729.338 616.636 mo
726.817 616.636 li
726.817 614.115 li
729.338 614.115 li
729.338 616.636 li
cp
729.338 621.677 mo
726.817 621.677 li
726.817 619.156 li
729.338 619.156 li
729.338 621.677 li
cp
729.338 626.718 mo
726.817 626.718 li
726.817 624.197 li
729.338 624.197 li
729.338 626.718 li
cp
729.338 631.759 mo
726.817 631.759 li
726.817 629.238 li
729.338 629.238 li
729.338 631.759 li
cp
729.338 605.948 mo
723.692 605.948 li
723.692 614.115 li
723.692 628.028 li
723.692 634.985 li
747.688 634.985 li
747.688 628.028 li
747.688 614.115 li
747.688 605.948 li
740.63 605.948 li
729.338 605.948 li
cp
f
735.589 600.907 mo
729.943 600.907 li
729.943 604.738 li
740.025 604.738 li
740.025 595.866 li
735.186 595.866 li
735.186 585.885 li
735.186 585.582 734.883 585.28 734.581 585.28 cv
734.278 585.28 733.976 585.582 733.976 585.885 cv
733.976 595.866 li
729.943 595.866 li
729.943 599.697 li
735.589 599.697 li
735.892 599.697 736.194 600 736.194 600.303 cv
736.194 600.605 735.892 600.907 735.589 600.907 cv
cp
f
759.585 619.761 mo
753.232 619.761 li
752.931 619.761 752.628 619.459 752.628 619.156 cv
752.628 618.854 752.931 618.552 753.232 618.552 cv
759.585 618.552 li
759.887 618.552 760.189 618.854 760.189 619.156 cv
760.189 619.459 759.887 619.761 759.585 619.761 cv
cp
759.585 623.593 mo
753.232 623.593 li
752.931 623.593 752.628 623.29 752.628 622.987 cv
752.628 622.685 752.931 622.383 753.232 622.383 cv
759.585 622.383 li
759.887 622.383 760.189 622.685 760.189 622.987 cv
760.189 623.29 759.887 623.593 759.585 623.593 cv
cp
748.797 614.72 mo
748.797 627.323 li
763.92 627.323 li
763.92 614.72 li
748.797 614.72 li
cp
f
728.33 585.28 mo
728.632 585.28 728.935 584.978 728.935 584.675 cv
728.935 581.55 731.455 579.029 734.581 579.029 cv
737.706 579.029 740.227 581.55 740.227 584.675 cv
740.227 584.978 740.529 585.28 740.832 585.28 cv
741.134 585.28 741.437 584.978 741.437 584.675 cv
741.437 580.844 738.312 577.719 734.48 577.719 cv
730.648 577.719 727.523 580.844 727.523 584.675 cv
727.624 584.978 727.927 585.28 728.33 585.28 cv
cp
f
558.143 556.143 mo
658.965 556.143 li
658.965 656.965 li
558.143 656.965 li
558.143 556.143 li
cp
1 1 1 rgb
f
587.481 592.035 mo
591.515 592.035 li
591.515 581.953 li
580.727 581.953 li
587.481 592.035 li
cp
0 0 0 rgb
f
607.948 609.679 mo
610.065 609.679 611.779 607.965 611.779 605.848 cv
611.779 603.73 610.065 602.017 607.948 602.017 cv
605.831 602.017 604.117 603.73 604.117 605.848 cv
604.117 607.965 605.831 609.679 607.948 609.679 cv
cp
f
607.948 594.556 mo
610.065 594.556 611.779 592.842 611.779 590.725 cv
611.779 588.607 610.065 586.894 607.948 586.894 cv
605.831 586.894 604.117 588.607 604.117 590.725 cv
604.117 592.842 605.831 594.556 607.948 594.556 cv
cp
f
636.279 581.953 mo
624.281 581.953 li
624.281 592.035 li
628.919 592.035 li
636.279 581.953 li
cp
f
587.481 629.844 mo
591.515 629.844 li
591.515 619.761 li
580.727 619.761 li
587.481 629.844 li
cp
f
587.481 610.989 mo
591.515 610.989 li
591.515 600.907 li
580.727 600.907 li
587.481 610.989 li
cp
f
624.281 629.844 mo
628.919 629.844 li
636.279 619.761 li
624.281 619.761 li
624.281 629.844 li
cp
f
624.281 610.989 mo
628.919 610.989 li
636.279 600.907 li
624.281 600.907 li
624.281 610.989 li
cp
f
607.948 616.03 mo
610.771 616.03 612.989 618.249 612.989 621.072 cv
612.989 623.895 610.771 626.113 607.948 626.113 cv
605.125 626.113 602.907 623.895 602.907 621.072 cv
602.907 618.249 605.125 616.03 607.948 616.03 cv
cp
607.948 600.907 mo
610.771 600.907 612.989 603.126 612.989 605.948 cv
612.989 608.771 610.771 610.989 607.948 610.989 cv
605.125 610.989 602.907 608.771 602.907 605.948 cv
602.907 603.126 605.125 600.907 607.948 600.907 cv
cp
607.948 585.784 mo
610.771 585.784 612.989 588.002 612.989 590.825 cv
612.989 593.648 610.771 595.866 607.948 595.866 cv
605.125 595.866 602.907 593.648 602.907 590.825 cv
602.907 588.002 605.125 585.784 607.948 585.784 cv
cp
592.825 581.348 mo
592.825 592.741 li
592.825 600.303 li
592.825 611.595 li
592.825 619.156 li
592.825 630.549 li
592.825 633.675 li
623.072 633.675 li
623.072 630.549 li
623.072 619.156 li
623.072 611.595 li
623.072 600.303 li
623.072 592.741 li
623.072 581.348 li
623.072 578.223 li
592.825 578.223 li
592.825 581.348 li
cp
f
607.948 624.802 mo
610.065 624.802 611.779 623.088 611.779 620.971 cv
611.779 618.854 610.065 617.14 607.948 617.14 cv
605.831 617.14 604.117 618.854 604.117 620.971 cv
604.117 623.088 605.831 624.802 607.948 624.802 cv
cp
f
431.106 556.143 mo
531.929 556.143 li
531.929 656.965 li
431.106 656.965 li
431.106 556.143 li
cp
1 1 1 rgb
f
482.828 584.474 mo
488.071 584.474 492.306 588.708 492.306 593.951 cv
492.306 599.193 488.071 603.428 482.828 603.428 cv
477.586 603.428 473.352 599.193 473.352 593.951 cv
473.352 588.708 477.586 584.474 482.828 584.474 cv
cp
474.662 612.703 mo
474.965 613.309 475.267 613.913 475.67 614.418 cv
476.174 615.426 476.779 616.434 477.384 617.442 cv
477.787 618.249 478.19 618.954 478.594 619.66 cv
478.896 620.266 479.199 620.77 479.501 621.273 cv
480.207 622.483 li
480.207 622.483 li
481.014 623.895 481.72 625.104 482.224 625.911 cv
482.627 625.205 483.231 624.097 484.038 622.685 cv
484.845 621.273 li
485.147 620.77 485.45 620.164 485.752 619.56 cv
486.155 618.954 486.458 618.249 486.861 617.543 cv
486.861 617.543 li
486.861 617.442 li
487.466 616.434 487.971 615.426 488.575 614.418 cv
491.196 609.578 493.314 605.545 494.826 602.319 cv
497.347 596.976 497.952 595.06 497.952 594.354 cv
497.952 585.381 490.793 578.122 482.021 578.122 cv
473.25 578.122 466.193 585.582 466.193 594.455 cv
466.193 595.16 466.697 597.177 469.318 602.42 cv
470.629 605.243 472.443 608.771 474.662 612.703 cv
cp
0 0 0 rgb
f
484.945 623.794 mo
484.945 623.794 li
484.341 624.903 483.837 625.811 483.434 626.415 cv
483.03 627.121 482.728 627.524 482.728 627.625 cv
482.627 627.827 482.425 627.928 482.224 627.928 cv
482.224 627.928 li
482.021 627.928 481.82 627.827 481.72 627.625 cv
481.72 627.625 480.813 626.012 479.4 623.592 cv
479.3 623.592 li
479.199 623.592 479.098 623.592 479.098 623.592 cv
478.997 623.592 478.896 623.592 478.796 623.592 cv
478.694 623.592 478.594 623.592 478.594 623.592 cv
478.493 623.592 478.393 623.592 478.291 623.592 cv
478.19 623.592 478.09 623.592 478.09 623.592 cv
477.989 623.592 477.889 623.592 477.787 623.592 cv
477.687 623.592 477.586 623.592 477.586 623.592 cv
477.484 623.592 477.384 623.592 477.283 623.592 cv
477.183 623.592 477.183 623.592 477.082 623.592 cv
476.98 623.592 476.88 623.592 476.779 623.592 cv
476.679 623.592 476.679 623.592 476.577 623.592 cv
476.477 623.592 476.376 623.592 476.275 623.592 cv
476.174 623.592 476.174 623.592 476.073 623.592 cv
475.973 623.592 475.872 623.592 475.771 623.592 cv
475.67 623.592 475.67 623.592 475.569 623.592 cv
475.469 623.592 475.367 623.592 475.367 623.592 cv
475.267 623.592 475.267 623.592 475.166 623.592 cv
475.065 623.592 474.965 623.592 474.965 623.592 cv
474.863 623.592 474.863 623.592 474.763 623.592 cv
474.662 623.592 474.562 623.592 474.562 623.592 cv
474.46 623.592 474.46 623.592 474.359 623.592 cv
474.259 623.592 474.259 623.592 474.158 623.693 cv
474.057 623.693 474.057 623.693 473.956 623.693 cv
473.855 623.693 473.855 623.693 473.755 623.794 cv
473.653 623.794 473.653 623.794 473.553 623.794 cv
473.452 623.794 473.452 623.794 473.352 623.895 cv
473.25 623.895 473.25 623.895 473.149 623.895 cv
473.049 623.895 473.049 623.895 472.948 623.996 cv
472.847 623.996 472.847 623.996 472.746 623.996 cv
472.646 623.996 472.646 623.996 472.545 624.097 cv
472.443 624.097 472.443 624.097 472.343 624.197 cv
472.242 624.197 472.242 624.197 472.142 624.298 cv
472.142 624.298 472.04 624.298 472.04 624.398 cv
471.939 624.398 471.939 624.398 471.839 624.5 cv
471.839 624.5 471.738 624.5 471.738 624.601 cv
471.638 624.601 471.638 624.601 471.536 624.701 cv
471.536 624.701 471.436 624.701 471.436 624.802 cv
471.436 624.802 471.335 624.802 471.335 624.903 cv
471.335 624.903 471.234 624.903 471.234 625.004 cv
471.234 625.004 471.133 625.004 471.133 625.104 cv
471.133 625.104 471.032 625.104 471.032 625.205 cv
471.032 625.205 470.932 625.205 470.932 625.307 cv
470.932 625.307 470.831 625.307 470.831 625.407 cv
470.831 625.407 470.729 625.407 470.729 625.508 cv
470.729 625.508 470.629 625.508 470.629 625.608 cv
470.629 625.608 470.528 625.608 470.528 625.71 cv
470.528 625.71 470.428 625.71 470.428 625.811 cv
470.428 625.811 470.326 625.811 470.326 625.911 cv
470.326 625.911 470.226 625.911 470.226 626.012 cv
470.226 626.012 470.125 626.012 470.125 626.113 cv
470.125 626.113 470.125 626.113 470.024 626.214 cv
470.024 626.214 470.024 626.214 469.923 626.314 cv
469.923 626.314 469.923 626.314 469.822 626.415 cv
469.822 626.415 469.822 626.415 469.722 626.516 cv
469.722 626.516 469.722 626.516 469.722 626.617 cv
469.722 626.617 469.722 626.617 469.722 626.718 cv
469.722 626.718 469.722 626.718 469.722 626.818 cv
469.722 626.92 li
469.722 626.92 469.722 626.92 469.722 627.021 cv
469.722 627.121 li
469.722 627.121 li
469.722 627.222 li
469.722 628.532 474.057 630.448 481.014 630.448 cv
487.971 630.448 492.306 628.532 492.306 627.222 cv
492.306 627.121 li
492.306 627.121 li
492.306 627.121 492.306 627.121 492.306 627.021 cv
492.306 627.021 li
492.306 627.021 492.306 627.021 492.306 626.92 cv
492.306 626.92 li
492.306 626.92 492.306 626.92 492.306 626.818 cv
492.306 626.818 li
492.306 626.818 492.306 626.818 492.306 626.718 cv
492.306 626.718 li
492.306 626.718 492.306 626.718 492.306 626.617 cv
492.306 626.617 li
492.306 626.617 492.306 626.617 492.205 626.516 cv
492.205 626.516 492.205 626.516 492.104 626.516 cv
492.104 626.516 492.104 626.516 492.003 626.415 cv
492.003 626.415 492.003 626.415 491.902 626.314 cv
491.902 626.314 491.902 626.314 491.802 626.214 cv
491.802 626.214 491.802 626.214 491.701 626.113 cv
491.701 626.113 491.701 626.113 491.6 626.012 cv
491.6 626.012 491.6 626.012 491.499 625.911 cv
491.499 625.911 491.398 625.911 491.398 625.811 cv
491.398 625.811 491.298 625.811 491.298 625.71 cv
491.298 625.71 491.196 625.71 491.196 625.608 cv
491.196 625.608 491.096 625.608 491.096 625.508 cv
491.096 625.508 490.995 625.508 490.995 625.407 cv
490.995 625.407 490.895 625.407 490.895 625.307 cv
490.895 625.307 490.794 625.307 490.794 625.205 cv
490.794 625.205 490.692 625.205 490.692 625.104 cv
490.692 625.104 490.592 625.104 490.592 625.004 cv
490.491 625.004 li
490.491 625.004 490.391 625.004 490.391 624.903 cv
490.289 624.903 li
490.289 624.903 490.188 624.903 490.188 624.802 cv
490.088 624.802 li
490.088 624.802 489.987 624.802 489.987 624.701 cv
489.886 624.701 li
489.886 624.701 489.785 624.701 489.785 624.601 cv
489.685 624.601 li
489.584 624.601 li
489.482 624.601 li
489.382 624.601 489.382 624.601 489.281 624.601 cv
489.181 624.601 li
489.079 624.601 489.079 624.601 488.979 624.601 cv
488.979 624.601 488.878 624.601 488.777 624.601 cv
488.676 624.601 488.676 624.601 488.575 624.601 cv
488.475 624.601 488.475 624.601 488.374 624.601 cv
488.272 624.601 488.272 624.601 488.172 624.601 cv
488.071 624.601 488.071 624.601 487.971 624.601 cv
487.869 624.601 487.869 624.601 487.769 624.601 cv
487.668 624.601 487.668 624.601 487.567 624.601 cv
487.467 624.601 487.467 624.601 487.365 624.601 cv
487.265 624.601 487.265 624.601 487.164 624.601 cv
487.063 624.601 487.063 624.601 486.962 624.601 cv
486.861 624.601 486.861 624.601 486.761 624.601 cv
486.66 624.601 486.66 624.601 486.559 624.601 cv
486.458 624.601 486.458 624.601 486.357 624.601 cv
486.257 624.601 486.257 624.601 486.155 624.601 cv
486.055 624.601 486.055 624.601 485.954 624.601 cv
485.854 624.601 485.854 624.601 485.752 624.601 cv
485.651 624.601 485.651 624.601 485.551 624.601 cv
485.45 624.601 485.45 624.601 485.349 624.601 cv
485.147 623.794 485.047 623.794 484.945 623.794 cv
cp
f
503.698 621.576 mo
499.666 620.063 494.02 618.954 487.869 618.552 cv
487.869 618.652 li
487.869 618.753 487.769 618.753 487.769 618.854 cv
487.668 618.954 487.668 619.056 487.567 619.156 cv
487.567 619.156 487.567 619.257 487.466 619.257 cv
487.365 619.357 487.265 619.56 487.265 619.66 cv
487.265 619.66 li
487.164 619.862 487.063 619.963 486.962 620.164 cv
486.66 620.77 486.357 621.273 486.055 621.879 cv
485.752 622.483 li
485.854 622.483 li
485.954 622.483 li
486.055 622.483 486.155 622.483 486.155 622.483 cv
486.257 622.483 li
486.357 622.483 486.458 622.483 486.458 622.483 cv
486.559 622.483 li
486.66 622.483 486.761 622.483 486.761 622.483 cv
486.861 622.483 li
486.962 622.483 487.063 622.483 487.164 622.584 cv
487.164 622.584 487.164 622.584 487.265 622.584 cv
487.365 622.584 487.466 622.685 487.668 622.685 cv
487.769 622.685 li
487.869 622.685 487.971 622.685 487.971 622.786 cv
488.071 622.786 li
488.172 622.786 488.172 622.786 488.272 622.887 cv
488.374 622.887 li
488.475 622.887 488.475 622.887 488.575 622.987 cv
488.676 622.987 488.676 622.987 488.777 622.987 cv
488.878 622.987 488.878 622.987 488.979 623.088 cv
489.079 623.088 489.079 623.088 489.181 623.088 cv
489.281 623.088 489.281 623.088 489.382 623.189 cv
489.382 623.189 489.482 623.189 489.482 623.29 cv
489.584 623.29 489.584 623.29 489.685 623.391 cv
489.685 623.391 489.785 623.391 489.785 623.491 cv
489.886 623.491 489.886 623.491 489.986 623.592 cv
489.986 623.592 490.088 623.592 490.088 623.693 cv
490.188 623.693 490.188 623.693 490.289 623.794 cv
490.289 623.794 490.39 623.794 490.39 623.895 cv
490.491 623.895 490.491 623.895 490.592 623.996 cv
490.592 623.996 490.692 623.996 490.692 624.097 cv
490.793 624.097 490.793 624.197 490.895 624.197 cv
490.895 624.197 490.995 624.197 490.995 624.298 cv
491.096 624.298 491.096 624.398 491.196 624.398 cv
491.298 624.398 li
491.398 624.398 491.499 624.5 491.499 624.5 cv
491.499 624.5 491.499 624.5 491.6 624.5 cv
491.701 624.5 491.701 624.601 491.802 624.601 cv
491.802 624.601 491.902 624.601 491.902 624.701 cv
492.003 624.802 li
492.003 624.802 492.104 624.802 492.104 624.903 cv
492.205 625.004 li
492.205 625.004 492.306 625.004 492.306 625.104 cv
492.406 625.205 li
492.508 625.307 li
492.608 625.407 li
492.608 625.407 492.608 625.508 492.709 625.508 cv
492.81 625.608 li
492.81 625.608 492.81 625.71 492.911 625.71 cv
492.911 625.71 492.911 625.811 493.012 625.811 cv
493.012 625.811 493.012 625.911 493.112 625.911 cv
493.112 625.911 493.112 626.012 493.213 626.012 cv
493.213 626.113 li
493.213 626.214 li
493.213 626.314 li
493.213 626.415 li
493.213 626.516 li
493.213 626.617 li
493.213 626.617 493.213 626.617 493.213 626.718 cv
493.213 626.818 493.213 626.818 493.213 626.92 cv
493.213 629.843 486.761 631.355 480.711 631.355 cv
474.662 631.355 468.209 629.742 468.209 626.92 cv
468.209 626.818 li
468.209 626.818 li
468.209 626.718 li
468.209 626.718 li
468.209 626.718 468.209 626.718 468.209 626.617 cv
468.209 626.617 468.209 626.617 468.209 626.516 cv
468.209 626.516 468.209 626.516 468.209 626.415 cv
468.209 626.415 468.209 626.415 468.209 626.314 cv
468.209 626.314 468.209 626.314 468.209 626.214 cv
468.209 626.214 468.209 626.214 468.209 626.113 cv
468.209 626.113 468.209 626.113 468.209 626.012 cv
468.209 626.012 468.209 626.012 468.209 625.911 cv
468.209 625.911 468.209 625.911 468.209 625.811 cv
468.209 625.811 468.209 625.811 468.209 625.71 cv
468.209 625.71 468.209 625.71 468.209 625.608 cv
468.209 625.608 468.209 625.608 468.209 625.508 cv
468.209 625.508 468.209 625.508 468.209 625.407 cv
468.209 625.407 468.209 625.407 468.209 625.307 cv
468.209 625.307 468.209 625.307 468.209 625.205 cv
468.209 625.205 468.209 625.205 468.209 625.104 cv
468.209 625.104 468.209 625.104 468.209 625.004 cv
468.209 625.004 li
468.209 625.004 468.209 625.004 468.209 624.903 cv
468.209 624.903 li
468.209 624.903 468.209 624.903 468.311 624.802 cv
468.311 624.802 li
468.311 624.802 468.311 624.802 468.411 624.701 cv
468.411 624.701 li
468.512 624.601 li
468.512 624.601 li
468.512 624.601 468.512 624.601 468.612 624.5 cv
468.612 624.5 468.612 624.5 468.713 624.5 cv
468.713 624.5 468.713 624.5 468.814 624.398 cv
468.814 624.398 468.814 624.398 468.915 624.398 cv
468.915 624.398 468.915 624.398 469.016 624.298 cv
469.016 624.298 469.016 624.298 469.116 624.298 cv
469.116 624.298 469.116 624.298 469.218 624.298 cv
469.218 624.298 469.218 624.298 469.318 624.298 cv
469.318 624.298 469.318 624.298 469.419 624.298 cv
469.419 624.298 469.419 624.298 469.52 624.298 cv
469.52 624.298 469.52 624.298 469.621 624.298 cv
469.621 624.298 469.621 624.298 469.722 624.298 cv
469.722 624.298 469.722 624.298 469.822 624.298 cv
469.822 624.298 469.822 624.298 469.923 624.298 cv
470.024 624.298 li
470.125 624.298 li
470.226 624.298 li
470.326 624.298 li
470.428 624.298 li
470.528 624.298 li
470.629 624.298 li
470.729 624.298 li
470.83 624.298 li
470.932 624.298 li
471.032 624.298 li
471.133 624.298 li
471.234 624.298 li
471.335 624.298 li
471.436 624.298 li
471.536 624.298 471.536 624.197 471.637 624.197 cv
471.738 624.197 li
471.839 624.197 li
471.939 624.197 li
472.04 624.197 li
472.142 624.197 li
472.242 624.197 li
472.343 624.197 li
472.443 624.197 li
472.545 624.197 li
472.646 624.197 li
472.746 624.197 li
472.847 624.197 li
472.948 624.197 li
473.049 624.197 li
473.149 624.197 li
473.25 624.197 li
473.352 624.197 li
473.452 624.197 li
473.553 624.197 li
473.653 624.197 li
473.754 624.197 li
473.855 624.197 li
473.956 624.197 li
474.057 624.197 li
474.157 624.197 li
474.259 624.197 li
474.359 624.197 li
474.46 624.197 li
474.561 624.197 474.662 624.197 474.662 624.197 cv
474.763 624.197 li
474.863 624.197 li
474.964 624.197 li
475.065 624.197 li
475.166 624.197 li
475.267 624.197 li
475.367 624.197 li
475.469 624.197 li
475.569 624.197 li
475.67 624.197 li
475.771 624.197 li
475.871 624.197 li
475.973 624.197 li
476.073 624.197 li
476.174 624.197 li
476.274 624.197 li
476.376 624.197 li
476.477 624.197 li
476.577 624.197 li
476.678 624.197 li
476.779 624.197 li
476.88 624.197 476.88 624.197 476.98 624.197 cv
477.081 624.197 li
477.183 624.197 477.183 624.197 477.283 624.197 cv
477.283 624.197 477.283 624.197 477.384 624.197 cv
477.484 624.197 477.484 624.197 477.586 624.197 cv
477.586 624.197 li
477.787 624.197 477.888 624.197 478.09 624.197 cv
478.493 621.979 li
478.19 621.475 477.889 620.87 477.586 620.366 cv
477.484 620.164 477.384 620.063 477.283 619.862 cv
477.283 619.761 477.183 619.761 477.183 619.66 cv
477.082 619.56 477.082 619.459 476.98 619.357 cv
476.98 619.257 476.88 619.156 476.88 619.156 cv
476.88 619.056 476.779 618.954 476.679 618.854 cv
476.577 618.753 476.577 618.652 476.477 618.552 cv
476.477 618.552 476.477 618.45 476.376 618.45 cv
463.269 619.156 453.086 622.685 453.086 626.617 cv
453.086 630.65 464.479 634.885 481.417 634.885 cv
498.355 634.885 509.748 630.65 509.748 626.617 cv
509.849 624.903 507.731 623.088 503.698 621.576 cv
cp
f
482.828 602.117 mo
487.365 602.117 490.995 598.487 490.995 593.951 cv
490.995 589.414 487.365 585.784 482.828 585.784 cv
478.291 585.784 474.662 589.414 474.662 593.951 cv
474.662 598.487 478.291 602.117 482.828 602.117 cv
cp
f
504.908 612.401 mo
505.917 614.316 li
506.925 612.401 li
507.025 612.301 507.025 612.199 507.127 612.199 cv
509.042 611.191 li
507.127 610.183 li
507.025 610.082 506.925 610.082 506.925 609.981 cv
505.917 608.065 li
504.908 609.981 li
504.808 610.082 504.808 610.183 504.707 610.183 cv
502.791 611.191 li
504.707 612.199 li
504.808 612.199 504.808 612.301 504.908 612.401 cv
cp
f
456.514 603.63 mo
457.522 605.545 li
458.53 603.63 li
458.631 603.529 458.631 603.428 458.732 603.428 cv
460.647 602.42 li
458.732 601.411 li
458.631 601.311 458.53 601.311 458.53 601.21 cv
457.522 599.294 li
456.514 601.21 li
456.413 601.311 456.413 601.411 456.313 601.411 cv
454.396 602.42 li
456.313 603.428 li
456.413 603.428 456.413 603.428 456.514 603.63 cv
cp
f
304.071 556.143 mo
404.893 556.143 li
404.893 656.965 li
304.071 656.965 li
304.071 556.143 li
cp
1 1 1 rgb
f
375.957 621.072 mo
376.26 621.072 376.562 621.374 376.562 621.677 cv
376.562 621.979 376.26 622.281 375.957 622.281 cv
343.19 622.281 li
342.888 622.281 342.585 621.979 342.585 621.677 cv
342.585 621.374 342.888 621.072 343.19 621.072 cv
375.957 621.072 li
cp
357.608 586.389 mo
357.608 586.087 357.91 585.784 358.212 585.784 cv
358.515 585.784 358.817 586.087 358.817 586.389 cv
358.817 605.344 li
358.817 605.646 358.515 605.948 358.212 605.948 cv
357.91 605.948 357.608 605.646 357.608 605.344 cv
357.608 586.389 li
cp
363.354 595.866 mo
382.914 595.866 li
382.914 586.994 li
363.354 586.994 li
363.052 586.994 362.75 586.691 362.75 586.389 cv
362.75 578.223 li
353.877 578.223 li
353.877 586.389 li
353.877 586.691 353.575 586.994 353.272 586.994 cv
326.151 586.994 li
326.151 595.866 li
353.272 595.866 li
353.575 595.866 353.877 596.169 353.877 596.472 cv
353.877 617.846 li
353.877 618.047 353.776 618.249 353.575 618.35 cv
353.373 618.45 353.171 618.552 352.97 618.45 cv
349.34 617.342 li
339.863 618.552 li
339.863 618.552 li
339.762 618.652 li
339.762 618.652 339.762 618.652 339.762 618.753 cv
339.762 618.753 339.762 618.854 339.661 618.854 cv
339.661 618.854 339.661 618.954 339.561 618.954 cv
339.561 618.954 339.561 618.954 339.561 619.056 cv
339.561 619.056 339.561 619.156 339.459 619.156 cv
339.459 619.156 339.459 619.156 339.459 619.257 cv
339.459 619.257 339.459 619.357 339.359 619.357 cv
339.359 619.357 339.359 619.357 339.359 619.459 cv
338.754 620.567 338.25 621.374 338.048 621.777 cv
338.048 621.777 li
337.947 621.879 li
337.947 621.879 li
337.947 621.879 337.947 621.979 337.847 621.979 cv
337.847 621.979 li
337.847 622.08 li
337.746 622.281 337.544 622.383 337.342 622.383 cv
337.242 622.383 li
337.242 622.383 li
337.04 622.383 336.838 622.281 336.737 622.08 cv
336.737 622.08 336.536 621.677 336.133 621.072 cv
336.133 621.072 li
336.032 620.971 li
336.032 620.971 li
335.931 620.87 li
335.931 620.87 li
335.83 620.77 li
335.83 620.77 li
335.729 620.669 li
335.729 620.669 li
335.729 620.669 335.729 620.567 335.628 620.567 cv
335.628 620.567 335.628 620.567 335.628 620.467 cv
335.528 620.366 li
335.528 620.366 li
335.427 620.266 li
335.427 620.266 335.427 620.266 335.427 620.164 cv
335.427 620.063 335.326 620.063 335.326 619.963 cv
335.326 619.963 li
335.326 619.862 335.225 619.862 335.225 619.761 cv
335.225 619.761 335.225 619.761 335.225 619.66 cv
335.225 619.66 335.225 619.56 335.125 619.56 cv
335.125 619.56 335.125 619.459 335.023 619.459 cv
335.023 619.459 335.023 619.459 335.023 619.357 cv
335.023 619.257 334.923 619.156 334.923 619.156 cv
334.923 619.156 334.923 619.056 334.822 619.056 cv
334.822 619.056 334.822 618.955 334.721 618.955 cv
334.62 618.854 li
334.62 618.753 li
334.52 618.652 li
334.52 618.552 li
334.418 618.45 li
334.418 618.45 334.418 618.35 334.318 618.35 cv
334.318 618.35 334.318 618.249 334.217 618.249 cv
334.217 618.249 334.217 618.148 334.116 618.148 cv
334.116 618.148 334.116 618.047 334.015 618.047 cv
334.015 618.047 334.015 617.946 333.915 617.946 cv
333.915 617.846 li
325.95 617.846 li
325.95 626.718 li
340.468 627.928 li
349.239 626.718 li
349.34 626.718 349.441 626.718 349.542 626.718 cv
353.373 627.928 li
353.676 628.028 353.776 628.23 353.776 628.532 cv
353.776 635.59 li
362.649 635.59 li
362.649 626.718 li
362.649 626.415 362.951 626.113 363.254 626.113 cv
382.813 626.113 li
382.813 617.24 li
363.354 617.24 li
363.052 617.24 362.75 616.938 362.75 616.636 cv
362.75 596.472 li
362.649 596.169 362.951 595.866 363.354 595.866 cv
cp
0 0 0 rgb
f
337.342 605.545 mo
338.754 605.545 339.863 606.654 339.863 608.065 cv
339.863 609.478 338.754 610.586 337.342 610.586 cv
335.931 610.586 334.822 609.478 334.822 608.065 cv
334.822 606.654 336.032 605.545 337.342 605.545 cv
cp
337.342 620.467 mo
337.746 619.761 338.351 618.753 338.956 617.644 cv
339.157 617.24 339.359 616.837 339.661 616.434 cv
343.19 609.981 343.493 608.671 343.493 608.469 cv
343.493 605.041 340.771 602.218 337.342 602.218 cv
333.915 602.218 331.192 605.041 331.192 608.469 cv
331.192 608.771 331.495 610.082 335.023 616.434 cv
335.931 617.946 336.838 619.459 337.342 620.467 cv
cp
f
337.342 609.275 mo
338.048 609.275 338.552 608.771 338.552 608.065 cv
338.552 607.36 338.048 606.855 337.342 606.855 cv
336.637 606.855 336.133 607.36 336.133 608.065 cv
336.133 608.771 336.737 609.275 337.342 609.275 cv
cp
f
177.036 556.143 mo
277.857 556.143 li
277.857 656.965 li
177.036 656.965 li
177.036 556.143 li
cp
1 1 1 rgb
f
235.412 597.277 mo
235.311 597.479 235.109 597.681 234.807 597.681 cv
232.286 597.681 li
232.286 602.723 li
232.286 603.024 232.084 603.327 231.681 603.327 cv
223.313 603.327 li
223.01 603.327 222.708 603.024 222.708 602.723 cv
222.708 597.681 li
220.188 597.681 li
219.885 597.681 219.683 597.479 219.583 597.277 cv
219.481 597.076 219.583 596.773 219.784 596.572 cv
227.144 589.716 li
227.346 589.515 227.749 589.515 228.051 589.716 cv
235.412 596.572 li
235.412 596.773 235.512 597.076 235.412 597.277 cv
cp
226.942 584.474 mo
220.389 584.474 214.945 589.817 214.945 596.472 cv
214.945 603.126 220.389 608.469 226.942 608.469 cv
233.496 608.469 238.94 603.024 238.94 596.472 cv
238.94 589.918 233.496 584.474 226.942 584.474 cv
cp
0 0 0 rgb
f
203.25 614.922 mo
204.257 616.837 li
205.266 614.922 li
205.367 614.82 205.367 614.72 205.467 614.72 cv
207.383 613.712 li
205.467 612.703 li
205.367 612.603 205.266 612.603 205.266 612.502 cv
204.257 610.586 li
203.25 612.502 li
203.148 612.603 203.148 612.703 203.048 612.703 cv
201.132 613.712 li
203.048 614.72 li
203.048 614.72 203.148 614.82 203.25 614.922 cv
cp
f
246.3 623.593 mo
244.385 624.601 li
246.3 625.608 li
246.401 625.71 246.502 625.71 246.502 625.811 cv
247.51 627.727 li
248.519 625.811 li
248.619 625.71 248.619 625.608 248.72 625.608 cv
250.636 624.601 li
248.72 623.593 li
248.619 623.491 248.519 623.491 248.519 623.391 cv
247.51 621.475 li
246.502 623.391 li
246.502 623.491 246.401 623.593 246.3 623.593 cv
cp
f
221.7 596.472 mo
223.212 596.472 li
223.515 596.472 223.918 596.673 223.918 597.076 cv
223.918 602.218 li
230.975 602.218 li
230.975 597.076 li
230.975 596.773 231.278 596.472 231.681 596.472 cv
233.193 596.472 li
227.447 591.128 li
221.7 596.472 li
cp
f
226.942 609.679 mo
219.683 609.679 213.735 603.73 213.735 596.472 cv
213.735 589.212 219.683 583.264 226.942 583.264 cv
234.202 583.264 240.15 589.212 240.15 596.472 cv
240.15 603.73 234.202 609.679 226.942 609.679 cv
cp
256.483 634.885 mo
228.051 634.885 li
229.463 632.465 233.395 625.71 237.226 618.652 cv
240.049 613.51 242.268 609.074 243.88 605.747 cv
245.998 601.411 247.006 598.589 247.006 597.379 cv
247.006 586.188 237.932 577.013 226.842 577.013 cv
215.751 577.013 206.677 586.188 206.677 597.379 cv
206.677 599.799 210.004 607.058 216.558 618.854 cv
220.49 625.911 224.422 632.565 225.833 634.985 cv
198.511 634.985 li
198.208 634.985 197.906 635.288 197.906 635.59 cv
197.906 635.893 198.208 636.195 198.511 636.195 cv
227.043 636.195 li
227.043 636.195 li
256.483 636.195 li
256.786 636.195 257.088 635.893 257.088 635.59 cv
257.088 635.187 256.786 634.885 256.483 634.885 cv
cp
f
50 556.143 mo
150.822 556.143 li
150.822 656.965 li
50 656.965 li
50 556.143 li
cp
1 1 1 rgb
f
80.6499 597.983 mo
82.6665 596.976 li
80.6499 595.967 li
80.5488 595.866 80.4482 595.866 80.3472 595.665 cv
79.3394 593.749 li
78.3311 595.665 li
78.23 595.766 78.23 595.866 78.1294 595.866 cv
76.2139 596.976 li
78.0283 598.084 li
78.1294 598.186 78.23 598.186 78.23 598.286 cv
79.4399 600.202 li
80.3472 598.286 li
80.4482 598.186 80.5488 598.084 80.6499 597.983 cv
cp
0 0 0 rgb
f
93.7568 604.738 mo
90.127 606.352 87.9092 610.082 87.9092 614.115 cv
87.9092 614.418 87.6064 614.72 87.3042 614.72 cv
87.0015 614.72 86.6992 614.418 86.6992 614.115 cv
86.6992 609.478 89.3208 605.344 93.3535 603.529 cv
93.6558 603.428 94.0591 603.529 94.1602 603.831 cv
94.1602 604.234 94.0591 604.537 93.7568 604.738 cv
cp
107.67 598.79 mo
107.468 598.689 107.267 598.487 107.267 598.186 cv
107.267 584.474 li
92.1436 584.474 li
92.1436 598.186 li
92.1436 598.387 92.0425 598.689 91.7402 598.79 cv
84.2793 602.117 79.541 609.779 79.541 618.249 cv
79.541 618.35 79.541 618.45 79.541 618.45 cv
100.209 618.45 li
100.209 634.885 li
100.209 635.187 100.512 635.489 100.814 635.489 cv
101.117 635.489 101.419 635.187 101.419 634.885 cv
101.419 618.552 li
119.769 618.552 li
119.769 618.45 119.769 618.35 119.769 618.35 cv
119.97 609.78 115.131 602.117 107.67 598.79 cv
cp
f
107.973 583.264 mo
112.409 583.264 li
112.409 578.223 li
87.2031 578.223 li
87.2031 583.264 li
91.6396 583.264 li
107.973 583.264 li
cp
f
117.349 590.221 mo
118.156 592.136 li
119.466 590.119 li
119.567 590.019 119.567 589.918 119.668 589.918 cv
121.583 588.909 li
119.668 587.901 li
119.567 587.901 119.466 587.801 119.466 587.7 cv
118.156 585.684 li
117.349 587.599 li
117.248 587.7 117.147 587.801 117.046 587.901 cv
114.929 588.909 li
117.046 589.918 li
117.248 590.019 117.349 590.119 117.349 590.221 cv
cp
f
685.178 429.106 mo
786 429.106 li
786 529.929 li
685.178 529.929 li
685.178 429.106 li
cp
1 1 1 rgb
f
724.7 478.913 mo
724.7 478.813 724.7 478.711 724.7 478.61 cv
724.7 478.51 724.7 478.51 724.7 478.409 cv
724.7 478.308 724.7 478.207 724.7 478.006 cv
724.7 477.904 li
724.7 477.703 724.7 477.603 724.801 477.4 cv
724.801 477.3 li
724.801 477.199 724.801 477.098 724.902 476.997 cv
724.902 476.896 li
724.902 476.796 725.003 476.695 725.003 476.594 cv
725.003 476.493 li
725.003 476.493 725.003 476.493 725.003 476.393 cv
719.559 476.393 li
719.256 476.393 718.853 476.09 718.853 475.787 cv
718.853 470.948 li
707.561 479.518 li
718.953 488.088 li
718.953 483.248 li
718.953 482.945 719.256 482.644 719.659 482.644 cv
725.104 482.644 li
725.104 482.644 725.104 482.644 725.104 482.543 cv
725.104 482.441 li
725.104 482.341 725.003 482.24 725.003 482.14 cv
725.003 482.038 li
725.003 481.938 724.902 481.837 724.902 481.736 cv
724.902 481.635 li
724.902 481.434 724.801 481.333 724.801 481.131 cv
724.801 481.03 li
724.801 480.93 724.801 480.828 724.801 480.627 cv
724.801 480.526 724.801 480.526 724.801 480.425 cv
724.801 480.324 724.801 480.224 724.801 480.123 cv
724.801 480.022 li
724.801 479.82 724.801 479.72 724.801 479.518 cv
724.801 479.316 724.801 479.216 724.801 479.014 cv
724.7 479.014 724.7 478.913 724.7 478.913 cv
cp
0 0 0 rgb
f
739.42 481.131 mo
739.017 482.24 738.109 483.047 737.102 483.551 cv
736.496 483.752 735.992 483.954 735.388 483.954 cv
734.883 483.954 734.379 483.854 733.875 483.651 cv
732.766 483.248 731.758 482.341 731.354 481.131 cv
731.153 480.627 731.052 480.021 731.052 479.518 cv
731.052 478.913 731.153 478.409 731.354 477.904 cv
731.858 476.796 732.766 475.889 733.875 475.384 cv
734.379 475.183 734.883 475.082 735.388 475.082 cv
735.992 475.082 736.598 475.183 737.102 475.485 cv
738.109 475.989 739.017 476.796 739.42 477.904 cv
739.622 478.409 739.723 479.014 739.723 479.518 cv
739.723 480.123 739.622 480.627 739.42 481.131 cv
cp
739.118 470.847 mo
737.908 470.343 736.698 470.041 735.388 470.041 cv
734.278 470.041 733.169 470.242 732.061 470.646 cv
729.641 471.553 727.523 473.469 726.616 475.989 cv
726.616 475.989 li
726.213 476.796 726.011 477.703 725.91 478.61 cv
725.91 478.913 725.81 479.216 725.81 479.518 cv
725.81 479.82 725.81 480.123 725.81 480.425 cv
725.91 481.333 726.111 482.24 726.414 483.047 cv
726.414 483.047 li
727.423 485.467 729.438 487.382 731.858 488.391 cv
732.968 488.793 734.076 488.995 735.186 488.995 cv
736.496 488.995 737.807 488.692 738.916 488.188 cv
741.134 487.181 742.949 485.365 743.957 483.047 cv
744.461 481.938 744.663 480.728 744.663 479.518 cv
744.663 478.308 744.461 477.098 743.957 475.989 cv
743.15 473.67 741.336 471.855 739.118 470.847 cv
cp
f
738.715 495.447 mo
738.715 489.701 li
738.613 489.701 li
738.513 489.701 738.513 489.701 738.412 489.701 cv
738.312 489.701 738.21 489.802 738.109 489.802 cv
738.009 489.802 738.009 489.802 737.908 489.802 cv
737.807 489.802 737.605 489.902 737.505 489.902 cv
737.403 489.902 li
737.202 489.902 737.102 490.003 736.899 490.003 cv
736.799 490.003 li
736.698 490.003 736.598 490.003 736.396 490.003 cv
736.295 490.003 736.295 490.003 736.194 490.003 cv
736.093 490.003 735.992 490.003 735.791 490.003 cv
735.689 490.003 735.689 490.003 735.589 490.003 cv
735.388 490.003 735.286 490.003 735.085 490.003 cv
734.984 490.003 734.782 490.003 734.682 490.003 cv
734.581 490.003 li
734.48 490.003 734.379 490.003 734.278 490.003 cv
734.178 490.003 li
734.076 490.003 733.976 490.003 733.774 490.003 cv
733.674 490.003 li
733.572 490.003 733.371 490.003 733.271 489.902 cv
733.169 489.902 li
733.068 489.902 732.968 489.902 732.867 489.802 cv
732.766 489.802 li
732.665 489.802 732.564 489.701 732.464 489.701 cv
732.362 489.701 li
732.362 489.701 li
732.362 495.347 li
732.362 495.649 732.061 496.053 731.758 496.053 cv
726.918 496.053 li
735.589 507.546 li
744.159 496.153 li
739.319 496.153 li
739.017 496.153 738.715 495.851 738.715 495.447 cv
cp
f
736.598 476.594 mo
736.194 476.393 735.791 476.291 735.388 476.291 cv
734.984 476.291 734.682 476.393 734.278 476.493 cv
733.472 476.796 732.766 477.4 732.464 478.308 cv
732.262 478.711 732.262 479.114 732.262 479.518 cv
732.262 479.921 732.362 480.324 732.464 480.728 cv
732.766 481.534 733.472 482.14 734.278 482.543 cv
734.682 482.644 734.984 482.744 735.388 482.744 cv
735.791 482.744 736.295 482.644 736.598 482.441 cv
737.303 482.14 737.908 481.534 738.312 480.728 cv
738.513 480.324 738.513 479.921 738.513 479.518 cv
738.513 479.114 738.412 478.711 738.312 478.308 cv
738.009 477.603 737.403 476.997 736.598 476.594 cv
cp
f
732.464 463.588 mo
732.464 469.234 li
732.464 469.234 li
732.564 469.234 li
732.665 469.234 732.766 469.133 732.867 469.133 cv
732.968 469.133 li
733.068 469.133 733.169 469.133 733.271 469.032 cv
733.371 469.032 li
733.472 469.032 733.674 469.032 733.774 468.932 cv
733.875 468.932 li
733.976 468.932 734.076 468.932 734.278 468.932 cv
734.379 468.932 li
734.48 468.932 734.581 468.932 734.682 468.932 cv
734.782 468.932 li
734.883 468.932 735.085 468.932 735.186 468.932 cv
735.388 468.932 735.488 468.932 735.689 468.932 cv
735.791 468.932 735.791 468.932 735.892 468.932 cv
735.992 468.932 736.093 468.932 736.295 468.932 cv
736.396 468.932 736.396 468.932 736.496 468.932 cv
736.598 468.932 736.698 468.932 736.899 468.932 cv
737 468.932 li
737.202 468.932 737.303 469.032 737.505 469.032 cv
737.605 469.032 li
737.706 469.032 737.908 469.133 738.009 469.133 cv
738.109 469.133 738.109 469.133 738.21 469.133 cv
738.312 469.133 738.412 469.234 738.513 469.234 cv
738.613 469.234 738.613 469.234 738.715 469.234 cv
738.815 469.234 li
738.815 463.487 li
738.815 463.185 739.118 462.781 739.42 462.781 cv
744.26 462.781 li
735.589 451.489 li
727.02 462.882 li
731.858 462.882 li
732.161 462.882 732.464 463.185 732.464 463.588 cv
cp
f
763.617 479.518 mo
752.225 470.948 li
752.225 475.787 li
752.225 476.09 751.922 476.393 751.519 476.393 cv
745.57 476.393 li
745.57 476.393 745.57 476.393 745.57 476.493 cv
745.57 476.594 li
745.57 476.695 745.671 476.796 745.671 476.896 cv
745.671 476.997 li
745.671 477.098 745.772 477.199 745.772 477.3 cv
745.772 477.4 li
745.772 477.603 745.873 477.703 745.873 477.904 cv
745.873 478.006 li
745.873 478.106 745.873 478.207 745.873 478.409 cv
745.873 478.51 745.873 478.51 745.873 478.61 cv
745.873 478.711 745.873 478.813 745.873 478.913 cv
745.873 479.014 li
745.873 479.216 745.873 479.316 745.873 479.518 cv
745.873 479.72 745.873 479.82 745.873 480.021 cv
745.873 480.123 li
745.873 480.224 745.873 480.324 745.873 480.425 cv
745.873 480.526 745.873 480.526 745.873 480.627 cv
745.873 480.728 745.873 480.828 745.873 481.03 cv
745.873 481.131 li
745.873 481.333 745.873 481.434 745.772 481.635 cv
745.772 481.736 li
745.772 481.837 745.772 481.938 745.671 482.038 cv
745.671 482.14 745.671 482.14 745.671 482.24 cv
745.671 482.341 745.57 482.441 745.57 482.543 cv
745.57 482.644 li
745.57 482.644 745.57 482.644 745.57 482.744 cv
751.519 482.744 li
751.821 482.744 752.225 483.047 752.225 483.349 cv
752.225 488.188 li
763.617 479.518 li
cp
f
558.143 429.106 mo
658.965 429.106 li
658.965 529.929 li
558.143 529.929 li
558.143 429.106 li
cp
1 1 1 rgb
f
598.471 482.945 mo
591.011 482.945 584.961 476.896 584.961 469.436 cv
584.961 461.975 591.011 455.926 598.471 455.926 cv
605.932 455.926 611.981 461.975 611.981 469.436 cv
611.981 476.896 605.932 482.945 598.471 482.945 cv
cp
613.091 480.425 mo
615.51 477.199 616.72 473.469 616.72 469.436 cv
616.72 459.354 608.554 451.187 598.471 451.187 cv
588.389 451.187 580.223 459.354 580.223 469.436 cv
580.223 479.518 588.389 487.685 598.471 487.685 cv
602.504 487.685 606.234 486.374 609.461 484.055 cv
610.872 483.047 612.082 481.837 613.091 480.425 cv
cp
0 0 0 rgb
f
616.82 484.962 mo
613.595 481.736 li
613.494 481.938 613.393 482.038 613.191 482.14 cv
613.091 482.24 li
612.989 482.341 612.889 482.441 612.788 482.543 cv
612.688 482.644 li
612.385 482.945 612.082 483.248 611.779 483.551 cv
611.679 483.651 li
611.578 483.752 611.478 483.854 611.376 483.954 cv
611.275 484.055 li
611.175 484.155 610.974 484.357 610.872 484.458 cv
614.099 487.685 li
616.82 484.962 li
cp
f
598.773 469.032 mo
597.766 469.032 596.959 468.226 596.959 467.218 cv
596.959 466.209 597.766 465.402 598.773 465.402 cv
599.782 465.402 600.589 466.209 600.589 467.218 cv
600.589 468.226 599.782 469.032 598.773 469.032 cv
cp
598.572 462.479 mo
595.749 462.479 593.43 464.697 593.43 467.419 cv
593.43 467.52 593.531 467.923 594.438 469.839 cv
594.942 470.746 595.547 471.855 596.354 473.267 cv
596.455 473.469 596.556 473.67 596.656 473.872 cv
596.858 474.174 597.06 474.577 597.262 474.88 cv
597.362 475.082 597.563 475.384 597.665 475.586 cv
597.766 475.787 597.866 475.989 597.967 476.09 cv
598.169 476.493 li
598.27 476.695 598.37 476.896 598.471 477.098 cv
598.572 476.997 598.673 476.796 598.773 476.594 cv
599.076 476.09 li
599.177 475.889 599.277 475.687 599.379 475.485 cv
599.479 475.283 599.681 475.082 599.782 474.779 cv
599.782 474.779 li
599.983 474.477 600.186 474.073 600.387 473.771 cv
601.294 472.158 602 470.847 602.604 469.839 cv
603.613 467.923 603.613 467.52 603.613 467.419 cv
603.714 464.697 601.396 462.479 598.572 462.479 cv
cp
f
603.814 470.444 mo
603.311 471.553 602.504 472.863 601.597 474.477 cv
601.396 474.779 601.193 475.183 600.992 475.485 cv
600.992 475.485 li
600.891 475.687 600.689 475.989 600.589 476.19 cv
600.487 476.393 600.387 476.594 600.286 476.796 cv
599.983 477.3 li
599.479 478.106 599.177 478.711 599.177 478.711 cv
599.076 478.913 598.874 479.014 598.673 479.014 cv
598.673 479.014 li
598.471 479.014 598.27 478.913 598.169 478.711 cv
598.169 478.711 597.766 478.106 597.262 477.3 cv
597.06 476.896 li
596.959 476.695 596.858 476.594 596.757 476.393 cv
596.656 476.19 596.455 475.889 596.354 475.687 cv
596.152 475.384 595.951 474.98 595.749 474.679 cv
595.648 474.477 595.547 474.275 595.446 474.073 cv
594.64 472.763 594.035 471.553 593.531 470.646 cv
592.522 468.629 592.321 468.024 592.321 467.621 cv
592.321 464.193 595.245 461.37 598.773 461.37 cv
602.303 461.37 605.227 464.193 605.227 467.621 cv
605.024 467.822 604.823 468.428 603.814 470.444 cv
cp
598.471 457.236 mo
591.716 457.236 586.271 462.681 586.271 469.436 cv
586.271 476.19 591.716 481.635 598.471 481.635 cv
605.227 481.635 610.671 476.19 610.671 469.436 cv
610.671 462.681 605.227 457.236 598.471 457.236 cv
cp
f
613.671 489.988 mo
619.018 484.642 li
622.154 487.778 li
616.808 493.125 li
613.671 489.988 li
cp
f
636.179 501.8 mo
633.053 498.674 li
633.053 498.774 632.952 498.774 632.952 498.876 cv
630.432 501.396 li
630.331 501.497 630.129 501.598 630.028 501.598 cv
629.928 501.598 629.726 501.497 629.625 501.396 cv
629.424 501.194 629.424 500.791 629.625 500.489 cv
632.146 497.968 li
632.246 497.867 632.246 497.867 632.348 497.867 cv
622.971 488.592 li
617.627 493.936 li
621.761 498.069 li
621.761 497.968 621.862 497.968 621.862 497.867 cv
624.383 495.347 li
624.584 495.146 624.987 495.146 625.29 495.347 cv
625.491 495.549 625.491 495.952 625.29 496.254 cv
622.77 498.774 li
622.669 498.876 622.669 498.876 622.567 498.876 cv
630.734 507.042 li
631.238 507.546 631.844 507.748 632.549 507.748 cv
633.255 507.748 633.859 507.445 634.363 507.042 cv
636.179 505.228 li
637.187 504.421 637.187 502.808 636.179 501.8 cv
cp
f
431.106 429.106 mo
531.929 429.106 li
531.929 529.929 li
431.106 529.929 li
431.106 429.106 li
cp
1 1 1 rgb
f
477.082 466.915 mo
477.082 467.218 476.779 467.52 476.477 467.52 cv
476.174 467.52 475.872 467.218 475.872 466.915 cv
475.872 463.79 478.393 461.27 481.518 461.27 cv
481.82 461.27 482.123 461.571 482.123 461.874 cv
482.123 462.177 481.82 462.479 481.518 462.479 cv
479.098 462.479 477.082 464.495 477.082 466.915 cv
cp
490.995 466.915 mo
490.995 461.673 486.761 457.438 481.518 457.438 cv
476.275 457.438 472.04 461.673 472.04 466.915 cv
472.04 472.158 476.275 476.393 481.518 476.393 cv
486.761 476.393 490.995 472.158 490.995 466.915 cv
cp
0 0 0 rgb
f
502.388 500.086 mo
504.001 503.01 li
505.614 500.086 li
505.715 499.984 505.715 499.884 505.815 499.884 cv
508.739 498.271 li
505.815 496.657 li
505.715 496.557 505.614 496.557 505.614 496.456 cv
504.001 493.532 li
502.388 496.456 li
502.287 496.557 502.287 496.657 502.187 496.657 cv
499.263 498.271 li
502.187 499.884 li
502.287 499.884 502.287 499.984 502.388 500.086 cv
cp
f
457.018 490.406 mo
458.631 493.33 li
460.244 490.406 li
460.345 490.306 460.345 490.205 460.446 490.205 cv
463.37 488.592 li
460.446 486.979 li
460.345 486.878 460.244 486.878 460.244 486.777 cv
458.631 483.854 li
457.018 486.777 li
456.917 486.878 456.917 486.979 456.816 486.979 cv
453.893 488.592 li
456.816 490.205 li
456.917 490.205 456.917 490.306 457.018 490.406 cv
cp
f
470.831 466.915 mo
470.831 460.967 475.67 456.228 481.518 456.228 cv
487.365 456.228 492.205 461.067 492.205 466.915 cv
492.205 472.763 487.466 477.603 481.518 477.603 cv
475.569 477.603 470.831 472.863 470.831 466.915 cv
cp
510.252 506.034 mo
481.014 506.034 li
487.063 484.559 li
487.164 484.357 487.265 484.257 487.466 484.155 cv
494.12 481.736 498.557 475.283 498.557 468.226 cv
498.557 458.85 490.895 451.187 481.518 451.187 cv
472.142 451.187 464.479 458.85 464.479 468.226 cv
464.479 474.88 468.411 480.93 474.46 483.752 cv
474.662 483.854 474.763 483.954 474.763 484.155 cv
480.913 506.034 li
452.279 506.034 li
451.977 506.034 451.675 506.337 451.675 506.639 cv
451.675 506.941 451.977 507.244 452.279 507.244 cv
510.252 507.244 li
510.555 507.244 510.857 506.941 510.857 506.639 cv
510.857 506.235 510.555 506.034 510.252 506.034 cv
cp
f
304.071 429.106 mo
404.893 429.106 li
404.893 529.929 li
304.071 529.929 li
304.071 429.106 li
cp
1 1 1 rgb
f
336.838 462.479 mo
338.552 462.479 339.964 461.067 339.964 459.354 cv
339.964 457.64 338.552 456.228 336.838 456.228 cv
335.125 456.228 333.713 457.64 333.713 459.354 cv
333.713 461.067 335.125 462.479 336.838 462.479 cv
cp
0 0 0 rgb
f
336.838 454.917 mo
339.258 454.917 341.274 456.934 341.274 459.354 cv
341.274 461.773 339.258 463.79 336.838 463.79 cv
334.418 463.79 332.402 461.773 332.402 459.354 cv
332.402 456.934 334.418 454.917 336.838 454.917 cv
cp
333.108 468.226 mo
333.31 468.528 333.41 468.831 333.612 469.133 cv
334.116 469.939 334.62 470.847 335.225 471.755 cv
335.427 472.057 335.528 472.359 335.729 472.562 cv
335.931 472.863 li
335.931 472.863 li
336.032 472.965 336.032 473.065 336.133 473.267 cv
336.435 473.771 336.737 474.174 336.939 474.577 cv
337.141 474.174 337.544 473.67 337.847 472.965 cv
338.048 472.662 li
338.25 472.359 338.351 472.057 338.552 471.755 cv
338.754 471.452 338.956 471.049 339.157 470.646 cv
339.459 470.142 339.762 469.638 340.064 469.133 cv
341.476 466.714 342.585 464.697 343.392 462.983 cv
344.904 460.06 345.005 459.253 345.005 459.151 cv
345.005 454.816 341.274 451.187 336.737 451.187 cv
332.201 451.187 328.47 454.716 328.47 459.151 cv
328.47 459.354 328.672 460.16 330.083 462.983 cv
330.89 464.495 331.898 466.209 333.108 468.226 cv
cp
f
365.875 491.516 mo
367.589 491.516 369 490.104 369 488.391 cv
369 486.676 367.589 485.265 365.875 485.265 cv
364.161 485.265 362.75 486.676 362.75 488.391 cv
362.75 490.104 364.06 491.516 365.875 491.516 cv
cp
f
370.21 488.391 mo
370.21 490.81 368.194 492.826 365.774 492.826 cv
363.354 492.826 361.338 490.81 361.338 488.391 cv
361.338 485.971 363.354 483.954 365.774 483.954 cv
368.194 483.954 370.21 485.869 370.21 488.391 cv
cp
357.608 488.188 mo
357.608 488.391 357.809 489.196 359.221 492.02 cv
359.927 493.432 360.935 495.246 362.145 497.263 cv
362.346 497.565 362.447 497.867 362.649 498.17 cv
363.153 498.977 363.657 499.884 364.262 500.791 cv
364.463 501.094 364.564 501.396 364.766 501.598 cv
364.968 501.9 li
365.169 502.304 365.371 502.606 365.573 502.908 cv
365.673 503.01 365.673 503.11 365.774 503.211 cv
365.875 503.312 365.875 503.412 365.976 503.514 cv
366.177 503.11 366.581 502.606 366.883 501.9 cv
367.085 501.598 li
367.287 501.295 367.387 500.993 367.589 500.791 cv
367.791 500.489 367.992 500.086 368.194 499.683 cv
368.497 499.178 368.799 498.674 369.102 498.17 cv
370.513 495.75 371.622 493.733 372.429 492.02 cv
373.941 489.096 374.042 488.289 374.042 488.188 cv
374.042 483.854 370.311 480.224 365.774 480.224 cv
361.237 480.224 357.608 483.752 357.608 488.188 cv
cp
f
378.478 451.187 mo
369.605 451.187 li
367.186 451.187 365.169 453.203 365.169 455.623 cv
365.169 457.337 366.077 458.748 367.488 459.555 cv
341.476 474.275 li
340.669 474.174 339.762 473.973 338.653 473.973 cv
338.653 473.973 338.653 474.073 338.552 474.073 cv
338.552 474.073 338.552 474.174 338.452 474.174 cv
338.452 474.275 338.351 474.275 338.351 474.275 cv
338.351 474.275 338.351 474.376 338.25 474.376 cv
338.25 474.376 338.25 474.477 338.149 474.477 cv
338.149 474.577 338.048 474.577 338.048 474.679 cv
338.048 474.679 338.048 474.779 337.947 474.779 cv
337.947 474.779 337.947 474.779 337.947 474.88 cv
337.847 474.98 li
337.847 475.082 li
337.847 475.082 337.847 475.183 337.746 475.183 cv
337.746 475.183 337.746 475.183 337.746 475.283 cv
337.746 475.283 337.746 475.384 337.645 475.384 cv
337.645 475.384 337.645 475.384 337.645 475.485 cv
337.645 475.485 337.645 475.586 337.544 475.586 cv
337.544 475.586 337.544 475.586 337.544 475.687 cv
337.544 475.687 337.544 475.787 337.443 475.787 cv
337.443 475.787 li
337.443 475.787 337.443 475.889 337.342 475.889 cv
337.342 475.889 li
337.342 475.889 337.342 475.989 337.242 475.989 cv
337.242 475.989 li
337.141 476.09 337.141 476.19 337.141 476.19 cv
337.04 476.393 336.838 476.493 336.637 476.493 cv
336.637 476.493 li
336.637 476.493 li
336.637 476.493 336.637 476.493 336.536 476.493 cv
336.536 476.493 li
336.334 476.493 336.233 476.393 336.133 476.19 cv
336.133 476.19 li
336.133 476.19 li
336.133 476.09 336.032 475.989 335.83 475.687 cv
335.83 475.687 li
335.729 475.586 li
335.729 475.586 li
335.628 475.485 li
335.628 475.485 335.628 475.485 335.628 475.384 cv
335.628 475.384 335.628 475.283 335.528 475.283 cv
335.528 475.283 335.528 475.283 335.528 475.183 cv
335.528 475.183 335.528 475.082 335.427 475.082 cv
335.427 475.082 335.427 474.98 335.326 474.98 cv
335.326 474.98 335.326 474.88 335.225 474.88 cv
335.225 474.88 335.225 474.779 335.125 474.779 cv
335.023 474.679 li
334.923 474.477 334.822 474.275 334.721 474.073 cv
334.721 474.073 li
328.874 474.275 325.849 475.787 325.849 476.594 cv
325.849 477.501 329.277 479.114 335.931 479.114 cv
336.334 479.114 336.738 479.114 337.141 479.114 cv
337.141 479.216 337.242 479.216 337.242 479.316 cv
355.995 504.622 li
355.188 505.025 354.885 505.328 354.885 505.631 cv
354.885 506.538 358.313 508.151 364.968 508.151 cv
371.622 508.151 375.05 506.538 375.05 505.631 cv
375.05 504.824 372.328 503.514 367.488 503.211 cv
367.488 503.211 367.488 503.211 367.488 503.312 cv
366.783 504.521 366.278 505.328 366.278 505.429 cv
366.178 505.631 365.976 505.731 365.774 505.731 cv
365.774 505.731 li
365.573 505.731 365.472 505.631 365.371 505.53 cv
365.27 505.429 li
365.27 505.429 364.766 504.521 363.859 503.211 cv
361.036 503.312 358.817 503.715 357.305 504.219 cv
357.305 504.118 357.205 504.118 357.205 504.118 cv
338.855 478.813 li
343.694 478.409 346.315 477.098 346.315 476.393 cv
346.315 475.889 345.106 475.082 342.888 474.577 cv
369.202 459.958 li
369.303 459.958 369.505 459.958 369.605 459.958 cv
378.478 459.958 li
380.897 459.958 382.914 457.942 382.914 455.522 cv
382.914 453.103 380.897 451.187 378.478 451.187 cv
cp
f
177.036 429.106 mo
277.857 429.106 li
277.857 529.929 li
177.036 529.929 li
177.036 429.106 li
cp
1 1 1 rgb
f
239.848 489.902 mo
240.15 489.802 240.553 490.003 240.654 490.306 cv
240.755 490.608 240.553 491.012 240.251 491.112 cv
238.638 491.616 237.125 491.818 235.613 491.818 cv
234.101 491.818 232.588 491.616 231.076 491.112 cv
229.766 490.709 229.06 490.205 228.354 489.902 cv
227.648 489.499 227.144 489.196 226.035 489.096 cv
224.321 488.995 223.111 489.499 221.901 490.104 cv
220.591 490.709 219.28 491.415 217.364 491.213 cv
215.55 491.112 213.735 490.306 211.92 488.895 cv
211.618 488.692 211.618 488.289 211.819 487.987 cv
212.021 487.685 212.424 487.685 212.727 487.886 cv
214.239 489.096 215.852 489.802 217.364 489.902 cv
218.978 490.003 220.086 489.499 221.196 488.895 cv
222.506 488.188 223.918 487.584 225.934 487.785 cv
227.245 487.886 227.951 488.289 228.757 488.793 cv
229.362 489.096 230.068 489.499 231.177 489.902 cv
234.101 490.81 236.924 490.81 239.848 489.902 cv
cp
216.154 483.954 mo
206.677 483.954 li
199.519 489.6 li
206.677 495.246 li
216.154 495.246 li
232.488 495.246 li
244.485 495.246 li
244.485 483.954 li
232.488 483.954 li
216.154 483.954 li
cp
0 0 0 rgb
f
216.759 472.562 mo
231.883 472.562 li
231.883 482.644 li
216.759 482.644 li
216.759 472.562 li
cp
f
216.759 496.557 mo
231.883 496.557 li
231.883 507.949 li
216.759 507.949 li
216.759 496.557 li
cp
f
216.759 451.187 mo
231.883 451.187 li
231.883 458.748 li
216.759 458.748 li
216.759 451.187 li
cp
f
240.251 467.117 mo
238.638 467.621 237.125 467.822 235.613 467.822 cv
234.101 467.822 232.588 467.621 231.076 467.117 cv
229.766 466.714 229.06 466.209 228.354 465.907 cv
227.648 465.504 227.144 465.201 226.035 465.101 cv
224.321 465 223.111 465.504 221.901 466.108 cv
220.591 466.714 219.28 467.419 217.364 467.218 cv
215.55 467.117 213.735 466.311 211.92 464.898 cv
211.618 464.697 211.618 464.294 211.819 463.991 cv
212.021 463.688 212.424 463.688 212.727 463.891 cv
214.239 465.201 215.852 465.806 217.364 465.907 cv
218.978 466.008 220.086 465.504 221.196 464.898 cv
222.506 464.193 223.918 463.588 225.934 463.79 cv
227.245 463.891 227.951 464.294 228.757 464.798 cv
229.362 465.101 230.068 465.504 231.177 465.907 cv
233.899 466.814 236.722 466.814 239.646 465.907 cv
239.948 465.806 240.352 466.008 240.453 466.311 cv
240.755 466.612 240.553 467.016 240.251 467.117 cv
cp
247.813 459.958 mo
232.488 459.958 li
216.154 459.958 li
207.988 459.958 li
207.988 471.352 li
216.154 471.352 li
232.488 471.352 li
247.813 471.352 li
255.374 465.705 li
247.813 459.958 li
cp
f
50 429.106 mo
150.822 429.106 li
150.822 529.929 li
50 529.929 li
50 429.106 li
cp
1 1 1 rgb
f
72.0801 500.287 mo
128.843 500.287 li
128.843 506.639 li
72.0801 506.639 li
72.0801 500.287 li
cp
0 0 0 rgb
f
92.2441 465.705 mo
92.2441 460.463 96.479 456.228 101.722 456.228 cv
106.964 456.228 111.199 460.463 111.199 465.705 cv
111.199 470.948 106.964 475.183 101.722 475.183 cv
96.479 475.183 92.2441 470.847 92.2441 465.705 cv
cp
101.621 494.843 mo
102.125 494.238 102.831 493.129 103.839 491.718 cv
107.569 486.374 116.139 472.965 116.139 465.604 cv
116.139 457.64 109.586 451.086 101.621 451.086 cv
93.6558 451.086 87.1025 457.539 87.1025 465.604 cv
87.1025 473.469 94.7646 485.365 99.3018 491.718 cv
100.31 493.129 101.217 494.238 101.621 494.843 cv
cp
f
104.746 492.726 mo
104.646 492.726 104.646 492.826 104.746 492.726 cv
104.646 492.826 104.646 492.826 104.646 492.927 cv
104.646 492.927 104.646 492.927 104.646 493.028 cv
104.545 493.129 li
104.545 493.129 104.545 493.129 104.545 493.229 cv
104.444 493.33 li
104.444 493.33 li
103.234 495.044 102.427 496.153 102.327 496.254 cv
102.327 496.254 li
102.226 496.456 102.024 496.456 101.822 496.456 cv
101.822 496.456 li
101.822 496.456 101.822 496.456 101.722 496.456 cv
101.722 496.456 li
101.621 496.456 101.621 496.456 101.52 496.355 cv
101.52 496.355 li
101.52 496.355 li
101.52 496.355 li
101.52 496.355 li
101.52 496.355 li
101.52 496.355 li
101.52 496.355 li
101.52 496.355 101.52 496.355 101.52 496.254 cv
101.52 496.254 101.117 495.75 100.411 494.843 cv
100.411 494.843 li
100.31 494.742 100.209 494.54 100.108 494.339 cv
100.108 494.339 li
100.108 494.238 100.008 494.238 100.008 494.137 cv
100.008 494.137 li
99.9067 493.936 99.7051 493.835 99.6045 493.633 cv
99.6045 493.633 99.6045 493.633 99.5034 493.532 cv
99.4028 493.432 li
99.4028 493.432 99.4028 493.33 99.3018 493.33 cv
99.3018 493.33 99.3018 493.229 99.2012 493.229 cv
99.1001 493.129 li
99.1001 493.129 99.1001 493.028 98.9995 493.028 cv
98.8984 492.927 li
98.8984 492.927 98.8984 492.927 98.7979 492.826 cv
98.6968 492.726 li
98.6968 492.726 98.6968 492.726 98.6968 492.625 cv
72.0801 492.625 li
72.0801 498.977 li
128.843 498.977 li
128.843 492.625 li
104.746 492.726 li
104.746 492.726 li
cp
f
109.888 465.705 mo
109.888 461.168 106.259 457.539 101.722 457.539 cv
97.1846 457.539 93.5552 461.168 93.5552 465.705 cv
93.5552 470.242 97.1846 473.872 101.722 473.872 cv
106.259 473.872 109.888 470.142 109.888 465.705 cv
cp
f
685.178 302.071 mo
786 302.071 li
786 402.894 li
685.178 402.894 li
685.178 302.071 li
cp
1 1 1 rgb
f
737 344.013 mo
737.102 343.913 737.102 343.812 737.202 343.812 cv
740.126 342.198 li
737.202 340.585 li
737.102 340.484 737 340.484 737 340.384 cv
735.388 337.46 li
733.774 340.384 li
733.674 340.484 733.674 340.585 733.572 340.585 cv
730.648 342.198 li
733.572 343.812 li
733.674 343.912 733.774 343.912 733.774 344.013 cv
735.388 346.937 li
737 344.013 li
cp
0 0 0 rgb
f
722.381 342.4 mo
722.381 335.443 728.027 329.696 735.085 329.696 cv
742.143 329.696 747.788 335.342 747.788 342.4 cv
747.788 349.458 742.143 355.104 735.085 355.104 cv
728.027 355.104 722.381 349.357 722.381 342.4 cv
cp
727.423 364.682 mo
728.834 367.102 730.447 369.723 731.959 372.344 cv
733.271 374.563 734.48 376.377 735.085 377.486 cv
735.085 377.587 735.186 377.587 735.186 377.688 cv
735.791 376.78 736.698 375.167 737.908 373.05 cv
738.009 372.849 738.21 372.546 738.312 372.344 cv
739.219 370.933 740.025 369.42 740.832 368.109 cv
741.537 367.001 742.143 365.791 742.747 364.682 cv
752.426 347.945 753.838 343.509 753.838 342.299 cv
753.838 332.217 745.369 324.05 734.984 324.05 cv
724.6 324.05 716.131 332.217 716.131 342.299 cv
716.131 343.509 717.441 347.744 726.111 362.665 cv
726.616 363.371 727.02 364.077 727.423 364.682 cv
cp
f
734.782 348.55 mo
732.766 344.82 li
729.035 342.803 li
728.834 342.703 728.733 342.501 728.733 342.299 cv
728.733 342.098 728.834 341.896 729.035 341.795 cv
732.766 339.779 li
734.782 336.048 li
734.883 335.847 735.085 335.746 735.286 335.746 cv
735.488 335.746 735.689 335.847 735.791 336.048 cv
737.807 339.779 li
741.537 341.795 li
741.739 341.896 741.84 342.098 741.84 342.299 cv
741.84 342.501 741.739 342.703 741.537 342.803 cv
737.807 344.82 li
735.791 348.55 li
735.689 348.752 735.488 348.853 735.286 348.853 cv
735.186 348.954 734.883 348.752 734.782 348.55 cv
cp
746.478 342.4 mo
746.478 336.149 741.336 331.007 735.085 331.007 cv
728.834 331.007 723.692 336.048 723.692 342.4 cv
723.692 348.651 728.834 353.793 735.085 353.793 cv
741.336 353.793 746.478 348.651 746.478 342.4 cv
cp
f
757.064 374.764 mo
752.426 373.957 746.176 373.453 739.319 373.353 cv
739.319 373.353 li
739.219 373.453 739.219 373.554 739.118 373.756 cv
737.202 376.981 735.791 379.2 735.791 379.2 cv
735.689 379.401 735.488 379.503 735.286 379.503 cv
735.286 379.503 li
735.286 379.503 li
735.085 379.503 734.883 379.401 734.782 379.2 cv
734.782 379.2 734.178 378.293 733.271 376.68 cv
733.271 376.68 li
733.271 376.579 733.169 376.579 733.169 376.478 cv
733.169 376.478 li
733.169 376.377 733.068 376.377 733.068 376.276 cv
733.068 376.276 li
733.068 376.176 732.968 376.176 732.968 376.074 cv
732.968 376.074 li
732.968 375.974 732.867 375.974 732.867 375.873 cv
732.867 375.873 732.867 375.873 732.867 375.772 cv
732.867 375.671 732.766 375.671 732.766 375.57 cv
732.766 375.57 li
732.766 375.47 732.665 375.47 732.665 375.369 cv
732.665 375.369 732.665 375.268 732.564 375.268 cv
732.564 375.167 732.464 375.167 732.464 375.066 cv
732.464 375.066 732.464 374.966 732.363 374.966 cv
732.363 374.865 732.262 374.865 732.262 374.764 cv
732.262 374.764 732.262 374.663 732.161 374.663 cv
732.161 374.563 732.061 374.563 732.061 374.461 cv
732.061 374.461 732.061 374.461 732.061 374.36 cv
732.061 374.26 731.959 374.159 731.959 374.159 cv
731.959 374.159 731.959 374.059 731.858 374.059 cv
731.858 373.957 731.758 373.957 731.758 373.856 cv
731.758 373.856 731.758 373.856 731.758 373.756 cv
731.657 373.655 731.657 373.554 731.557 373.453 cv
731.557 373.453 li
724.902 373.655 718.752 374.159 714.315 374.865 cv
708.871 375.772 707.661 376.881 707.661 377.184 cv
707.661 377.486 709.073 378.696 715.626 379.704 cv
721.07 380.511 728.33 381.015 735.992 381.015 cv
743.654 381.015 750.914 380.511 756.358 379.704 cv
762.811 378.696 764.323 377.587 764.323 377.184 cv
763.92 376.78 762.71 375.671 757.064 374.764 cv
cp
f
558.143 302.071 mo
658.965 302.071 li
658.965 402.894 li
558.143 402.894 li
558.143 302.071 li
cp
1 1 1 rgb
f
597.967 368.916 mo
600.891 369.723 604.117 370.126 607.444 370.227 cv
607.444 361.153 li
596.858 361.153 li
596.959 363.875 597.262 366.496 597.967 368.916 cv
cp
0 0 0 rgb
f
596.858 359.943 mo
607.444 359.943 li
607.444 349.861 li
604.017 349.861 600.79 350.365 597.967 351.171 cv
597.262 353.894 596.858 356.817 596.858 359.943 cv
cp
f
600.186 374.865 mo
602.201 378.394 604.723 380.511 607.344 380.813 cv
607.344 371.537 li
604.117 371.537 601.093 371.135 598.27 370.429 cv
598.874 372.042 599.479 373.554 600.186 374.865 cv
cp
f
618.132 351.171 mo
615.208 350.365 611.981 349.962 608.654 349.861 cv
608.654 359.943 li
619.24 359.943 li
619.24 356.817 618.837 353.894 618.132 351.171 cv
cp
f
600.186 345.223 mo
599.479 346.634 598.773 348.147 598.27 349.76 cv
601.093 349.054 604.117 348.651 607.344 348.651 cv
607.344 339.375 li
604.723 339.577 602.201 341.593 600.186 345.223 cv
cp
f
615.913 345.223 mo
613.897 341.694 611.376 339.577 608.755 339.274 cv
608.755 348.55 li
611.981 348.55 615.006 348.954 617.829 349.659 cv
617.224 348.046 616.619 346.534 615.913 345.223 cv
cp
f
587.784 355.507 mo
588.894 354.095 590.506 352.886 592.624 351.776 cv
593.935 351.071 595.346 350.566 596.858 350.063 cv
597.463 348.046 598.169 346.13 599.076 344.517 cv
600.186 342.501 601.496 340.888 602.907 339.779 cv
595.346 341.795 589.498 347.844 587.784 355.507 cv
cp
f
599.782 331.108 mo
595.951 331.108 li
595.951 327.277 li
599.782 327.277 li
599.782 331.108 li
cp
593.43 331.108 mo
589.599 331.108 li
589.599 327.277 li
593.43 327.277 li
593.43 331.108 li
cp
587.179 331.108 mo
583.348 331.108 li
583.348 327.277 li
587.179 327.277 li
587.179 331.108 li
cp
602.907 324.151 mo
580.223 324.151 li
580.223 334.233 li
602.907 334.233 li
602.907 324.151 li
cp
f
596.556 351.575 mo
595.346 351.978 594.236 352.381 593.229 352.986 cv
589.498 354.902 587.381 357.322 587.28 359.943 cv
595.547 359.943 li
595.547 357.019 595.951 354.196 596.556 351.575 cv
cp
f
593.229 367.102 mo
594.236 367.605 595.346 368.109 596.556 368.513 cv
596.052 366.194 595.749 363.774 595.648 361.153 cv
587.381 361.153 li
587.885 363.371 589.901 365.488 593.229 367.102 cv
cp
f
599.076 375.47 mo
598.169 373.856 597.463 371.94 596.858 369.925 cv
595.346 369.42 593.935 368.916 592.624 368.21 cv
590.506 367.102 588.893 365.892 587.784 364.581 cv
589.498 372.143 595.446 378.191 602.907 380.208 cv
601.496 379.1 600.186 377.486 599.076 375.47 cv
cp
f
622.87 334.738 mo
624.483 334.738 625.794 333.427 625.794 331.814 cv
625.794 330.201 624.483 328.89 622.87 328.89 cv
621.257 328.89 619.946 330.201 619.946 331.814 cv
619.946 333.427 621.257 334.738 622.87 334.738 cv
cp
f
622.87 327.579 mo
625.189 327.579 627.104 329.495 627.104 331.814 cv
627.104 334.133 625.189 336.048 622.87 336.048 cv
620.551 336.048 618.636 334.133 618.636 331.814 cv
618.736 329.495 620.551 327.579 622.87 327.579 cv
cp
619.846 342.098 mo
621.056 344.315 622.266 346.332 622.971 347.441 cv
623.173 347.038 623.475 346.534 623.878 345.929 cv
624.281 345.223 624.685 344.417 625.189 343.711 cv
625.491 343.207 625.794 342.703 625.995 342.198 cv
630.432 334.133 630.734 332.52 630.734 332.217 cv
630.734 327.882 627.205 324.252 622.87 324.252 cv
618.535 324.252 615.006 327.781 615.006 332.217 cv
615.006 332.62 615.409 334.334 619.342 341.291 cv
619.543 341.493 619.745 341.795 619.846 342.098 cv
cp
f
617.022 344.618 mo
617.93 346.231 618.636 348.147 619.24 350.163 cv
620.753 350.667 622.164 351.171 623.475 351.877 cv
625.592 352.986 627.205 354.196 628.314 355.507 cv
627.608 352.583 626.298 349.76 624.483 347.34 cv
624.383 347.542 624.281 347.643 624.281 347.744 cv
624.281 347.744 li
624.08 348.046 623.979 348.248 623.878 348.449 cv
623.878 348.449 li
623.777 348.55 li
623.777 348.55 li
623.777 348.55 623.777 348.651 623.677 348.651 cv
623.677 348.651 li
623.677 348.752 623.576 348.752 623.576 348.853 cv
623.576 348.853 li
623.576 348.853 li
623.576 348.954 li
623.475 349.155 623.273 349.256 623.072 349.256 cv
623.072 349.256 li
622.87 349.256 622.669 349.155 622.567 348.954 cv
622.567 348.954 li
622.366 348.55 620.753 345.828 618.938 342.703 cv
618.837 342.501 618.636 342.198 618.535 341.997 cv
616.922 341.089 615.106 340.384 613.292 339.879 cv
614.603 340.988 615.913 342.602 617.022 344.618 cv
cp
f
619.543 368.513 mo
620.753 368.109 621.862 367.706 622.87 367.102 cv
626.097 365.488 628.113 363.371 628.718 361.153 cv
620.551 361.153 li
620.45 363.774 620.147 366.194 619.543 368.513 cv
cp
f
623.475 368.312 mo
622.164 369.017 620.753 369.521 619.24 370.025 cv
618.636 372.042 617.93 373.957 617.022 375.57 cv
615.913 377.587 614.603 379.1 613.191 380.208 cv
620.652 378.293 626.601 372.243 628.314 364.581 cv
627.205 365.992 625.592 367.202 623.475 368.312 cv
cp
f
615.913 374.865 mo
616.619 373.453 617.325 371.94 617.829 370.328 cv
615.006 371.033 611.981 371.437 608.755 371.437 cv
608.755 380.712 li
611.376 380.511 613.897 378.494 615.913 374.865 cv
cp
f
622.87 352.986 mo
621.862 352.482 620.753 351.978 619.543 351.575 cv
620.147 354.196 620.45 357.019 620.45 359.943 cv
628.718 359.943 li
628.818 357.322 626.701 354.801 622.87 352.986 cv
cp
f
619.24 361.153 mo
608.654 361.153 li
608.654 370.227 li
612.082 370.227 615.309 369.723 618.132 368.916 cv
618.837 366.496 619.14 363.875 619.24 361.153 cv
cp
f
431.106 302.071 mo
531.929 302.071 li
531.929 402.894 li
431.106 402.894 li
431.106 302.071 li
cp
1 1 1 rgb
f
481.014 344.215 mo
477.183 344.215 474.057 347.34 474.057 351.171 cv
474.057 355.003 477.183 358.128 481.014 358.128 cv
484.845 358.128 487.971 355.003 487.971 351.171 cv
487.971 347.34 484.845 344.215 481.014 344.215 cv
cp
0 0 0 rgb
f
472.242 370.933 mo
467.101 369.42 462.664 366.295 459.841 362.161 cv
459.64 361.858 459.236 361.758 458.934 361.96 cv
458.631 362.161 458.53 362.564 458.732 362.867 cv
461.757 367.303 466.395 370.63 471.839 372.143 cv
471.939 372.143 471.939 372.143 472.041 372.143 cv
472.343 372.143 472.545 371.94 472.646 371.639 cv
472.847 371.336 472.646 371.033 472.242 370.933 cv
cp
f
502.893 362.061 mo
502.59 361.858 502.187 361.96 502.086 362.363 cv
499.564 367.001 495.129 370.63 489.785 372.344 cv
489.482 372.445 489.281 372.849 489.382 373.15 cv
489.482 373.453 489.685 373.554 489.986 373.554 cv
490.088 373.554 490.088 373.554 490.188 373.554 cv
495.834 371.739 500.573 367.908 503.295 362.968 cv
503.295 362.665 503.194 362.262 502.893 362.061 cv
cp
f
490.895 334.032 mo
496.439 336.25 500.674 340.787 502.488 346.534 cv
502.59 346.836 502.791 346.937 503.094 346.937 cv
503.194 346.937 503.194 346.937 503.295 346.937 cv
503.598 346.836 503.8 346.433 503.698 346.13 cv
501.783 339.98 497.347 335.141 491.398 332.822 cv
491.096 332.721 490.692 332.822 490.592 333.125 cv
490.491 333.528 490.592 333.931 490.895 334.032 cv
cp
f
457.422 345.727 mo
457.522 345.727 457.522 345.727 457.623 345.727 cv
457.926 345.727 458.127 345.525 458.228 345.324 cv
459.941 339.577 464.177 335.04 469.822 332.822 cv
470.125 332.721 470.326 332.318 470.125 332.016 cv
470.024 331.713 469.621 331.511 469.318 331.612 cv
463.37 333.931 458.934 338.871 457.018 344.92 cv
456.917 345.223 457.119 345.626 457.422 345.727 cv
cp
f
481.014 359.438 mo
476.477 359.438 472.746 355.708 472.746 351.171 cv
472.746 346.634 476.477 342.904 481.014 342.904 cv
485.551 342.904 489.281 346.634 489.281 351.171 cv
489.281 355.708 485.551 359.438 481.014 359.438 cv
cp
510.756 351.877 mo
494.625 345.828 li
493.314 342.501 490.895 339.779 487.668 338.166 cv
482.123 323.244 li
482.021 323.042 481.82 322.841 481.518 322.841 cv
481.215 322.841 481.014 323.042 480.913 323.244 cv
475.569 337.662 li
471.638 339.274 468.713 342.4 467.302 346.332 cv
452.279 351.877 li
452.078 351.978 451.876 352.18 451.876 352.482 cv
451.876 352.785 452.078 352.986 452.279 353.087 cv
468.814 359.237 li
470.226 361.354 472.142 363.068 474.46 364.278 cv
480.913 381.721 li
481.014 381.922 481.215 382.124 481.518 382.124 cv
481.82 382.124 482.021 381.922 482.123 381.721 cv
488.878 363.572 li
490.39 362.564 491.802 361.354 492.81 359.842 cv
510.756 353.087 li
510.958 352.986 511.159 352.785 511.159 352.482 cv
511.159 352.18 510.958 351.978 510.756 351.877 cv
cp
f
304.071 302.071 mo
404.893 302.071 li
404.893 402.894 li
304.071 402.894 li
304.071 302.071 li
cp
1 1 1 rgb
f
338.149 337.359 mo
338.149 337.057 338.452 336.754 338.754 336.754 cv
353.272 336.754 li
353.575 336.754 353.877 337.057 353.877 337.359 cv
353.877 344.82 li
353.877 344.82 li
353.978 344.719 li
353.978 344.719 li
354.079 344.719 354.079 344.618 354.18 344.618 cv
354.18 344.618 li
354.28 344.618 354.28 344.517 354.381 344.517 cv
354.381 344.517 li
354.482 344.517 354.482 344.517 354.583 344.417 cv
354.583 344.417 li
354.684 344.417 354.684 344.417 354.785 344.315 cv
354.785 344.315 li
354.885 344.315 354.885 344.315 354.986 344.315 cv
354.986 344.315 li
355.087 344.315 355.087 344.315 355.188 344.315 cv
355.188 344.315 li
355.289 344.315 355.289 344.315 355.39 344.315 cv
360.128 344.315 li
360.128 331.108 li
360.128 330.1 359.422 329.192 358.515 329.192 cv
338.754 329.192 li
338.452 329.192 338.149 328.89 338.149 328.587 cv
338.149 324.756 li
326.655 332.52 li
338.149 341.19 li
338.149 337.359 li
cp
0 0 0 rgb
f
326.555 359.943 mo
338.048 368.613 li
338.048 364.883 li
338.048 364.581 338.351 364.278 338.653 364.278 cv
352.566 364.278 li
352.566 356.717 li
338.754 356.717 li
338.452 356.717 338.149 356.414 338.149 356.011 cv
338.149 352.281 li
326.555 359.943 li
cp
f
383.015 380.813 mo
361.439 380.813 li
361.439 353.793 li
361.439 353.49 361.741 353.188 362.044 353.188 cv
370.21 353.188 li
370.513 353.188 370.815 353.49 370.815 353.793 cv
370.815 357.523 li
382.309 348.853 li
370.815 341.291 li
370.815 345.021 li
370.815 345.324 370.513 345.626 370.21 345.626 cv
360.733 345.626 li
355.39 345.626 li
354.482 345.626 353.776 346.433 353.776 347.542 cv
353.776 356.212 li
353.776 365.085 li
353.776 381.015 li
325.042 381.015 li
324.74 381.015 324.438 381.317 324.438 381.62 cv
324.438 381.922 324.74 382.225 325.042 382.225 cv
383.015 382.225 li
383.317 382.225 383.62 381.922 383.62 381.62 cv
383.62 381.115 383.317 380.813 383.015 380.813 cv
cp
f
177.036 302.071 mo
277.857 302.071 li
277.857 402.894 li
177.036 402.894 li
177.036 302.071 li
cp
1 1 1 rgb
f
226.842 376.478 mo
226.842 376.78 226.539 377.083 226.237 377.083 cv
225.934 377.083 225.632 376.78 225.632 376.478 cv
225.632 348.752 li
225.632 348.449 225.934 348.147 226.237 348.147 cv
226.539 348.147 226.842 348.449 226.842 348.752 cv
226.842 376.478 li
cp
227.85 343.005 mo
227.547 343.61 227.346 343.913 227.346 343.913 cv
227.245 344.114 227.043 344.215 226.842 344.215 cv
226.842 344.215 li
226.64 344.215 226.438 344.114 226.337 343.913 cv
226.337 343.913 226.136 343.509 225.732 343.005 cv
219.583 343.005 li
217.969 380.813 li
234.504 380.813 li
232.891 343.005 li
227.85 343.005 li
cp
0 0 0 rgb
f
213.332 343.005 mo
210.508 380.813 li
216.659 380.813 li
218.171 343.005 li
213.332 343.005 li
cp
f
226.64 327.579 mo
228.051 327.579 229.161 328.688 229.161 330.1 cv
229.161 331.511 228.051 332.62 226.64 332.62 cv
225.229 332.62 224.12 331.511 224.12 330.1 cv
224.12 328.688 225.329 327.579 226.64 327.579 cv
cp
226.337 341.795 mo
227.043 341.795 li
227.447 341.19 227.85 340.384 228.253 339.577 cv
228.455 339.174 228.656 338.771 228.959 338.367 cv
232.488 331.915 232.79 330.604 232.79 330.402 cv
232.79 326.974 230.068 324.151 226.64 324.151 cv
223.212 324.151 220.49 326.974 220.49 330.402 cv
220.49 330.705 220.792 332.016 224.321 338.367 cv
225.127 339.678 225.833 340.888 226.337 341.795 cv
cp
f
226.64 331.31 mo
227.346 331.31 227.85 330.806 227.85 330.1 cv
227.85 329.394 227.346 328.89 226.64 328.89 cv
225.934 328.89 225.43 329.394 225.43 330.1 cv
225.43 330.806 226.035 331.31 226.64 331.31 cv
cp
f
239.041 343.005 mo
234.202 343.005 li
235.714 380.813 li
241.864 380.813 li
239.041 343.005 li
cp
f
50 302.071 mo
150.822 302.071 li
150.822 402.894 li
50 402.894 li
50 302.071 li
cp
1 1 1 rgb
f
97.4873 354.297 mo
97.689 354.297 97.7896 354.398 97.8906 354.6 cv
102.125 361.758 li
105.25 344.114 li
90.0264 352.886 li
97.4873 354.297 li
cp
0 0 0 rgb
f
100.411 372.042 mo
89.623 372.042 80.8516 363.271 80.8516 352.482 cv
80.8516 341.694 89.623 332.923 100.411 332.923 cv
111.199 332.923 119.97 341.694 119.97 352.482 cv
119.97 363.271 111.199 372.042 100.411 372.042 cv
cp
100.411 324.151 mo
84.7837 324.151 72.0801 336.855 72.0801 352.482 cv
72.0801 368.109 84.7837 380.813 100.411 380.813 cv
116.039 380.813 128.742 368.109 128.742 352.482 cv
128.742 336.855 116.039 324.151 100.411 324.151 cv
cp
f
685.178 175.036 mo
786 175.036 li
786 275.857 li
685.178 275.857 li
685.178 175.036 li
cp
1 1 1 rgb
f
757.064 231.597 mo
752.023 231.597 li
752.023 227.766 li
757.064 227.766 li
757.064 231.597 li
cp
757.064 240.469 mo
752.023 240.469 li
752.023 236.638 li
757.064 236.638 li
757.064 240.469 li
cp
744.461 231.597 mo
739.42 231.597 li
739.42 227.766 li
744.461 227.766 li
744.461 231.597 li
cp
744.461 240.469 mo
739.42 240.469 li
739.42 236.638 li
744.461 236.638 li
744.461 240.469 li
cp
763.819 215.566 mo
763.719 215.667 763.719 215.768 763.617 215.768 cv
763.617 215.768 763.617 215.768 763.617 215.869 cv
763.517 215.969 763.517 216.07 763.416 216.07 cv
763.416 216.07 li
763.315 216.171 763.315 216.272 763.214 216.272 cv
763.214 216.272 763.214 216.272 763.113 216.272 cv
763.013 216.373 762.912 216.373 762.912 216.474 cv
762.912 216.474 li
762.811 216.574 762.71 216.574 762.71 216.675 cv
762.71 216.675 762.71 216.675 762.609 216.675 cv
762.509 216.776 762.407 216.776 762.307 216.877 cv
762.307 216.877 li
762.206 216.978 762.105 216.978 762.105 217.079 cv
762.105 217.079 762.105 217.079 762.004 217.079 cv
761.903 217.381 761.803 217.381 761.702 217.482 cv
761.702 217.482 761.702 217.482 761.602 217.482 cv
761.5 217.482 761.399 217.583 761.299 217.583 cv
761.299 217.583 li
761.197 217.683 761.097 217.683 760.996 217.683 cv
760.996 217.683 760.996 217.683 760.896 217.683 cv
760.795 217.683 760.693 217.784 760.593 217.784 cv
760.593 217.784 li
760.492 217.784 760.392 217.885 760.29 217.885 cv
760.29 217.885 760.29 217.885 760.189 217.885 cv
760.089 217.885 759.988 217.986 759.887 217.986 cv
759.887 217.986 li
759.786 217.986 759.686 218.086 759.585 218.086 cv
759.585 218.086 759.585 218.086 759.483 218.086 cv
759.383 218.086 759.282 218.188 759.182 218.188 cv
759.182 218.188 759.182 218.188 759.08 218.188 cv
758.979 218.188 758.879 218.188 758.778 218.288 cv
758.778 218.288 758.778 218.288 758.677 218.288 cv
758.576 218.288 758.476 218.288 758.375 218.389 cv
758.375 218.389 758.375 218.389 758.274 218.389 cv
758.173 218.389 758.072 218.389 757.972 218.389 cv
757.972 218.389 li
757.871 218.389 757.77 218.389 757.568 218.389 cv
757.468 218.389 li
757.366 218.389 757.266 218.389 757.064 218.389 cv
751.519 218.389 li
738.412 218.389 li
738.412 218.49 738.412 218.49 738.412 218.49 cv
738.412 218.591 738.312 218.691 738.312 218.792 cv
738.312 218.893 738.21 218.893 738.21 218.994 cv
738.21 219.095 738.109 219.196 738.109 219.296 cv
738.109 219.397 738.009 219.397 738.009 219.498 cv
738.009 219.599 737.908 219.7 737.908 219.801 cv
737.908 219.901 737.807 219.901 737.807 220.002 cv
737.605 220.305 737.605 220.405 737.505 220.506 cv
737.505 220.607 737.403 220.607 737.403 220.708 cv
737.303 220.809 737.303 220.91 737.202 221.01 cv
737.202 221.111 737.102 221.111 737.102 221.212 cv
737.001 221.313 737.001 221.414 736.899 221.515 cv
736.899 221.615 736.799 221.615 736.799 221.716 cv
736.698 221.817 736.698 221.918 736.598 222.019 cv
736.598 222.12 736.496 222.12 736.496 222.22 cv
736.396 222.321 736.396 222.422 736.295 222.523 cv
736.295 222.624 736.194 222.725 736.194 222.725 cv
736.093 222.825 736.093 222.926 735.992 223.027 cv
735.992 223.128 735.892 223.229 735.892 223.229 cv
735.791 223.329 735.791 223.43 735.689 223.632 cv
735.689 223.732 735.589 223.833 735.589 223.833 cv
735.488 223.934 735.488 224.035 735.388 224.237 cv
735.388 224.337 735.286 224.438 735.286 224.438 cv
735.186 224.539 735.186 224.64 735.085 224.842 cv
735.085 224.942 734.984 225.043 734.984 225.043 cv
734.883 225.144 734.883 225.245 734.782 225.447 cv
734.682 225.547 734.682 225.648 734.581 225.749 cv
734.48 225.85 734.48 225.951 734.379 226.152 cv
734.278 226.253 734.278 226.354 734.178 226.455 cv
734.076 226.556 734.076 226.657 733.976 226.757 cv
733.875 226.959 733.774 227.161 733.572 227.463 cv
733.169 228.27 732.665 228.976 732.262 229.782 cv
731.858 230.387 731.455 231.093 731.052 231.798 cv
730.851 232.101 730.648 232.403 730.548 232.706 cv
730.245 233.21 li
729.641 234.218 729.137 235.125 728.733 235.73 cv
728.229 236.537 728.027 236.94 728.027 236.94 cv
727.927 237.041 727.826 237.142 727.624 237.243 cv
727.523 237.243 727.523 237.243 727.423 237.243 cv
727.423 237.243 li
727.221 237.243 727.02 237.142 726.918 236.94 cv
726.918 236.94 725.81 235.227 724.297 232.706 cv
724.096 232.403 723.894 232 723.692 231.698 cv
723.591 231.496 723.49 231.395 723.39 231.193 cv
723.188 230.79 722.986 230.488 722.684 230.084 cv
722.684 230.084 li
722.18 229.177 721.676 228.371 721.172 227.564 cv
720.869 227.161 720.667 226.657 720.365 226.253 cv
720.264 226.052 720.163 225.85 720.063 225.648 cv
720.063 225.547 719.962 225.547 719.962 225.447 cv
719.86 225.346 719.86 225.245 719.76 225.144 cv
719.76 225.043 719.659 224.942 719.659 224.942 cv
719.559 224.842 719.559 224.741 719.457 224.64 cv
719.457 224.539 719.356 224.438 719.356 224.337 cv
719.256 224.237 719.256 224.136 719.155 224.035 cv
719.155 223.934 719.055 223.833 719.055 223.732 cv
719.055 223.632 718.953 223.531 718.953 223.43 cv
718.953 223.33 718.853 223.229 718.853 223.128 cv
718.853 223.027 718.752 222.926 718.752 222.926 cv
718.752 222.825 718.651 222.725 718.651 222.624 cv
718.651 222.523 718.55 222.422 718.55 222.422 cv
718.55 222.321 718.449 222.22 718.449 222.12 cv
718.449 222.019 718.349 221.918 718.349 221.918 cv
718.349 221.817 718.248 221.716 718.248 221.716 cv
718.248 221.615 718.146 221.515 718.146 221.515 cv
718.146 221.414 718.046 221.313 718.046 221.313 cv
718.046 221.212 717.945 221.111 717.945 221.111 cv
717.945 221.01 717.845 220.91 717.845 220.91 cv
717.845 220.809 717.743 220.708 717.743 220.708 cv
717.743 220.607 717.643 220.506 717.643 220.506 cv
717.643 220.405 717.542 220.405 717.542 220.305 cv
717.542 220.204 717.441 220.204 717.441 220.103 cv
717.441 220.002 717.34 220.002 717.34 219.901 cv
717.34 219.801 717.239 219.801 717.239 219.7 cv
717.239 219.599 717.139 219.599 717.139 219.498 cv
717.139 219.397 717.038 219.397 717.038 219.296 cv
717.038 219.196 716.938 219.095 716.938 219.095 cv
716.938 218.994 716.836 218.994 716.836 218.893 cv
716.836 218.893 716.836 218.994 716.836 218.792 cv
707.863 218.792 li
707.863 251.358 li
751.721 251.358 li
758.476 251.358 763.92 246.72 763.92 240.873 cv
763.92 215.667 li
763.92 215.465 763.92 215.465 763.819 215.566 cv
763.819 215.566 li
cp
0 0 0 rgb
f
727.423 217.179 mo
730.851 217.179 733.774 214.356 733.774 210.828 cv
733.774 207.399 730.951 204.476 727.423 204.476 cv
723.894 204.476 721.07 207.299 721.07 210.828 cv
721.07 214.356 723.894 217.179 727.423 217.179 cv
cp
f
727.423 203.266 mo
731.557 203.266 734.984 206.694 734.984 210.828 cv
734.984 214.961 731.557 218.389 727.423 218.389 cv
723.289 218.389 719.86 214.961 719.86 210.828 cv
719.86 206.694 723.188 203.266 727.423 203.266 cv
cp
721.474 225.648 mo
721.776 226.052 721.979 226.556 722.28 226.959 cv
723.289 228.673 724.297 230.387 725.406 232.202 cv
726.313 233.613 727.02 234.823 727.423 235.529 cv
727.423 235.428 727.523 235.428 727.523 235.327 cv
727.624 235.227 li
727.725 235.125 727.725 235.025 727.826 234.924 cv
728.229 234.319 728.632 233.613 729.137 232.706 cv
729.438 232.202 li
729.641 231.899 729.842 231.496 730.044 231.193 cv
730.447 230.588 730.75 229.983 731.153 229.379 cv
731.254 229.076 731.455 228.875 731.557 228.572 cv
731.858 228.068 732.161 227.564 732.464 227.06 cv
732.564 226.757 732.766 226.556 732.867 226.253 cv
733.371 225.346 733.875 224.438 734.379 223.531 cv
735.589 221.313 736.598 219.498 737.403 217.784 cv
739.521 213.55 739.925 212.239 739.925 211.835 cv
739.925 205.081 734.278 199.636 727.221 199.636 cv
720.163 199.636 714.518 205.081 714.518 211.835 cv
714.518 212.239 714.819 213.65 716.938 217.784 cv
718.248 219.901 719.659 222.523 721.474 225.648 cv
cp
f
763.92 211.634 mo
763.92 208.408 760.896 205.786 757.165 205.786 cv
752.225 205.786 li
752.225 217.381 li
757.165 217.381 li
760.896 217.381 763.92 214.759 763.92 211.634 cv
cp
f
558.143 175.036 mo
658.965 175.036 li
658.965 275.857 li
558.143 275.857 li
558.143 175.036 li
cp
1 1 1 rgb
f
634.062 207.097 mo
633.961 207.198 623.475 213.045 623.072 219.196 cv
623.072 219.498 622.77 219.801 622.467 219.801 cv
622.467 219.801 li
622.164 219.801 621.862 219.498 621.862 219.095 cv
622.266 212.239 633.053 206.189 633.558 205.988 cv
633.859 205.786 634.263 205.887 634.363 206.189 cv
634.465 206.593 634.363 206.896 634.062 207.097 cv
cp
633.759 233.008 mo
630.835 233.008 li
630.835 230.488 li
633.759 230.488 li
633.759 233.008 li
cp
633.759 239.36 mo
630.835 239.36 li
630.835 236.839 li
633.759 236.839 li
633.759 239.36 li
cp
625.189 233.008 mo
622.366 233.008 li
622.366 230.488 li
625.189 230.488 li
625.189 233.008 li
cp
625.189 239.36 mo
622.366 239.36 li
622.366 236.839 li
625.189 236.839 li
625.189 239.36 li
cp
618.938 197.317 mo
618.938 248.434 li
636.985 253.576 li
636.985 202.459 li
618.938 197.317 li
cp
0 0 0 rgb
f
603.411 241.175 mo
611.376 239.36 612.989 229.177 612.989 229.076 cv
613.091 228.774 613.393 228.471 613.695 228.572 cv
613.998 228.673 614.3 228.976 614.199 229.278 cv
614.199 229.379 613.796 232.101 612.284 235.025 cv
610.268 239.058 607.344 241.578 603.613 242.385 cv
603.513 242.385 li
603.21 242.385 603.008 242.183 602.907 241.881 cv
602.807 241.578 603.008 241.275 603.411 241.175 cv
cp
603.513 220.405 mo
606.033 220.405 li
606.033 222.926 li
603.513 222.926 li
603.513 220.405 li
cp
603.513 214.154 mo
606.033 214.154 li
606.033 216.675 li
603.513 216.675 li
603.513 214.154 li
cp
611.074 220.405 mo
613.595 220.405 li
613.595 222.926 li
611.074 222.926 li
611.074 220.405 li
cp
611.074 214.154 mo
613.595 214.154 li
613.595 216.675 li
611.074 216.675 li
611.074 214.154 li
cp
599.479 253.576 mo
617.627 248.434 li
617.627 197.317 li
599.479 202.459 li
599.479 253.576 li
cp
f
588.49 225.85 mo
591.414 223.632 594.236 222.422 594.438 222.422 cv
594.741 222.321 595.145 222.422 595.245 222.725 cv
595.346 223.027 595.245 223.43 594.942 223.531 cv
594.842 223.531 583.751 228.27 583.953 235.529 cv
583.953 235.832 583.65 236.134 583.348 236.134 cv
583.348 236.134 li
583.046 236.134 582.743 235.832 582.743 235.529 cv
582.643 232.202 584.658 228.774 588.49 225.85 cv
cp
583.348 212.844 mo
586.171 212.844 li
586.171 215.364 li
583.348 215.364 li
583.348 212.844 li
cp
583.348 206.593 mo
586.171 206.593 li
586.171 209.113 li
583.348 209.113 li
583.348 206.593 li
cp
591.817 212.844 mo
594.741 212.844 li
594.741 215.364 li
591.817 215.364 li
591.817 212.844 li
cp
591.817 206.593 mo
594.741 206.593 li
594.741 209.113 li
591.817 209.113 li
591.817 206.593 li
cp
580.223 248.434 mo
598.27 253.576 li
598.27 202.459 li
580.223 197.317 li
580.223 248.434 li
cp
f
431.106 175.036 mo
531.929 175.036 li
531.929 275.857 li
431.106 275.857 li
431.106 175.036 li
cp
1 1 1 rgb
f
465.79 226.052 mo
459.438 226.052 li
459.74 237.747 469.218 247.124 480.813 247.426 cv
480.813 241.074 li
472.746 240.873 466.092 234.218 465.79 226.052 cv
cp
0 0 0 rgb
f
490.995 224.842 mo
496.036 224.842 li
495.633 217.28 489.685 211.332 482.123 210.928 cv
482.123 215.969 li
486.861 216.373 490.592 220.103 490.995 224.842 cv
cp
f
472.04 226.052 mo
466.999 226.052 li
467.402 233.613 473.352 239.562 480.913 239.965 cv
480.913 234.924 li
476.174 234.521 472.443 230.79 472.04 226.052 cv
cp
f
480.913 215.969 mo
480.913 210.928 li
475.469 211.231 470.629 214.457 468.311 219.397 cv
468.209 219.7 467.806 219.901 467.504 219.7 cv
467.201 219.599 466.999 219.196 467.201 218.893 cv
469.722 213.55 474.965 209.92 480.913 209.718 cv
480.913 203.367 li
469.218 203.669 459.841 213.146 459.539 224.741 cv
472.142 224.741 li
472.443 220.103 476.174 216.373 480.913 215.969 cv
cp
f
482.123 234.924 mo
482.123 239.965 li
487.668 239.763 492.508 236.335 494.826 231.294 cv
494.927 230.992 495.33 230.79 495.633 230.992 cv
495.936 231.093 496.137 231.496 495.936 231.798 cv
493.516 237.344 488.172 240.973 482.123 241.275 cv
482.123 247.627 li
493.818 247.325 503.194 237.848 503.497 226.253 cv
490.995 226.253 li
490.592 230.79 486.861 234.521 482.123 234.924 cv
cp
f
482.123 233.613 mo
486.155 233.311 489.382 230.084 489.685 226.052 cv
484.038 226.052 li
483.736 226.052 483.434 225.749 483.434 225.447 cv
483.434 225.144 483.736 224.842 484.038 224.842 cv
489.685 224.842 li
489.382 220.809 486.155 217.583 482.123 217.28 cv
482.123 222.926 li
482.123 223.229 481.82 223.531 481.518 223.531 cv
481.215 223.531 480.913 223.229 480.913 222.926 cv
480.913 217.28 li
476.88 217.583 473.653 220.809 473.352 224.842 cv
477.687 224.842 li
477.989 224.842 478.291 225.144 478.291 225.447 cv
478.291 225.749 477.989 226.052 477.687 226.052 cv
473.352 226.052 li
473.653 230.084 476.88 233.311 480.913 233.613 cv
480.913 229.278 li
480.913 228.976 481.215 228.673 481.518 228.673 cv
481.82 228.673 482.123 228.976 482.123 229.278 cv
482.123 233.613 li
cp
f
497.246 224.842 mo
503.598 224.842 li
503.295 213.146 493.818 203.77 482.224 203.467 cv
482.224 209.819 li
490.289 210.021 496.943 216.675 497.246 224.842 cv
cp
f
304.071 175.036 mo
404.893 175.036 li
404.893 275.857 li
304.071 275.857 li
304.071 175.036 li
cp
1 1 1 rgb
f
341.274 215.364 mo
341.274 208.408 346.92 202.661 353.978 202.661 cv
361.036 202.661 366.682 208.307 366.682 215.364 cv
366.682 222.422 361.036 228.068 353.978 228.068 cv
346.92 228.068 341.274 222.321 341.274 215.364 cv
cp
346.315 237.646 mo
347.727 240.066 349.34 242.687 350.853 245.309 cv
352.163 247.526 353.373 249.341 353.978 250.45 cv
353.978 250.551 354.079 250.551 354.079 250.652 cv
354.684 249.745 355.591 248.131 356.801 246.014 cv
356.902 245.813 357.104 245.51 357.205 245.309 cv
358.112 243.897 358.918 242.385 359.725 241.074 cv
360.431 239.965 361.036 238.755 361.641 237.646 cv
371.319 220.91 372.731 216.474 372.731 215.264 cv
372.731 205.182 364.262 197.015 353.877 197.015 cv
343.493 197.015 335.023 205.182 335.023 215.264 cv
335.023 216.474 336.334 220.708 345.005 235.629 cv
345.509 236.335 345.912 237.041 346.315 237.646 cv
cp
0 0 0 rgb
f
353.877 212.844 mo
353.877 212.542 354.18 212.239 354.482 212.239 cv
354.785 212.239 355.087 212.542 355.087 212.844 cv
355.087 222.926 li
355.087 223.229 354.785 223.531 354.482 223.531 cv
354.18 223.531 353.877 223.229 353.877 222.926 cv
353.877 212.844 li
cp
353.272 209.113 mo
353.272 208.408 353.877 207.803 354.583 207.803 cv
355.289 207.803 355.894 208.408 355.894 209.113 cv
355.894 209.819 355.188 210.323 354.482 210.323 cv
353.776 210.323 353.272 209.718 353.272 209.113 cv
cp
365.371 215.364 mo
365.371 209.113 360.229 203.972 353.978 203.972 cv
347.727 203.972 342.585 209.013 342.585 215.364 cv
342.585 221.615 347.727 226.757 353.978 226.757 cv
360.229 226.757 365.371 221.615 365.371 215.364 cv
cp
f
375.957 247.728 mo
371.319 246.922 365.068 246.417 358.212 246.317 cv
358.212 246.317 li
358.112 246.417 358.112 246.519 358.011 246.72 cv
356.095 249.946 354.684 252.165 354.684 252.165 cv
354.583 252.366 354.381 252.467 354.18 252.467 cv
354.18 252.467 li
354.18 252.467 li
353.978 252.467 353.776 252.366 353.676 252.165 cv
353.676 252.165 353.071 251.257 352.163 249.644 cv
352.163 249.644 li
352.163 249.543 352.063 249.543 352.063 249.442 cv
352.063 249.442 li
352.063 249.341 351.962 249.341 351.962 249.241 cv
351.962 249.241 li
351.962 249.14 351.861 249.14 351.861 249.039 cv
351.861 249.039 li
351.861 248.938 351.76 248.938 351.76 248.837 cv
351.76 248.837 351.76 248.837 351.76 248.736 cv
351.76 248.636 351.659 248.636 351.659 248.535 cv
351.659 248.535 li
351.659 248.434 351.559 248.434 351.559 248.333 cv
351.559 248.333 351.559 248.232 351.458 248.232 cv
351.458 248.132 351.356 248.132 351.356 248.031 cv
351.356 248.031 351.356 247.93 351.256 247.93 cv
351.256 247.829 351.155 247.829 351.155 247.729 cv
351.155 247.729 351.155 247.627 351.054 247.627 cv
351.054 247.526 350.954 247.526 350.954 247.426 cv
350.954 247.426 350.954 247.426 350.954 247.325 cv
350.954 247.224 350.853 247.124 350.853 247.124 cv
350.853 247.124 350.853 247.022 350.752 247.022 cv
350.752 246.922 350.651 246.922 350.651 246.821 cv
350.651 246.821 350.651 246.821 350.651 246.72 cv
350.55 246.619 350.55 246.519 350.449 246.417 cv
350.449 246.417 li
343.795 246.619 337.645 247.124 333.209 247.829 cv
327.764 248.736 326.555 249.846 326.555 250.148 cv
326.555 250.451 327.966 251.66 334.52 252.668 cv
339.964 253.475 347.223 253.979 354.885 253.979 cv
362.548 253.979 369.807 253.475 375.251 252.668 cv
381.704 251.66 383.216 250.551 383.216 250.148 cv
382.813 249.745 381.604 248.636 375.957 247.728 cv
cp
f
177.036 175.036 mo
277.857 175.036 li
277.857 275.857 li
177.036 275.857 li
177.036 175.036 li
cp
1 1 1 rgb
f
235.714 250.047 mo
235.714 250.047 li
235.613 249.846 235.613 249.745 235.512 249.644 cv
235.512 249.644 li
235.412 249.543 235.412 249.442 235.311 249.241 cv
235.311 249.241 li
235.21 249.14 235.21 249.039 235.109 248.938 cv
235.109 248.938 li
235.008 248.837 235.008 248.736 234.907 248.636 cv
234.907 248.636 li
234.807 248.535 234.807 248.434 234.706 248.333 cv
234.706 248.333 li
234.605 248.232 234.504 248.131 234.504 248.031 cv
234.504 248.031 li
234.403 247.93 234.302 247.829 234.202 247.829 cv
233.798 247.526 233.395 247.224 232.992 247.022 cv
232.891 246.922 232.79 246.922 232.689 246.821 cv
231.983 246.317 231.278 245.813 230.875 244.804 cv
230.773 244.502 230.773 244.2 230.773 243.897 cv
230.773 243.595 230.773 243.393 230.875 243.191 cv
230.875 242.99 230.975 242.889 230.975 242.788 cv
231.076 242.183 231.177 241.78 230.975 241.175 cv
230.975 241.074 230.975 241.074 230.875 240.973 cv
230.673 240.57 230.471 240.268 230.169 240.066 cv
230.068 239.965 229.967 239.864 229.866 239.763 cv
229.564 239.461 229.362 239.058 229.362 238.453 cv
229.362 237.949 229.564 237.545 229.766 237.243 cv
229.866 237.142 229.967 236.94 230.068 236.839 cv
230.371 236.537 230.572 236.234 230.773 235.73 cv
230.773 235.629 230.773 235.629 230.773 235.529 cv
230.773 235.428 230.773 235.327 230.773 235.227 cv
230.773 234.924 230.673 234.722 230.673 234.42 cv
230.572 234.017 230.471 233.613 230.471 233.008 cv
230.471 232.706 230.471 232.403 230.572 232.101 cv
230.773 230.992 231.278 230.084 231.883 229.278 cv
232.185 228.875 232.488 228.673 232.79 228.471 cv
232.891 228.371 li
232.992 228.27 233.193 228.169 233.294 227.967 cv
233.798 227.463 234 226.959 234.202 226.455 cv
234.302 226.152 234.403 225.951 234.403 225.648 cv
234.403 225.547 234.504 225.447 234.504 225.346 cv
234.504 225.245 234.504 225.245 234.605 225.144 cv
234.605 225.144 234.605 225.144 234.605 225.043 cv
234.605 225.043 234.605 224.942 234.706 224.942 cv
234.706 224.942 234.706 224.942 234.706 224.842 cv
234.706 224.842 234.706 224.741 234.807 224.741 cv
234.807 224.741 234.807 224.741 234.807 224.64 cv
234.907 224.539 li
234.907 224.539 234.907 224.539 234.907 224.438 cv
234.907 224.337 235.008 224.337 235.008 224.237 cv
235.008 224.237 li
235.008 224.136 235.109 224.136 235.109 224.035 cv
235.109 224.035 235.109 224.035 235.21 223.934 cv
235.311 223.833 li
235.311 223.833 235.311 223.833 235.412 223.732 cv
235.512 223.632 li
235.512 223.632 235.512 223.632 235.613 223.531 cv
235.714 223.43 li
235.714 223.43 235.714 223.43 235.815 223.329 cv
235.916 223.229 235.916 223.229 236.017 223.128 cv
236.017 223.128 li
236.117 223.128 236.117 223.027 236.218 223.027 cv
236.218 223.027 236.319 223.027 236.319 222.926 cv
236.42 222.825 li
236.42 222.825 236.521 222.825 236.521 222.725 cv
236.621 222.624 li
236.621 222.624 236.722 222.624 236.722 222.523 cv
236.722 222.523 li
234.202 220.405 231.177 219.095 227.951 218.691 cv
227.85 218.893 227.749 218.994 227.648 219.196 cv
227.447 219.498 li
226.539 221.01 225.934 222.019 225.934 222.019 cv
225.833 222.22 225.632 222.321 225.43 222.321 cv
225.43 222.321 li
225.229 222.321 225.027 222.22 224.926 222.019 cv
224.926 222.019 224.22 220.91 223.212 219.196 cv
223.111 219.095 223.01 218.893 222.91 218.792 cv
222.91 218.792 li
217.969 219.599 213.634 222.321 210.811 226.556 cv
210.811 226.556 li
210.811 226.657 210.912 226.657 210.912 226.757 cv
211.013 226.858 li
211.013 226.959 211.113 226.959 211.113 227.06 cv
211.214 227.161 li
211.214 227.261 211.315 227.261 211.315 227.362 cv
211.416 227.463 li
211.517 227.564 li
211.618 227.665 li
211.718 227.766 li
211.819 227.866 li
211.92 227.967 li
212.021 228.068 li
212.122 228.169 li
212.122 228.169 212.122 228.27 212.222 228.27 cv
212.323 228.371 li
212.323 228.371 212.323 228.471 212.424 228.471 cv
212.525 228.572 li
212.525 228.572 212.525 228.673 212.625 228.673 cv
212.727 228.673 212.625 228.774 212.727 228.774 cv
212.727 228.774 212.727 228.875 212.827 228.875 cv
212.827 228.875 212.827 228.975 212.928 228.975 cv
212.928 228.975 212.928 229.076 213.029 229.076 cv
213.029 229.076 213.029 229.177 213.13 229.177 cv
213.13 229.177 213.13 229.278 213.23 229.278 cv
213.23 229.278 213.23 229.378 213.332 229.378 cv
213.332 229.378 213.332 229.479 213.432 229.479 cv
213.432 229.479 213.432 229.58 213.533 229.58 cv
213.533 229.58 213.533 229.681 213.634 229.681 cv
213.634 229.681 213.634 229.782 213.735 229.782 cv
213.735 229.782 213.735 229.883 213.835 229.883 cv
213.835 229.883 213.835 229.983 213.937 229.983 cv
213.937 229.983 213.937 230.084 214.037 230.084 cv
214.037 230.084 214.037 230.185 214.138 230.185 cv
214.138 230.185 214.138 230.286 214.239 230.286 cv
214.239 230.286 214.239 230.387 214.34 230.387 cv
214.34 230.387 214.34 230.488 214.44 230.488 cv
214.44 230.488 214.44 230.588 214.542 230.588 cv
214.542 230.588 214.542 230.689 214.642 230.689 cv
214.642 230.689 214.642 230.79 214.743 230.79 cv
214.743 230.79 214.743 230.891 214.844 230.891 cv
214.844 230.891 214.844 230.992 214.945 230.992 cv
214.945 230.992 214.945 231.093 215.045 231.093 cv
215.045 231.093 215.045 231.193 215.146 231.193 cv
215.146 231.193 215.146 231.193 215.247 231.294 cv
215.247 231.294 215.247 231.395 215.348 231.395 cv
215.348 231.395 215.348 231.395 215.449 231.496 cv
215.449 231.496 215.449 231.496 215.549 231.597 cv
215.549 231.597 215.549 231.597 215.65 231.698 cv
215.65 231.698 215.65 231.698 215.751 231.798 cv
215.751 231.798 215.751 231.798 215.852 231.899 cv
215.852 231.899 215.852 231.899 215.953 232 cv
215.953 232 215.953 232 216.054 232.101 cv
216.054 232.101 216.054 232.101 216.154 232.202 cv
216.154 232.202 216.154 232.202 216.255 232.202 cv
216.255 232.202 216.255 232.202 216.356 232.302 cv
216.356 232.302 216.356 232.302 216.457 232.302 cv
216.457 232.302 216.457 232.302 216.558 232.403 cv
216.558 232.403 li
216.558 232.403 216.558 232.403 216.659 232.504 cv
216.659 232.504 li
216.759 232.504 216.759 232.605 216.86 232.605 cv
216.86 232.605 216.961 232.605 216.961 232.706 cv
217.465 233.008 218.675 233.714 219.583 235.125 cv
219.986 235.73 220.086 236.134 220.288 236.537 cv
220.389 236.839 220.49 237.142 220.792 237.545 cv
221.195 238.15 221.599 238.352 222.103 238.654 cv
222.607 238.957 223.111 239.259 223.716 240.066 cv
224.119 240.67 224.825 241.88 224.724 243.393 cv
224.624 244.401 224.321 245.006 224.019 245.409 cv
223.716 245.813 223.514 246.115 223.514 246.619 cv
223.414 247.224 223.615 247.728 223.917 248.232 cv
223.917 248.333 224.019 248.333 224.019 248.434 cv
224.321 248.938 224.624 249.442 224.825 250.148 cv
224.825 250.249 224.825 250.249 224.825 250.35 cv
224.825 250.35 224.825 250.35 224.825 250.45 cv
224.825 250.551 li
224.825 250.652 li
224.825 250.753 li
224.825 250.854 li
224.825 250.955 224.825 250.955 224.825 251.055 cv
224.825 251.055 224.825 251.055 224.825 251.156 cv
224.825 251.257 224.825 251.257 224.825 251.358 cv
224.825 251.358 224.825 251.358 224.825 251.458 cv
224.825 251.56 224.825 251.56 224.825 251.66 cv
224.825 251.761 li
224.825 251.862 224.825 251.862 224.825 251.962 cv
224.825 252.063 li
224.825 252.165 224.825 252.165 224.825 252.265 cv
224.825 252.366 li
224.825 252.467 224.825 252.467 224.825 252.567 cv
224.825 252.567 li
224.825 252.668 224.825 252.769 224.724 252.769 cv
224.724 252.769 224.724 252.769 224.724 252.87 cv
224.724 252.971 224.724 252.971 224.624 253.072 cv
224.624 253.172 li
224.624 253.273 224.624 253.273 224.522 253.374 cv
224.522 253.475 li
224.522 253.576 224.522 253.576 224.422 253.677 cv
224.422 253.777 li
224.422 253.777 li
225.43 253.979 226.438 254.08 227.446 254.08 cv
231.177 254.08 234.807 252.971 237.73 250.753 cv
237.73 250.753 li
235.815 250.35 235.815 250.148 235.714 250.047 cv
cp
0 0 0 rgb
f
221.901 251.056 mo
221.901 250.955 li
221.901 250.955 221.901 250.955 221.901 250.854 cv
221.901 250.753 li
221.901 250.753 221.901 250.753 221.901 250.652 cv
221.901 250.551 221.901 250.551 221.901 250.45 cv
221.8 249.946 221.498 249.543 221.296 249.039 cv
220.893 248.333 220.389 247.627 220.49 246.417 cv
220.591 245.611 220.893 245.107 221.196 244.603 cv
221.498 244.2 221.7 243.796 221.7 243.191 cv
221.8 242.385 221.498 241.478 220.893 240.671 cv
220.49 240.066 220.188 239.864 219.683 239.663 cv
219.179 239.36 218.675 239.058 218.07 238.251 cv
217.667 237.646 217.465 237.243 217.364 236.839 cv
217.364 236.739 217.264 236.638 217.264 236.436 cv
217.163 236.234 217.062 236.033 216.86 235.73 cv
216.054 234.521 215.146 233.916 214.642 233.714 cv
214.542 233.613 li
214.44 233.512 li
214.44 233.512 li
214.44 233.512 214.34 233.512 214.34 233.412 cv
214.34 233.412 214.34 233.412 214.239 233.412 cv
214.239 233.412 214.138 233.412 214.138 233.311 cv
214.138 233.311 214.138 233.311 214.037 233.311 cv
214.037 233.311 213.937 233.311 213.937 233.21 cv
213.937 233.21 213.937 233.21 213.835 233.21 cv
213.835 233.21 213.735 233.21 213.735 233.109 cv
213.735 233.109 213.735 233.109 213.634 233.008 cv
213.634 233.008 213.533 233.008 213.533 232.907 cv
213.533 232.907 213.533 232.907 213.433 232.807 cv
213.332 232.706 li
213.332 232.706 213.332 232.706 213.23 232.605 cv
213.13 232.504 li
213.13 232.504 213.13 232.504 213.13 232.403 cv
213.029 232.303 li
213.029 232.303 li
213.029 232.202 212.928 232.202 212.928 232.101 cv
212.928 232.101 li
212.928 232.101 212.827 232 212.827 231.899 cv
212.827 231.899 212.827 231.899 212.827 231.798 cv
212.727 231.698 li
212.727 231.698 212.727 231.698 212.626 231.597 cv
212.525 231.496 li
212.525 231.496 212.525 231.496 212.424 231.395 cv
212.323 231.294 li
212.323 231.294 212.323 231.193 212.223 231.193 cv
212.122 231.093 li
212.122 231.093 212.122 230.992 212.021 230.992 cv
211.92 230.891 li
211.92 230.891 211.92 230.79 211.819 230.79 cv
211.718 230.689 li
211.718 230.689 211.718 230.588 211.618 230.588 cv
211.517 230.488 li
211.517 230.488 211.517 230.488 211.517 230.387 cv
211.517 230.286 211.416 230.286 211.416 230.186 cv
211.416 230.186 li
211.315 230.084 211.315 229.983 211.214 229.983 cv
211.214 229.983 li
211.214 229.883 211.113 229.883 211.113 229.782 cv
211.113 229.782 211.113 229.782 211.113 229.681 cv
211.113 229.58 211.013 229.58 211.013 229.479 cv
211.013 229.479 211.013 229.379 210.912 229.379 cv
210.912 229.278 210.811 229.278 210.811 229.177 cv
210.811 229.177 210.811 229.076 210.71 229.076 cv
210.71 228.976 210.609 228.976 210.609 228.875 cv
210.609 228.875 210.609 228.774 210.509 228.774 cv
210.509 228.673 210.408 228.673 210.408 228.572 cv
210.408 228.572 210.408 228.471 210.307 228.471 cv
210.307 228.371 210.206 228.371 210.206 228.27 cv
210.206 228.27 210.206 228.169 210.105 228.169 cv
210.105 228.068 210.004 228.068 210.004 227.967 cv
210.004 227.967 210.004 227.866 209.904 227.866 cv
209.904 227.766 209.803 227.665 209.803 227.665 cv
209.803 227.665 209.803 227.665 209.803 227.564 cv
209.702 227.463 209.702 227.362 209.601 227.261 cv
208.189 229.782 207.484 232.706 207.484 235.63 cv
207.484 243.695 213.029 250.854 220.893 252.77 cv
220.893 252.77 li
220.893 252.77 220.893 252.77 220.893 252.668 cv
220.893 252.668 220.893 252.568 220.994 252.568 cv
220.994 252.467 li
220.994 252.467 220.994 252.366 221.095 252.366 cv
221.095 252.265 li
221.095 252.165 li
221.095 252.063 li
221.095 251.963 li
221.095 251.862 li
221.095 251.761 li
221.095 251.761 221.095 251.761 221.095 251.661 cv
221.095 251.56 221.095 251.56 221.095 251.458 cv
221.095 251.458 li
221.095 251.358 221.095 251.358 221.095 251.257 cv
221.095 251.257 221.095 251.257 221.095 251.156 cv
221.095 251.056 li
221.095 251.056 221.095 251.056 221.095 250.955 cv
221.095 250.854 li
221.095 250.854 221.095 250.854 221.095 250.753 cv
221.095 250.652 li
221.095 250.652 221.095 250.652 221.095 250.551 cv
221.901 251.156 221.901 251.156 221.901 251.056 cv
221.901 251.056 li
cp
f
225.329 199.233 mo
228.253 199.233 230.572 201.552 230.572 204.476 cv
230.572 207.399 228.253 209.718 225.329 209.718 cv
222.405 209.718 220.086 207.399 220.086 204.476 cv
220.086 201.552 222.506 199.233 225.329 199.233 cv
cp
221.599 214.154 mo
221.8 214.457 221.901 214.759 222.103 215.062 cv
222.607 215.869 223.111 216.776 223.716 217.683 cv
223.716 217.683 li
223.918 217.986 224.019 218.288 224.22 218.49 cv
224.725 219.296 225.127 219.901 225.43 220.405 cv
225.732 220.002 226.035 219.397 226.438 218.792 cv
226.64 218.49 li
226.842 218.188 226.942 217.885 227.144 217.683 cv
227.346 217.381 227.547 216.978 227.749 216.574 cv
228.051 216.07 228.354 215.566 228.656 215.062 cv
230.068 212.642 231.177 210.626 231.983 208.912 cv
233.496 205.988 233.597 205.182 233.597 205.081 cv
233.597 200.745 229.866 197.116 225.329 197.116 cv
220.792 197.116 217.062 200.645 217.062 205.081 cv
217.062 205.282 217.264 206.089 218.675 208.912 cv
219.481 210.424 220.389 212.138 221.599 214.154 cv
cp
f
225.329 208.408 mo
227.547 208.408 229.362 206.593 229.362 204.375 cv
229.362 202.157 227.547 200.342 225.329 200.342 cv
223.111 200.342 221.296 202.157 221.296 204.375 cv
221.296 206.593 223.212 208.408 225.329 208.408 cv
cp
f
252.854 204.072 mo
252.753 203.972 252.652 203.972 252.652 203.871 cv
251.442 201.653 li
250.232 203.871 li
250.131 203.972 250.131 204.072 250.031 204.072 cv
247.712 205.282 li
249.93 206.492 li
250.031 206.593 250.131 206.593 250.131 206.694 cv
251.341 208.912 li
252.551 206.694 li
252.652 206.593 252.652 206.492 252.753 206.492 cv
254.971 205.282 li
252.854 204.072 li
cp
f
204.762 213.852 mo
203.552 211.634 li
202.241 213.852 li
202.14 213.953 202.14 214.054 202.04 214.054 cv
199.821 215.364 li
202.04 216.574 li
202.14 216.675 202.241 216.675 202.241 216.776 cv
203.451 218.994 li
204.661 216.776 li
204.762 216.675 204.762 216.574 204.862 216.574 cv
207.081 215.364 li
204.862 214.154 li
204.862 214.054 204.762 213.953 204.762 213.852 cv
cp
f
237.73 223.43 mo
237.73 223.43 li
237.629 223.43 237.629 223.531 237.629 223.531 cv
237.529 223.632 li
237.529 223.632 237.428 223.632 237.428 223.732 cv
237.327 223.833 li
237.327 223.833 237.226 223.833 237.226 223.934 cv
237.125 224.035 li
237.125 224.035 237.125 224.035 237.025 224.136 cv
236.924 224.237 li
236.924 224.237 236.924 224.237 236.823 224.237 cv
236.722 224.337 li
236.722 224.337 li
236.622 224.337 236.622 224.438 236.622 224.438 cv
236.622 224.438 li
236.521 224.539 li
236.521 224.539 236.521 224.539 236.521 224.64 cv
236.42 224.741 li
236.42 224.741 236.42 224.741 236.42 224.842 cv
236.42 224.842 236.42 224.942 236.319 224.942 cv
236.319 224.942 236.319 224.942 236.319 225.043 cv
236.319 225.043 236.319 225.144 236.218 225.144 cv
236.218 225.144 236.218 225.144 236.218 225.245 cv
236.218 225.245 236.218 225.346 236.117 225.346 cv
236.117 225.346 236.117 225.346 236.117 225.447 cv
236.117 225.547 li
236.117 225.547 236.117 225.547 236.117 225.648 cv
236.117 225.749 li
236.117 225.749 li
236.117 225.749 236.117 225.85 236.017 225.85 cv
236.017 225.951 235.916 226.052 235.916 226.152 cv
235.714 226.858 235.412 227.967 234.504 228.975 cv
234.202 229.278 234 229.479 233.798 229.58 cv
233.597 229.782 233.395 229.883 233.193 230.185 cv
232.689 230.79 232.286 231.597 232.185 232.403 cv
231.983 233.21 232.185 233.613 232.286 234.117 cv
232.387 234.622 232.588 235.227 232.387 236.134 cv
232.185 236.94 231.782 237.444 231.379 237.747 cv
231.278 237.848 231.278 237.949 231.177 237.949 cv
230.976 238.15 230.976 238.251 230.976 238.453 cv
230.976 238.755 231.076 238.856 231.278 239.058 cv
231.379 239.158 li
231.681 239.461 232.084 239.965 232.387 240.771 cv
232.689 241.78 232.588 242.485 232.387 243.09 cv
232.286 243.595 232.185 243.998 232.286 244.502 cv
232.488 245.208 233.093 245.611 233.798 246.014 cv
234.202 246.317 234.706 246.519 235.109 246.921 cv
235.21 247.022 235.311 247.124 235.412 247.224 cv
235.412 247.224 235.412 247.224 235.512 247.325 cv
235.613 247.426 235.714 247.526 235.815 247.627 cv
235.815 247.627 235.815 247.627 235.815 247.728 cv
235.916 247.829 236.017 247.93 236.017 248.031 cv
236.017 248.031 li
236.117 248.131 236.218 248.232 236.218 248.333 cv
236.218 248.333 236.218 248.333 236.218 248.434 cv
236.319 248.535 236.319 248.636 236.42 248.736 cv
236.42 248.736 li
236.521 248.837 236.521 248.938 236.622 249.039 cv
236.622 249.039 236.622 249.039 236.622 249.14 cv
236.722 249.241 236.722 249.341 236.823 249.543 cv
236.823 249.644 li
236.924 249.745 236.924 249.946 237.025 250.047 cv
237.025 250.047 li
241.058 246.72 243.275 241.78 243.275 236.537 cv
243.175 231.294 241.259 226.657 237.73 223.43 cv
cp
f
50 175.036 mo
150.822 175.036 li
150.822 275.857 li
50 275.857 li
50 175.036 li
cp
1 1 1 rgb
f
100.411 209.718 mo
93.8574 209.718 88.4131 215.062 88.4131 221.716 cv
88.4131 223.027 li
88.4131 223.329 88.1108 223.632 87.8081 223.632 cv
83.9771 223.632 li
91.5386 234.521 li
99.1001 223.632 li
95.3701 223.632 li
95.0674 223.632 94.7646 223.329 94.7646 223.027 cv
94.7646 221.716 li
94.7646 218.591 97.2856 216.07 100.411 216.07 cv
103.537 216.07 106.057 218.591 106.057 221.716 cv
106.057 238.755 li
112.409 238.755 li
112.409 221.716 li
112.409 215.062 106.964 209.718 100.411 209.718 cv
cp
0 0 0 rgb
f
100.411 248.736 mo
87.5059 248.736 77.1211 238.251 77.1211 225.447 cv
77.1211 212.542 87.6064 202.157 100.411 202.157 cv
113.316 202.157 123.701 212.642 123.701 225.447 cv
123.701 238.352 113.316 248.736 100.411 248.736 cv
cp
100.411 197.116 mo
84.7837 197.116 72.0801 209.819 72.0801 225.447 cv
72.0801 241.074 84.7837 253.778 100.411 253.778 cv
116.039 253.778 128.742 241.074 128.742 225.447 cv
128.742 209.819 116.039 197.116 100.411 197.116 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 16.0.0
%%For: (Zee Abbasi) ()
%%Title: (9-Template_Glyph_632799876006.eps)
%%CreationDate: 12/9/2022 2:55 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6l`OPaE[CKfJDT8_0i7R;*UgXRedMa*%nX58^7i^;p:t>I1e!b]/Wp/]fi.M7'5PQ5p\kY&`Ngo01G8'4(V_r?F5J_tj0E.U
%+8sU9GMg16nuK77IerL4rl*^>;dX`5n&N*,nrIn:cTh<%5Pd$?rUTWj\'=&`.2>RtI4p">H^,iii5B9s?@Dk9p"Ss7k5DnnYJ:&0
%iSE,ShLGE\]8,:VI!bUS07PR'H$T.6^&IloGQ3!`o]qjIrhl:XjNlQs0>@;Zoo"%_hn8mTY2:<8Q7mLRhgI"f8I,#Ljl;7`Ij:[p
%^&IF]\Mralc2[!oJ+iM^8WiT=fg#E*orl.,p:L&P^\d<Pg].8nB_pf9]6=.RfAF6j5=fG%\4^l?9`B;2m.ETVr;Q$NoU:!9Q2L6c
%5JBK$s3'5*Ifmg%4KHYZ&s'p?rKUt#r:kQSs4bd>rsSkPGNH!mFoLNAT&CSj)t`0n2YhF&'@NW`5k6_f,i7J:^4,[uf.XmcbqGI=
%EM%Qlq`4X1HRY"%I[YWnqrif_n<TDG\_cFZJ);@DotPnIqHn_lpKq7Ar:9N-qj(%7J+p"IrZCrJZh/S^,BkB?q`IKY^]3m%Y@#'E
%]=2-q-Z?1e[e+qEjh!0QIk=I.qg%`)97GjK_rC]BMna]9rn"?gPEG_0lgO@(jH@PlJ,?;8hu(I:hn6te.s@&iroWn.^O>i`H,i.q
%C['d%;b-G!^L[,K.e!'Zbs.eUpjM01>PI=h4o$tTi:-ac)4?!Qri9CUp%B1dcai=o8\#S.+;hkCpAV*Gp[B4!DX.8\"5_AQs'Pd*
%m0Vj%I.uI_\,MCcro2li:D;]ss3"d./tTiVo&8CDI%bKKo;PE7[k^%ZIeRXTli+`88Jg96@h2&F(Ou*Q:AF*+3r]&`^XBmA0E1,"
%n)]U[pAWnBhu*<)IsUkbB0Ub6jh$"iIJ7)U^\[BSHhlf2hYm+3rX\hpa*0c.,ea*0pFflF+7_MIgqWdPRm6lm*QiH;Isn5EQ#lb"
%rqE&S^E7O2b[=9p]*"<^J,:n&^OGq%WT0)QI/E$]Is_"jRuch3Dn^\rp>u05rZV.;Mm*+Krpirng$X:35,qg)8)MB\i^ms-F,Af&
%i:Nq.]%"plr`Rb>laL5M)nkR`S"!L<a)q-Xhn8d*G@,jmm@3>//;\k+jP>7YqYf0`I]KsRrqgX6q<i1Y^&*,j#]3t!g)p.hGC%Pa
%R#=Am%p_I"p`I!:LR2@trRJ+/^\m5d^O#RHr]foH\BkbVqba-P(#SkCY'BnD>jUtus,jJEKBW,t?]"@NJSG'eg\g>D?[hb7T1-Hk
%j8523^O#i?js!"X5CN3*f&F;KIK.iAYP7d;pZ<DsF*GCqkEk'kN0Z+l/U+ts$X"Ut$c()<rnEcoEqf4n\](2SJ,/2-ZM+4UmUq%D
%p?g$^Z7>e+7'a0@Eg70YAbBh_:VZi*Z[_cJZiC!qcOTl>O*\0C*:%ii4<-"P8gUl%dRm<a6[G>b>]S(PYP^4AbKn@/8nk,g=e:q7
%o"6#$eQQ/touZBheYi(CIGU!M>A^L%[bB4(X<0UughUhVo[TT+L]4A>mk;[8d`A2D2S-!XCHNJ1a2<-[T$LoDR:lNsZWUn*UWkOV
%>]Mrp:ZoWC2P8;3o>Nak>&nDZXL]=2^':%.[@YJ0</q2DT#pM-NYe=;[U-$O:ZPrV,WW.MKh(7PG]Y!Za0]?qiVu'kj7CUXs$#**
%b`:kQj+SRNO3<YLI!kqHe,8DX+$Ag!*:8&CO&npQW+5bp+[,hOhr_]@O<-X#p%k%CHMj^b++O3^`uf'dIr(+-7&LaH.Qt/]1XR^C
%b,L,-H((>$(SY->BU>$?9]7Ap+[=:+8eV)#9uDcVO[8ujZqM&pe"LDRbL@=[2/+IbVRJ!Qs+q0NL\@f4VnR/1dm`FnC7V8sG9/sJ
%9QcD0+6]:/g1Q@9%2:ioNYg^Z2%aq-#u)]$;&boe&fmg$&mFOfCF8>DKDJ.sPj53LV4aaaR!.\Cd\Ec[J%ZA44L='n*&%5_:-1eK
%>n57Zq/hi3*;'Psp?8/mPTK]4*oj#V\I[qErgq1,m>(?/4'MQra%,n!dJle!TD62$J+WM?1s/bE.*nkge5D\i^`Ud$8R\_`TtU"`
%m$17m11UHi,-*T&QL[B78N+1lMEZ:sD/rIF<9fZeegKhg[7L[Qo%Q!YlP.l!e$R9Hhl0U\YD?d&NM>.ga[NNukAdP,[XNd^.2OS2
%H:B`NBU#W5r4bC"YBo?aj`pdgTXI]ZlCrEM8GhHi3,UR7N/<VE8A@e^`?@DDQG<D<No.#4r_:ETHMmO&nY/lEiIAVMa(.^&;0Z&d
%>b0SB/YjcDBkeq78QKWl[VFN5aWuHkp<5?u((CM<Bi;u7K\_m;1[D(*?oPXX,bCDP2R/i#-d@:r:G9S6WhSri6",R:h`[aK9B_0Q
%gRo116h!bZBXosq8'uD)EeBt<'(,BXm0;J8TO)F+g2K=E4R`mkB"CWXQ"hak+<!]K;_:CC@iE<DL<k/FVQR_Y'+=9pR<i'm-K&r^
%cg'jWS\:_ts)Mo2T)KBr)#lbr_"%??a2@FO&+OT\njaep@h.bnUY7m'O$0;ZO)FieWCPPg04);9p>W&&L>t^L;-p']0:kCl:VUEq
%1mrs[fo'LhA;Dd>`;?n;/3c3;?9C>sGUgUY8jE!B4J\l.A@+J?fNRpL]D1ka7dT[+\W#[K@Lu8=QCEj3+tMq%/+59^,>VjY9URt:
%<r=.b^`g/&F.$T8`H#'i5n'04<G!H7-ts`3Gs%ErqGcgD-.?nUe8A`r'X:fh35gDo0(\sk1]<0SpaJ#6MZsa#+dsO37Q?i!T\)WX
%RTM_C3_s;_@\OC\+S`-<UL_b'W?'>?ihsmCbA]gN!g@iEg_$T&TNc0-.\9qFEfX[lM:.$&/Fj^Q]gRY7O;Gi,$aW)5#8GD?!B%iS
%(3WXK^PkNr]u5P<2o";@SB!EIHtmqo`Dqne<&5#QG+X9(s6Xg5dnrn2\K&*YV0tmqptt-%O^@t$nbfj;cXc]np<gpu`uNOf8%&5F
%E7P7(l1(P'rb(Nd%iXO?)W_JJjUW9ke+NJ@NUd=6nct0F#EA<=HDF$0GCT8(e+]JaG+AP=o)JIEs7d*K^)so2"Dh--FcD!&1`;"/
%N6rRDOcD>4rkLbh>s"/>7Ya6FIIX<5Hhsl".DT][Y,2"_FB`#07dM^R\khnS?)dQ][<cP9q_p`P809GX]6rD#]Z0''gV<PE%2cZt
%6ON>7Vp@9h^p*t`O!i"5J1&FR'9j0%5h60'G5UA=,C0&iLTaaV8<+c&^Y]VdBk6H(hf$]n4N]F):X?YSPZ8EHIX]@Q.EeWjR'K-N
%d;Y!^0V<?DgZ'!!oSc8G.,\W49I#*a/NEARNp!mlJ(U??!b4(N2nd5OCkTaY\ULs0(QUHr_Ho?Em"Mm1[l`^-5EQ=:aB*X1\!%F%
%PV9K*^@Kt<$,g)2Vjd18%?!1]0uS#q@@O;1.t+G#)5RB(.ba'aXTO#U;d#2%Xf`mui#a%=@\9G\-jAk9*C)b\=(4^7T?,(U%==mW
%%2:@k("&RnioJRJr;J(u<IaWSI+n>bj&KWX+4QArQHnef6!@10PN\S<pOTHHasM]N2bWjM@8?cabR:(BSF\l$;9(+S\Bjm?jZbuM
%P+S0KGd&GY@IX;rL&DCsrG0>oBM)nnUS""^rIh%h2kq8Q1/-fms/tOTeIZ&Hk#""KYL"U*r$tlA'*;oS]9S$EN?j)W\9n<t\CY%T
%-CpaEn(Hq&<2;9DFZm8d.O/-b[agP3YimrMHI-e$qVrG6W!@cUFL.>YR<5?GFFHro<VX-3?[H\@]!'RHGdZm>j7Q_\E`]F^=#B)7
%XsM]VfCLL>^FGecpg/%ZZfjps!-B%=?&Pa3mh:`@P5D8"rBma^+BO)7=JQbCKl@9T\:JT#Q]/@"UJ;4bEVuEMB3R,4RuGK8/tP%I
%nlSg[/4N/#CF;c?&RL\-0LE@P1L[^CAbM'3Zbqr<$9&mo=AK3;Hq&Y%6&5M=B9fGP!!O.S7h5eg!am-\f)2G[p1^[,(HIT8R=bYO
%']:G?+4>[@*Cpa<N+.E8h>enKON969nI/V1TO;HPEe//2!*D@"f[^Sug08Fk!,]>VV'eguLI%b"Sp+GT9*',X(h?!"7R52k4oUOD
%^X_Wh7&Jl$%-6'&N=F-W%"LLW]_(V#OLHi]4AR@]SbrTU7shUp+B9t"Q:^)UjR<88_M*hSUjo!mj]e/278apNgqko8@e(7*<?srl
%mMGrXi?&8R,4M@9T+A+JlZN_G8EUjV6;JK?R1.t0#&Q-41^q\m@lWTWK.hj#QHBb2@S#Q?K,.8_E-FP;mOj69Qhc_Whkai1^?`g:
%-R:H[8qZjjC+GS>JUc%n>P#S)g/#`KVs@8UgKkE<MpeEoPU<JAH$f*ojW>cX[?njDY:4tZ+7-2oqit)?hr?*Me'.8&*<k]l*_Z)P
%NN@Asp)X`aW#?^WPR=%\V5#SjNh]Bujs=@!r4kN<\Hnh%\)6-gr1<R$/Fh5Y5qPekGnhYdHPA*D>O-b2;X_W<YJ$:7>jK'O:AIEF
%pG.mn+8G8\rm0L%/,o9irS_n#J,^JdrI;u)s+a/F<W'\F^V'H!s*iaOq)Qdt,oZQD]]6U_O?U84h-XF*IU@SEmc&l9CBl8*q;P2B
%]`7EQ=0GG3qXXT'mXCj,X?V.0mbQJC)Rc"%Kbj3+natqDs!dE#KsY4bOp.!J/'dqIn:0H.s5\OojdA=)?gE6`<Ld-<p#AT;f.^I1
%bTrLLb(,a!ONe9:-WIpN10j8Hrh]=2I?PtRqkNe4f0g8lEh^8rH-RrKhd'I\?.QGG0pZBkN-<g-]RV7\?qU<ab?\oX8Q=g-/"S]S
%^$&qqQEs7.S2\W>'fC8<f=`T5/qSPE7&/VhE\GQkqg%N,OOa$,aBo1a+*tU_mopP\3):FcCSeX*mR<Tm4)`XG1/RJqTuZ5??*87)
%67Z2W$\Hgh\h!=sjf!?o84=JW48JGG<(lZ>*c(d]Q,gc^bIu!kD$,ApVE\CR=YD,F?1%AOhVMgh5ABe9=4;R0oB.`0PU7m4cV!rk
%GkSZ?g`']0)HqY1htqgrX59NW>/m#'f'cZir=5/bF7Git:[)]H.f-cBHOF-#aqJF0'Cj'?4Pcp$nA`Ya(JU1_Wk:o+eO1PSJYA2C
%"_i-(9!Rnpd]c6@W-?6ubGWB2QJWDq"Wr3hLF\`'nlk.#q,u)SVi+e[1qrmjqV>nuQ^d[:<mn\ZOQ"^Nonr%ZErJ`fW-afu-VKjY
%WcB!AQja&6^RGYH,d6ZSFKBGFY>SEXMY"d"'7ihYnYW+W/d!_c4hbIXFS#e!GukK$W$MOR<r(\E\RZUt36UfU`SA1tgmMh_H1`p2
%.pbZd\=>\;Pgc*1Y9F(0j*P;WJ9kN+h1;X:=Ls7"Kn=Ls=-MB'>01uLAfX\E-_9AFo]o9WJ8biCcC9_kL)FHE*'+ICQ]*X]8*5.X
%ijXmm\N-ohG9`MK<Bg?K`<:Xp)!rf<Z+N,d=[+H<a3s-PF28p-\>S0,T-ZP0H+<hJ-/jj)(E,_!JIJkD=)$2n-DlESApN8X&C4Pp
%LFD41?ShoZ!G0b,R4PsQeLU*K>[Z0io3@aQZ^?Jk];'ITALO(OB*(0@D_%:PNCQJtcaP"p:]:k(p[<Ql[H,ZKQ)3N1f.Xmcr?\rb
%C^KoV_nURJ/,@)pDgq;s]78faAG)_L<G-k$ipZp%%kKt$>$=.`E=UAY$T<j#hBD=o.uu*ZOkY0C&W]L!,@>`]'H=$nJr7ZLD+&:k
%N'8*d@cPO'Pf6b3?([jKjfN;+jI4$0f/K!`nRP1%#jHUi<tU8!)bmpT_6Oi&SkI%3[M(G4GjmhkDA#g.4g1&;:T_)#mtNTj[G`k5
%hEiE@p"X2k<7DI,5Wn^m<a9j0hT[9n+TACR(6Cdln8M'NHS-$@#'qkXg8s<-\6_g1R,n.s:O<RlHL*P7PslInkTg:SXo66g'jEUk
%>g*")F;Dp9Nmk)dG8.1WSthpI8%Y<)2hS?!@obQN@f2N\4/`Ubi1SI`C5g[=A.W&ELbrrSAm'-LHCI%]+du,j.d"/j5Y-:F)Ct[L
%O?\YeEn<%cYfn2p3m%5L><\3ceO,S3p^;:N>G0N0BR?hBX3-;^A]9nE^1=dc>I&""&Rsp3acNE*U-N7_\Dpa@$e>rS8XrNN/ZL"O
%%4$kW>1lt2OcD>BjUp$bQXLa@H,b\P\NqA*VjJs.=cQDY4HWZiW]O?3&c^hOq@ottQJPbQ:u/jMa(l:L$l3EbG!"b+hHZn%ColUd
%\?-O,.h&1(atVf9g[A56ZH(2$Ok9p.$[46VY`%1K/sWV'`%Hss#2X@eqe@afoB`&l1V`8>kiUiA7piiSo$&Q/IL11rXL59;`,r6Z
%)q$(j9YRns^jVY,G2slC$u5!pdJ=9&Becm!AOr>[am8;&?L<bX@+VaV>WV9b(Ve]FM#lID2!jOr^s;Q+MIq=tdF$51SR/)%E;CJ;
%_)+nBFrCd&N$6T?qC:HM@)_R)S]#nMU@uPCjrGdgn7<5j,*L9+=hQLtCk0U:K1Zmoh(\]EQG1\4BJM19!Q(Ic<*[`mco2":!iD0j
%P3G@L?])#r-4j8B]FpT2/>1ig2'ghReGRkB':W_HX<=7.@jst<7g;M>W/B6B(h82V<)X0M9<nuj)Q/<lCi"XH\4A3!,A:D:@IMSA
%&gMNloMetXf9F+U)p3#X<\)cm3^tKR3$Kk15Lm_P0B1^EN>4VYk&O,a1rS.tFZ/KndSj^(((P(^<BG"Bq8i<,@V(_MGpEqT/RNeP
%35)2:aL;f<bMc!9:O^A&1U5oSF?f,/*:'u]EZ!_]V?>4&YnWngPPCL>%\q0_:U6dW.8GCAl?OYI;=^c2\OUY$$^M'$dH$k?ZEOhP
%KA4fMG\Mq3_BGCfWSs/j(;nXdL[WT/6^7d3HkN99!mrTV_,@NNS/Q!b$U('W$@uL3c4$tjO&FE^W@ou?]?I&!7876h`na)$G_##E
%p.>#%&H>g='1VcEZ<@2%d'H$S\6/ZGZ/lKeA2(*.OUUpBm*gV)PARb?;eIjQ^g)&oW_)R,Eh>eTT,YqQ>bP8DB-Ffl28jK]d9/TK
%mB`D@K1m9!,B9+8!5H':jXnBr:%07o]'E=F5DdQ\0J$K@C8t_I8$bDP$V*]1Yj9!n_5G^*is"RcFHl0lid)rUC%&MGc2>SpUYFu/
%*S0).$?j6!4[a`*DF+6;Q1NWD*/mp/0R@Oc<AEFMNP!3=@,8st\K\JY/r40HO);__4cW^LYq>UV@.8GX$d+^co@R)QbX?Qo-+66j
%$Dlsk/U@8@@#6,:"[UEmTrjQ[RXl7.K)QL;+@Tt%W_r\]CM8Wp<UA$;D.-S0='$WR'eN1S/L].QkJ$PP`JRiX3b`C\AXO%o)VK^Y
%9[Vi@fa?cU@p>=DZcmQOD*^+i1=M8#aimp+@6=p7@A_-bF,b"XKPUnMT*;Yk/]^3&*nQRIV(sfOMJGLT']9l]X<i:Zd[*J37(:>E
%)qUaKf^$aoGYDo#clNeIP4\nZp_(rJC0VuP5RT4V<iF'FjQcK\/R@C>8M85$k4,Mu@ol@#)*XU)@h.Hj4=e6,*]omGQ1gTY7Q;pC
%X@)gscGG`6e(DQ@Eb/CijfUb<ok:'_?K>X!%X9jtGZI?u&r!#6S(Q+(W_/\9UNVK,@9LdX$b]D(r"LkMn&5HspsPI3(b5CP5ZM(V
%'$lG^g<KOu]VF5:];fp,UZs_.[A=XnK&/%fA9aV:/66a'f=H^CTQ>Zr3&Nei_Rgm+SAS!(C/LqcOi=<np!2Nt\>s<)[iPG&4Pg%8
%U00])O<=lQ:F[h%'Y_,6AZ@Oi(tfC%n7?Q)aWqlocr@,m=;sFrc&;[fFWedL04#&^SC`We9Y#UF$X$m^NF>rs`0HdiRRf;lcbc)"
%$:jMHV[usn!9X:5XUt@OiXj=JkmnT3V&.c5!_>%ANfO"$V,*?(U<>hi"u5,m:BGmY.IIT,\$q8SQn3jgpmjSY7#XKcY#mBrLpAG]
%(5q_tVk@dTR44/d/VsN,fj!/CH\4kUP^[M;25>0VbU%_gLoQqh=B7.;K1j5Q(ftj:Sa*[#%JQ'3B9/YW-T%&3*s%kApJl.[JFIuc
%kT^UoL*Zpki/'^d\ZPPGkZK6/<d:kpEN5o<PFRal3G>`$l]??"Sr*#K+AKhlCCI[Y]+4!p#JqDlUFIURjTFI1pOQ3'#smc?hHj^q
%Z&5(RCn;9XC6pWs,:P%,L5^f6G#f0j"r[I23A'J#=&1BiZ1EQ&2rsP"RGJ,kS*Jis9\=S":CbefPDc!<K13+DfCU31=-+&AILms=
%.bB[`@A;<3YK.B1o\e]^7"Q!DX/oY'PTd,Q.;h?9'VR(*qGa%29NZW&UICK1EK-8.\S,\D4M@VB4AUbU^rdM`SghT^4DO(L:DM;l
%>'Nfg($;:,6sVlW-n89A-==J2>F:i(R;&Q,Gq,CGnqDnimW%=`6?G1WmQ4j5E%1aW8/[#u=WG;#P;CE#cDE.lOYk9YRu-Apf6QW-
%@<tWe+pLJ7eanN7>cYO1]>kTXLGO^!_Kkk;7Qb6>cYM\R&N/Ml76W@MfDOU,TqqrhSV>"bHHdU"43Y\q[WMdERITFLC.PLA`)FQu
%K]qdr=[/!>bjs&J]Y0e6,!nI5MNP9h8J^EMG&GV0f3I<QB'[sGVi]OWYLu<kmKS#bpB=&7jjPMME(q_JAo[Fie*U*5-S`G88K'Q_
%"gLW@k#ak43TBMeJ7:5s&1W@*0CKbW18EclLk_]NS68Pqb+P;b7Z8bpMHGpQ&fm]e0o\9+`;Hm7fuVt\a[5h.:cWAYBpr3u%15-k
%'pm$;Q*lNOPuE`qGS("c=LoP:l=9Rg^gTTtXrXDDr$5%K18-@SaUo7oM9>l3+UFLI`1.m:=lnkFL8(4c>fkgRQ5h8`[)MSY]&H4m
%<RaH4olO3#]^h-+]A)`N!MZbf:\m0>U/-rY7_4FDigR5DFBLi;B<@;-308*:Zum!+$IO^"]JUqd4Ol79cmq0D6;lN_OG14@+S4**
%DQZ;hFWHW\l?YD]P]Z&h-tc*hVbsnApoNkQXN&,$2#CP0fCZuVlO:*<ps1lX@Upp.h\kc_BK`I;Jnl-K\+9aqmV>J^U=W's(M!^Y
%U,*Y@%.<p[?#WMMTA%6d6smE!qNL$IU!Z8FbSrJt`9r@L@+*k-$kl*P/oE)eMtdcBge`62Bo8X,2\^fQL+Y,sBLEQj%?7Tb4.$;9
%O.ODB%>AkKS=ER^lDfe]pHniQ`<gZqpn3G:GN:*g[q)qQXFB2_,*Xu8DD)pJqf=.WnJhEl,cb^ZjQ_D9Z29N>$=T<UDi&u9d`.7[
%b-4gDq:%)mNBcjV6?7&N:L`o7GA$>Jm]0Zad!^8Q@6@\7G5J@*S/qW,Jbn(/K7fONo%.et`5DMP>!9pZeMG$`4(.f9,bjsj\t0hW
%%R=3;G8:h'C1n@r08j"%B<l?1T'N;T\g1b`Q>;J7nHdOqmBceFWUbucbWN55)0?kJ)%`-F%>(Xd)BH@Be397Y&G(!@hiGVG"99o%
%i%$QdQpX6b5:9I6C9P^Z(,%3PMm7<RLM!255TCXZ<35$s"X:#M1D)ek"pQVaIJNA)GGGV.S<Xh2,YqY^=6O5ZWFPVD/2;e(Gf0*l
%I%2FO;"/#JbD73';KS*8ACV8E=@;,90Z(a5FU(gW6s3h/PPL(l5%m<(YuIC%f`&qt^l1qF\g/\1`7)]=k<iX>RS9/n9Wb;0fY68m
%O$ikbF3g[mF-I?.8o2.nX==:%#gjlk-amf!Lng4(YT#A4Q$5.ZMcL!Fd'-J>ol`#OFrk^+S.&/mUH0HDM`jab&]>6f]UFDgBtD+f
%0//6BQ_FJU;aX\Udqn3m6=O$(;aXdu-G2F`]!e35RSU!Ol1Ui[4@4.5qlE#U-(164*KG-F,XW!I!'Te>$nCHS'-E3cG(4$ua^BeH
%NlWl*3)p>!e?1q37!PP%B8U?3m5^Q8K0Bag8W@`":BTe"*V&J+a2s4/8]U7:30n&%QX5=)<.PqQ@RZ:r0iY!`&/hB\p4butd^C@/
%GSIVdRJ&uh*CWAa;aHP6o3uJG"5=sXW;#'FIcVYtd<XB>\g3N[\;3"WM0/qubJYNrGIGe7)&*bQ(Tr9PlEY=19Sn4f_ojGrT9Qi8
%#Q.Gs#,C69<QjY[A=M.HZ6_HL.2c6I;cUYmFO)Z(OmS_3k!>R#Sn:0s]o8@ZQk2ef1]!a!-&&X9quP*M%Z&=,<l7AS6Y/M:L3^5d
%qKUp_<]V(j_"-HH(qt?<,F/LH<XlG.3q]OR"@'/AkVmI;9b2O0"3PaF*1@L(FV^-\%N95)6cE':4*?:6'T*=m<D?r#`pH44G_G;I
%p/t2%65deeb$b?j8UGM'?5c`G.#7U\6n0,(/KO=W!ddUM0TMr2V,KaL_ms&6$]/.H:,VRG(gD*:ZnLFAql29R;uQE5_g$jum.ORX
%mm0.bC07+IY9Z[1buK^VHn^b'G^K];Q-8;8[NbpK#S)G)Furh?&V]+jKu>WZVhQ$8'6Bc%).4X5m;(Eo;]pO)hJ,9>GP()RpFAK3
%GS9NN(jtkdnOZto5q?2;N)<<&cpC6a2U=.e`7,D$-j\\AR".*ORWiq<fN%=g&8*d*GA"up+>pI.C6DYI_fgCS0HS%kHi0tCpJ?sM
%cALQn5KGX0+\$D][QG8cJWV@%O@C;\dH+JE94#.T6g2Cd+YXtYC.;PRnV`,r@:BV+m*8#,!a</gC'%%:fY)R2rD;@uUW<;S@Kll-
%`eqVAh%^'R<NYH82@:L`<H#rn3=HtVO"qqCi';O3%%@$3,Wnoh%:Qu$_IkSDg6u`*%7$[rX2:TO/3MdVAn)hiO-ZV23m#2,%(aqp
%2]A9B&`>MILPNl$lP9tkV^"Y]nF-_)fqiTDcj*T&"-)=_o]iT@Gdp.14X%_8F(kmA2K7q)Gnocilb]Wp6/GD.\\tZiDO$'V^<Pk7
%Y/U>+^8O]AMU]8m%HG:;YM1H'i<[4H_8e?5QNIB&`<o$?,W`r4%&UEElQNOSL`tMK%1W6Lq[.m[e'8B,/Gu'Cj618\>^Bb!SE&5u
%m\4,P5]h2HUaL;?0JX9+L^f.]EEl(k`VaI@68>@)BL?9haYKO0iPdXq=(2;o8+$9)YT*jSNNPV-f*nLP@RTqjEnd-nI+<ARW_:Pe
%e=2A.EVn/6UZ_O]@itff`mc4%r),46@uaDZY8G(QBnb5#.iEldFK.\#RK;OoTcg(C!&i7D3U`u!OI0aXAHTQ8(BhNk\&c3T<k<NP
%-DnA.AK@TLZocgOZ.]4lfkmTVnGmV0lB-<c!;@Lg'tP\3JW)QG`*rrlR;!Hf*WVF]\:Z1N#`2\Z<]mT*H;-XG#+sN\%r[-KA`@f-
%jL!MKA7hTeHLTVh5`kiV?`tJ8N^Ntk?9<\e7iB#-g&\]1-YLG7#65\c/gP0:keiWiG4bjHhp+np%ff5<i/STai'U?27eHc4)\C3&
%Bk?B.E:`rhPn.7kj'=bg^5kY0NiU4`9INDVF!DIH%P/S#dc[C/;[%^[@_`QI^RJA3^o=5nfHoq/&A,t"I/tjacW(>rYuCVXG/Lii
%kj8"/:L8[+l@EiR.1/`ho,ltj$c$jl2Wl?"kK92E7_B/_b2!q/G/Ba.W[=uL%J,'aBQX?Rc9cQbC5CpDU9f)tgLi[_#7&mk.#f.M
%oIUjG7_"Lhou.9(\IGn%1&W7%V+'bNDWp0_]<a)oX1n-JB]<PWS))b+O12<-&lSjOHdOMg_)m#9XM;YjrZp"s=-/r='*LcWl3RM:
%(BjtDN*K<r"@b"9$3DFgWOjZM/rBu;,8X>`JWYkrJh';Cl3[S;(PN$DOn6_I.mu!^$N_Lg`<?:)Md50T+rA3#!Ki<:Jq1r02A_0S
%,ST2mU<"H2E`$Ce7`\#d5p563SUk;3U<qhMOc)PY^rUep5sXM*dbo_=Mc'W^aEamRi8_K(i/3TeEeAn_H+cM:j1OC0$BF_@K>>KP
%bs=VTXQ\RLN/O]g!60<;6/^asmbi\TMn4PV`C8b%:;_GC_%ddL[0H_jMrKA>`C9I9'c%VI#6Ba@qLcT&4eA,baP.V(s,)^rM%.TC
%GlN<+7:!\D(Dl`H]:kQ.m*<'#N)2Tm%E]HW"l(]4HH!kBm@>08,C!j^T(TZY0\:Hd`LXr%AomUZj5$G!hu\gp;M*`KM@E<$L#e1i
%4,FEj[ehhmgV2_d()JnFXl@p,UYBGZ+g6%O4V?lkjl$6;&0kL9e3Ig!2$6i4(@7HGPLLin@dnMJ2\Z^%C-$PS'"dFh:8h:W)3k*!
%1U@Zg=$9asVq^ftq[pKI8'cLM,X9Fu^ZFXQX&uAkJd.IURi?@q\g7K.#2l9OE^ruZRH?e+,3!+H=YreVin8a6`%Lo/@tc6^=t4pb
%XMGH]kGt&i:A)5WG4>R[fBncnhs$2@>*69VLAEQ4EOn$>`<`E)E<M)F/E[#mdtMIj\Yh&7=3_[aU*0m\><d8=-$E9eq^u31ihCX0
%+rLb\.'DhJ];jcFDWm.c41fplPI@L?C_NmHQof5(`-BI[[p,sPmgCi+M']<=D2CCaYWak8)p4>^W9s"(,^.^?r^&_/iJZP1_KPNm
%:&Sq,q5nq;dkb,c[nlh!B'(]&)]_i$p(bPB]t"^WqZUURTj&jjCGMWGJoWq@8mSac=3p]t&<r'40%%s2@TSO+;i$\N/c)Iu,<B+/
%"ecClhRqP+WO/GTa#q,`+6*O[W]G8/=o)m@U2OqfJCkSg2-5M4q8NMu"?QQ>ia$"'i1Z6qBK$qC*.;[\>r8k<-5K*'d6R9:&Eu'I
%_6.L8=7/3*bsfNpJEZ=m8Un$3MGO_%gu:\OA^uuO0!2^V+U^//8U#,DVKuY"`V/&X9PhZkf8N1)P>&S)(YH^DpK+=fnB*#jpG92-
%A7'2D$g6QAL6n_2?!Bg[*q#NucK\ai<!>_I1SjTqNij8SP3#^[7W?a30Kiq_R-IuB*(MgC.],6?g//.BH?PlQ0iXgLU*E@3[8,=0
%6"GrI[\B2I\9E&lHp?/WjJiV]#Moj;>&S;sYRe>\*G&c]i:n9p%1ji)F%L&U?:m4:`(O5"gf[27WhJNJ4;@F:l>2n8ZEH;b<%+[!
%Mh^a-dFmonINf0\p7:?C_/S,qLsE`FM@nK,3ZENTc%edSBW#L(jI!_6<oj,B3]/uUX*<jN-%8EI1W5]BF1;$Ud&>1;2-j[hqRu9N
%nQ=2lm=YC;Ahm>$2pS$0\<eelL<r2SR4-1U('M4GQRso;Yh]!&0C:IbaMed?KuC,3:8Nf0Zm!(<3WmoLR\u(4^s7n.MfsRLdFHKO
%r\O_AnXdXugL\e90K[4q4jA0nh.S?;.jU6d?);Ir4WCka=m(MEj!:P:>[Z0B'+Z1X#D',9P=WVZYGY%),X-n<gMRl&+._4OkU0Sj
%!F.*XF3F^42co6chM?'#99r7O%4[!=InS!.WD:GM%E1R79@TrIOOuuHlD%g6F_&hQSV`"'<;W[JH0+e$\$m=1'C<GN*d#05hm6YW
%a-=Dg_B^MUTuDW0)s7[3>K)hKR(#3O0n<kVPW)EP%JoPqnt)dbR;HHH#K(=g6bEZ<::UCMbG5^0+`D`e83Odc+7S\.`XLk?cff6\
%`-$G\#BqD#$hj/,FsB@07_+(n,7&`XLl6B#`+YGGlu%L@hnZhbEX+hCUUjTkReoQsGCUe!>b=jKK8?qH6/?$Zf;?)5h))PXT0,KP
%&PZT,p5S<3KNp8AChZZhJbiP/W,BD%1.("2l@p`hbD(+'qWs9[SeFD/.&mZJHV5rf%Pge.:e,5p^qPbLKB=5r:\;&k6Z-k[,PI/+
%i!cXB;?L:pNXVPnYBS!+n([DFET>WtUZ_Lp)5&&V;TUlmD+GYX%0n%agTt/dgOmI'-1KW_bJ@s.BPk$VjVt9Z&i@__((&NG+hl@U
%)"$PI!n*Bk]b$58B`UBT$$_FBY$6!k3K&n,aZaUHfZ+2)"!9\2`#/b@_lL=:@)Gdtkj*&/ifImd@eG2&]WNM/gd5uOB7nnNG$V5:
%$g?<[)AG#V[/m]?qLP`NkA3?ejCiZ\Xf(!6j/au<Nfn9femmEu2j?2Vc5C+dNoGM?YSQo[;ApK^NTbKQ)dY[_IE;"#-8H&Ral_Mr
%%R8!6?cM*#=V$Kk/Q9+jeQZc*B[TBO$0<jT.-sH;C5g\(:XXfGJWt=B>Asd(DlJ;[G=RCKNm!u%eGH+:\o6@"H1Z4Uq%:GYXkc7@
%\(!^iN0^)DdAU4c\*.N\>=Vk0n?aaXrS1*QY0^mL3nW+I$9Y\$mL#GlHZJ)ZC$Xp/ZgGdc/@drqQeu&D%W]RJUI&r?F91LpkVma#
%"PqKg[DHt(r2TMOJdZUE9+BkHr>5Yu/p7Fka";S3GS9K+p<iS4K5N1[lNSWJV$:_T$Vb8!FCUHr#n!eH!QlYNO*WT-<U$r<7j0ho
%Q+,6Cc+>4<4R_U,Z-iHW]NO%"GBE_0qp?!^C?1"1j.\p+:hH+MX,rIbd*@Gn%Ar%/W+]%O233q8\_3aKnC8\l!0jtBJBZE'6(R%V
%B0::kPW+J4nQp)TmYA)l8De'C!F5,W>O3J&Pk1d;e_'phb%cp\]5@V4aIfAm[rd4uH_$7b+h/X26g=rtkf?&OEP2`ZEo34ApUtoT
%O!!rMm&^,,j;r=dcTg$@JY'XTdX(cf@s/3jb9,@e8;)'d\itRU2)gKP2&2pWB.E%1l2P"3$Sk-@n%3@s?.&Q,pn#Z?FjHZka8PtU
%WJ_8oY9!PQDApI?W@0&ik1fqF<M6RMFdFW"Ya8@$>kLFhdZd!6KS)-ab9;T4"0uoCBL7eW+b37mHBX/%+&`>ojJbO;6^T5GL55Fc
%_/Q5Z(2VKT8I"e`6!$uEURCu_aD7p%\J=Tu%<+#:.?u2g+CkmZX[W^'<#>UI6+Ul:#GR\U@+mmL:qRtpg1Hr^BHd/n>#Q!Zi2/0H
%>SJ_\5Qaq]npWWrW%SG,-Ec)P+_(LE<@W".`t/[rjfT+A9>eVYkR.Yo;UQgbMCu3@();ot%^&,-JDjX9HdX]C>q0Rd/1ha[f"kJ:
%l-qVj'JjoLcYTNq-5neCT2O6UFC2Y06'.M0#QXa02(ef=&-klB?"q+<]n5jODgM`n$FEmN#1]!1PjQmr`0+jBB't3%_D`M^!;4%[
%`YpC4mE's9Ub+QfL!h/\h'iKZJ/!*th-n@G?-A9&6,l)6(M5Nr<=*[Sqp`c-?c%!5eH2kK0*VI/Z0\JAUOjbHa,[R>]-is4Za7ZA
%Jt_nW_:OgZSOC8%P-%`)dE8]5kis8JS^^?BUDo9J@?DQN7DK+fU*$tjW<@@MimSs)Hmj*C'\fX@+5K7p85iM?FW)-U1<Esk0"ute
%FP9-WUrWE8HtF`a2Gtkmo\Z*H86OdL#o?)n%3Z0K6h'?<@0`(^n3C:eakg`,fL"Lug-3HC<W&daH@&)oPllC[$]/N8@1eHRErOdf
%"q>`)aA*;D+aED$C)>fTB@\%CBi#)eoB\Q8,k;+<05L"nU4enJU"o`nKYM;5Dil"C6;YDL^^ET:$bUY@UohdhW%=Y;K7?6D$P[Ou
%,I6;d7$qbRoGgmt;T>Na(@RGbn6@,KQ!(B@eOi(tJ],P7QF+;*#^SNH*&1Y..>[l^pHWU6r=I<\5qU56*6LX,<Z6+(3JrCK_=0?S
%F.AUGSJI]H:9^WH9[psg4'5`G[1ODDBiqNA(-FqRGPtt^!i@sfSTGDs>`7g]!Y5.tNP.a,j..0gR?p-*>3n@+<9re]WVdamo.0hF
%ZE?"=RIEZ8M0kF0K5f@SR`&hYHS"h^m-0[>DkM\-)e]kM/->J>:qU=)+:2`V,M4(]V&p32*4BH@ChXQ6kY_jnYTjG!Vi`+.,AF)2
%%%>:O<2LDq@;ed1)s)ucVF!sc*!S<,"e'USbD`G9aimR+cd2d01U)?4/d;jpMsV+")Vc)Z_Oh.AKnr$4FTuQGEETofE^iX,DOr4N
%jY3@uU&^[6DiHt83?_tTY]hCp`-ESqJCj)e-g.UV(MGScIlgpG"CWlM.5m0_*qDS+V(j*g8d1h*bf(6ro?oImfED,hNM5q"FbgJB
%"#XGqLCKnu:HB[&-uHEVRTa:$Y/F,XL"qW?Knr7J:LuY.X?+;/*/([A3o0W!;CX'C#n^bTU"K/;cqc:#;%Z2AZOfD?!J-9V^tCmd
%Xup:pOVLmbHAPjXV\&<lg9\nZeWE2(ik[kpG=Y.t$B#)S]h'.-hD\fT/8Id;,1LmOm%/#k!udpb;9QqGHk`u_T`DT!67=ed_5LO0
%QO2cL!K\,U\I%p(=prRi-'P2eDkf\cHUWo\Vc*R\3[g8,=[Bj7ec^sQ'antQ)-k%13Ai"1E,R=)WN.V4%_@ZMGieoi_46EqfI)2c
%SdkO@.bc'iM++"#q4bl3KQ=)h1S0,3QF(*QZI4/Q`%h<C!N>HV0E_kD1Jj+Rb,"g'=DCnp^(Q0[ep5,g)VRl#9=b"[g.8c[ejT.M
%$PZrLMC;HmVP_'END4#$o'&+,1e;If[kQ#U%+;5..r;\R*=Kg<e^C_F%2-np[_"(!Xs.3%Z@uMu]a=eRCtM_^,WP/s/q)6C@='U>
%hcQ8#RlaY!<M`E_=tE[?8pe"GM,oR]`a]o:Y6rD<:#TVW,@YQ:EO,3P(Lt]Si$U\o-qP<Tl`cX%(K<lbj"0&5?iDUE>JT3Al^IKb
%i80(DfJ`WRd02:5WZ-==0mU"6^auL'FA'TP6.Z?#ob61eUCX3Rci^]l>Z,=GC3]P(P=M-.5OZsn3r0Q0!/d/fW85UOEXJj>8/fu6
%*AEb(&(8:uajf<S#T>$U6&H.&.`QBuqn*$H:TR9Lr'16-[pm:`4sRn^*JZhNl*k1V]rV01X0Ol5UH#mRLWB.Bagaqk35`jZ!R8i4
%%(f1&>)h^J@@'Fskga3Y03!fu1R*T&"f"\Ac="Ep3Jb!bafU:caiZ!j>_.XFWaD6tN22BSgp3].&Hh8_C),.uH8_"rF,lrU0r][l
%odCLna4TR;:9R^q`"6<D*kn/?r-0b+KjY+H5H0Lj8Dr8?$`$!RS\\QLer>*NV;]DX]+f<"$+5NTPRd).!&S!G2/C]6`hBR4>@$C5
%X$Oh;$0DB7('pdY>Gg7p<d@7+_1ApU9!`,d!jOYJb7/$rpc[YCJis*K%`9-4.6]GbXCZq2f%C+hoZ"0UdV1<Znb?3_%pI4+VG`%@
%J(nWp_^ZRmK>W3>.Ebu3SQqmCbG9r4^n"=\<9_'41F0`K%Ef)ddPu*\Z9ZDQ;GEF5?TC/jr.R]F^a?."-lor7I$7)RbABQo(:SUE
%\lJ4'4Mrmjc_#ct2tgt0R\R2ieDhd>!8f%t';5%:#2rTki*h-BN.g9>%D.L'%gr7b[2>hnaA,lcJ7WE$!u0PbLCGrAb@WQl0tXBQ
%(sRo<@Eu](5W#Bc>]kXoH'm92(qCs<>6/k2Q;SekRd&]^U7OW,^>R#k1dlI_)KqQ3$$mF-^3Z._c5(e*Yl/]574J1<5C!8(k!\_"
%iHAI(3tf0l,c*liHHZh`MX+o>Tu$?>H9@-%O4`73(mcS'.hE5#goPfCR9J$kJoEX--NVZ*in`TF(t%7^00;=%1pp):X!fQeDT86s
%=6,/b`He281Za!D_Z9=`jb:cLO.s(V`&FIWnpbJ8i_g?5cDi#aXuu.Gku]o:)dfIR4-``b4J?/e)i(Il57Z/8&Em_/lB]D7F;0rb
%_['mX]0C++`o9P'VZA"m@/[Im&GqR.bN]MHKdSX$DTd7RkFk!MmUIfN>&=9iW2;NgFd3Mu>`+^kEP2as1LbHJ2d71h6[V?:PpScX
%<K##3O<X,HP_2f`+5Wn*\f89YPYMCIPHr.B*IgO*mtFfA1VACPE:/!D=;P#p9XW<-9QZ`8`O^?_TTG@(K>9^Q2")h$j:279G&57k
%'L[Va\"jC!a(p='Z&h"6OeF*-e='nQJE2ML*\.kD]j=J\-,3brlD[oFX?u$?:DdDjqj9)W@p:"YL(!<W`tAM30B&X%6s(`,8^"L+
%>-M<ch&1dC1a";=!M@'(OK(_&;nLIn6Idc,bbnkEKV:j`WC_;Ii4_uHEs7C/^`Ss9'K>II^o<WZCp`EW0!!:V$gd,H$Jt-Lr6_Zd
%ORRGPJ"\-pfH+$$g=WAr9e8.P)N3>WC1O<C$TC7_0J4)(RG4SO/J`cRr4pAV4I=:N+C<+3#$!1K_P$7T+=h3bF>FB-$'j&=9.N^Z
%Tg9+:[77\u"Q*!$-Q9FI\9=oI@DioldZu)h$+GJ=/q9B`.hUdL5ZWcf\0D\ZKVk'fEKCrR(D5_UfUh>(3qM.4na%sDcJd?>(J%F"
%TF/qj^YG2Y=EbU:7&16:_1^4]+;)D6n?5aAr6$UO\S5#&F[O*_YG*>bXU2C/R(%tbiQS25X7?<JVT)Yo3C-1iB;:E]l.U5_6srX%
%1X"hJEk0BU;Z/ns(FnUX0O\:0QjXZr)`Bdfj!#fR36#&XJ6M!Tg>6?i!50G9,=!66,qF@!X=Su[;fqQ\<?'\6ZI8#GL&Hk/;%.Yc
%Qt[KmZamU6O(K"7B,L@n<];:;LhK53"J/QC1Gk"V!!#?jnrZ!igIqk<Zf2_,WS*>Q*."XU:EO0V+^2pjY.OqXoQCX]@T1^oE$,4C
%jN1Td\2D)RXSZ<Y\ITpS6,a2=27d4tRE-qSWiTAVhY.":+p*0M2);rR`He^^l!RiH=61gpc(>N"e"h1J%LkL.E22E3ER.-,pZ+(p
%ZrJM<,[jelT>:T[Zjtmb`M3)r!Q\29BKr#$L/KASZ0[U_#ti"Uk^-=dQ?A.[JomGcZg$&qGolg4aH8#H&@.)l1M?foi#s&`h;0*O
%D)Bt9&"SjD'"->C!BH%k/#EH<H?hd&Om!1<UI0MU+iqfNjD7pE*1Lhsad,\7_7SoA66dT^&DU<oU7Ul^cmJ)rGfK`D"EkggcNXaj
%8n(ujKgdBp.H$%XZVP3JmYHu8gFf#>*MTL/fqO0<c)X:9"QhIe(J#))mkZf'5bKf\%V/]2pKUI+d1@2Nq*;D1=>DWTLoYOi$.9@'
%Wf6]b'EKH0(l22FEu&P4`#:oU$GXMMNm3*ODYI8;/S8K315:>5+i1[B!5tK;;5Ra"UNGc2DMWG@+&r,FQZjVZEA<\kCGmXpLHfEH
%Sik*H[5<i_$ppZD6QVn#["6n#;kr`QN'0`3S@R"MC$$%J[Ym/L(3(-]-eP%7D90jVj$-jCF&bUY0J>N)/#El&"CuSaOJ$Y-@im6>
%>Enbtq]^rIN2K<LiW\IsbkN@0[\<r!M%3c&c=^IL#P/oVm(^ao@$FN.#m-MJN?GMY_)VN9gNVmfF70?u8K`TVW9DIIG/RQ,&W@8K
%"Y@ee"?GOkU2=UjBIK6ROa.TYNpd5)A3D^oqjIeF-sI#U43[B_Ad&e$=c'd_R'ie\3R.J;3oKP$oR:mpXIROBSk:2<)\sPu)sS>5
%G26(;`N5G#Le+6S:3WkWHt)$@.?11Jq9t(K9m=Ck-FHc2"]Lk02DiNP,.`^?Mg_I?g606jJrp7o!g/A7]H0-:-V"1U]t3+fU_;?X
%9u-/tcjp0IqooO3C_i#38Omc3kjtUi*27bZp(O]^geH,?ic52gl"-JVBIot$<Z/i*d5`1oraqb'TDT]"#9^F8aA4=TS()2)WeM@s
%JC;)Lk@_8*)!5Bp.9R8@Jm.Ms:7)KbGr$,4eGtI?bMd1l:bgm^FBHOdp;>m;d(US6+,(DI[iL><74nr-Z5jhn7UjAiG<V$0jQ_S*
%IDuXbf$Kqp@VQFQ0(c^e$m928irU&B6d):2eTa'k=X[Oo8n,Q[*4"E!]FcT0!,>2.3T:,8L%.2jL^@IZ!*lJAqk-4W'EMKJ(YELS
%%%?WcY`%R6$IJ&D?+BqSe?u\k^'_.5&$9"Zne/a6X@RJ'3:#;O<X:_G+`*IZ-Qag9G:Z@;!&#7;'HQB.3kbB$OX,%%6>A&PKY2nm
%@Hi'8R.dTg%tKnT5#;P4DZ)^ZN6-YG#gt2g+47"g5ZFtgWs;]KR#=BfKDDZ9X-l9P0k/Uu6)46N2[\qg`TVEeL=RBR#p]X`Zhl>t
%!bY/:NhtDl/m(\`P?8QiGJlEWC3<K@O'jsP3D!<$&5UJDI@!9B*dgX^$k!aqlI?@JfU&\$3XV/Wa,e#F+B\\3'YK4W9)o"G+E,%l
%C7:lZn@VM/0i*`fHg4e[6Wa>&]_&*MEV=_$)g:<K.E/#^aHI:'<0;;AqI]Q6iTs#8&0N&K6SUOMNH#/;N6/-#f9;]CH&JZ!\4bO@
%aKh,7q<ikYFa<?]DR-!*N:srE3M]IlTNEJ`*WfHI>&7*_*B!\[G!4$H,1"o-nocbJFDQqU3)\qdW(FVQWQ;Q(/aeEH"2cfoEYFfi
%J-%%KUGZ7CSN&<*[Adu3oXJEH)C7uaBriOEX1:7i7WCMWeg>M!d_#dNiCJp2U.cX7J2Z/qP_fPTRP@aLCr?*9O!3!m6JHmnK@iQa
%TG.&TB?WC>aRY;=7Ns<eL304!2*%>M8@i%7h2P>Fe@*M-R$3>'+k(BE3VTi^6pUa`[)RX4`:.U,U0-ak^NGSO=<%bE<m?ohZssc=
%K'-`[B=)MHd`0bG'_$;i;k+9XH/_3Q!eIS7L+&"/N'&+j(^@!K"%1Se[Jb1\N1;:Tl:/`b%gYqNj;p-GaRLjaf_^7?.;3%0M<%-1
%!-i)H[g8OVHc]RW_e;J`;g11_!+Ia!846^=Yf[0;6k]GHEBP"o2-)k:DeD^gM2B:Jj<NFB+j?YkPBY1T:/dPjYiGYTopnt3fe_&,
%g_:-l#@9JEMtRV%_9eW1,T@9O;Op^_5eA2?(b/3qetJHK!M&[9]L>/E!9ie"aHYA'@>U#m*\8Wi1&p&E:)ZYg^:9?0b.L^g5gd4t
%[WP]c6tERu9r5&r:dUnQ6Nn7%1iC0V#uXf`s+"GnkuMs;495SaX+36`JpE50'$5mb#pW*cBu_VU9QMJjOEX#RHp=*gWj!pE[]ue#
%%:UG6/uZ&51P_Pa9<k;^2kp9+95PNj!V_jc3m$Bg%NJBTGY][`)g8bt$ItdL3Wu/%UPJNR%%36"M@d4OE$cGKL2q.Y&X1>(!kj,/
%)Zu1\NfkQiC,>@VYA%ecUfooO?3*3!k,4S4&$N*N_FWk0TbL6ig!iqGM2W[LWE%WbVJ]V<$@se%TeaZ:5Fk<GcX@+*ADpb*`*2PS
%:t#u?nCne'jPDd5@jHU][l/t+WAnpph1!,j&h'Q,]fMiOYX65kV,rT'7D`OG_;]kr9s*],LVdDOjmZsq"p:Zd]S%0L;-5WI]d/E5
%SAKQ5;?>co'$:=gA`mHbV7UNfHRJ+u=Fj7Joh9aD%<o$1St#3b"h7H,8D1,K4&0;R)IF>&S.qMF&PWJ:_2^DZ^E=WM_t_)oM99(c
%cQEB[p_)[o`#9)C*b'R>m0"Ck&-_*qm7NMVfH_e*f/sZa1fg<to\&D9bl_5;:g]"9b$peE!iA@7M!Wb2C.KP*9Xqr-XAD*TW&n-]
%N*7)QN'ld!4rh&d7OGNWJ-jo>M$\ke4FdFQc4LKjW*P;*@NfTGaOAogP'@7W&`Hmc4GGoD!g[u!8%\o!e*+M[s7KjS3=+Oi&-EiJ
%C]cP&UHU$GNMnc]X@RG-5/8'B$;Ptq^8WP)\2a+-'HgL\)Ga0F&4oFk!7623QXr2u4W2fh^DDAM5c7ghCeng6g0$l924um(<KUHQ
%<hI\Om?P*>%GpHQZPSt7iRZgXB\BU<A*CebW6<'>8U@dFXhY\`;a_dkSn'j(DtMKTeG9$b5<3?sONsrNn$Zm1ktIloD#(6lY#?5Y
%2`VW3fsMD*S:UHg?mlZ"*IAI"_`[o#)IUrGU.r[!*^-*oe-g,-\AKjloujoM0m*^``(IWC7>WaRIgMZCG4)4V(`03+Gs(HiK^1u-
%@GjDd<!WU=ANg)*Q$\7IdAk)Nqrh\HmSVdnfCoc#966@`X"d-&W<EF0go"a!09Z?[IaaZ$Ul!KL7F\n\;>A6N$KFa2!S5gNG7G!X
%LQ@5E%j`S2k]=0>'ikpU0Q47o6+`iN?kOGEde)cN,A(0?T]gqpKTpUQOE-c3-0k/#.A_Wr4\&UaGD87&BIY-2K2Q=LRqf?A#fXl+
%&BA>/pE!g5%;D]*-\k0'8?7:6.1o1ZFWX=?,X<J`pViH-B#0!f[c3>&IAd;9B0RblSd^-6^AHAdIJ<`A\%fZSg!cip?G647bqIt&
%pC`I(CX7BD'GqV(AfqA;nAlOb:Y)/6_i:g-S3#n2E$B-*dSD)a)h90Qj,!#OGZH[_LtpO<+0.`$Oiu1EZqEBiU(e3EXGl`AWiQ5Q
%Hat\pW(BgLR-EQ<a1L<Y)*n$.FhTs]L-=3Z(lfWnMe30m:[!6^IudlHYnh#/F(s`P00/s=Ur/Z@jrS9MOcb<KA.lb\DpLOfEJ9bc
%+A,hh8@;HP,V<,LKTV8`qR!2:.PMbO5a)r9;2djA%0/OJ:"[K$5_;QIQ1>%k"GGi@ZgTnVkVDS8$a"bf:J(p`KE,@"^QX(OQ>,<b
%>2)6C!4,6<^8e(CZ@Fo#9j6"3rOWL+@o!?-0QI-2The`HS2*4R%35ZOM^<6#9o'TI3+WERAM^?XXO0BB:rC_@Jn1@B\9gbhS-'4b
%fMSOiO4mE`cHmc$5l/3"4dp+DT_dTKFsHY+h(U^]`Y@r135aS9>.@/4Z!_h<[H;-98cK-*pi.4/B1V9;ThHPB;.W`s)?B#RlKQ>L
%`a0'?h%.u(0GP1+5r3saVF(]>cQe7*+[djiMr8SSgRPXu:dDONh8"X18KZ5Q47&4ko4>4mE"4!1@Ges4-`%%*e'kWs!*-gFj\ick
%+)61NC$@o13YfKQFfImGc6'!DM,m`+HQiQG-C/)R@#klK1kaDC3<2GT+h6F>J&iU^,>OS5d*ffqB!GW(*6J<?),Hlr0^UjEL1SK;
%9?q!tI,<UpJb]MV$B]>2PRmi5JDD*sTcGRD:ff:o17@4o#ItMc+(2@(Pr0&ZK92fIkQhUbLPMOa!>M:;dmY<b'6\Mu6#cmPa'E7Q
%%l(+san9\^W8U=["4IpVCYi&k=?QhDp;!ETTV0F918P=d@^AKU!QNO?F&agp`[^>fVWs1(T6TZeiurID5Ccl^(PjffE0$RQdUFqa
%C?6_nQ3'n.9TZg%^3=9#n6Im2U003hC(N0`:BD6JL26)&fecinRA)Zq_?hn4Hu'uCZ=5Up+T>5[N'JQ6A,T4b1mj=TEeEP+9h":f
%L-@prYip;XM2dI%=$r!&4Jqd@j7h=$1E?;E`ZDguND'Y-oU^2;&Gq9%[riN7rF5?/qCL*_n_rF-fIrVJMkTbJs5IL.-+6-jUg[YB
%4\I.6faBYp^Ki$S\SiT'p3[A>XZ%#!WeJZcWm$_)Y!UJ,X!TnQ@[mM(a<6%0`Qfq`2Q2!!i,oRdN#mT_fg5bc`#)>;)Y!H3.]p\`
%2XnBphfsZ?UaqK]D-$!,;4?pp`H<&LES)#'`0R-Nf!K]41n&%!;8%VV>?Huf]3&lr#luOj8Q)WW;j3J?S\n=!J.P*/cGSmVJ$Wq.
%X:W@M:,F8Eb[NFlPajFX%%NE`D!>i\-(2T%<C]!uCL($?5arJ.7i@\I+;k1IH)pk!L#phlUC?KMG>[A@8t*;a5iD`Egqsd3:.k1Y
%VGAp2'4U%q:nmm,9dCk/pNib^UuW5b)]JWMZmh;=SPj`p3(<e%XN<aYqIk5he`(sEnb?>hjUjQ[N2%!AP?$9>45e,?]Jhn\=-3b<
%XChj0MD\3&SgNl+d>JSB0MTud):TS=)XF$P047o`2n,29\rA[$C#'_%@hJbA785I(Z.'b:Rj%d7.XR=>N`qd(H)J&*go?)]')^7Y
%]?o"rcugISc02_rN0[TrP9I8M#H&2k%H5>VKgaU,Xj3/pT/Dl1cT>4E_*l^0*dKX*?aB8T-3^OQ`Q@0\9.DrT1dn6;#@RMk(-%c7
%7j:>^SX9H]XVtZN=LLf)`e)(H]+!C]DMqXWh6R]8+K\C(HPDu,bD`9M7=Cth@o=jn2BII'G>_0nV79\phQ\a[M+3/3m@0V8;0HW+
%8Pd5Za3D3STIUnKnfi<M+Y%tl7K=]E(]5CoJ3@>,Pu.NQK)L]0Z""a^>LG3#bpZ,Q<fLf$=bf?^0ILfS#HVW%)`Cki^n$](];i%Q
%)?dGURQgrM+0f?eMPEXn,8tXc`,#E.hBrrBN3%"PG@atB>S&%rTJ-ANBAH"-#gU84s7pZ<)^I,amm@H$Q#^:fe7`1m]sgcSe=$#=
%JNW?#AOUrLb)]B[$!sc]W,XV($aua^OmF/a0gcXSDR?Krg,O#d+bI>i$#Tsf;g1imBcJ261:kA?r3!r:5-j<);(=h_Q"J4l+:?$G
%QB`[ZB-Xp>[t\Q8@#Z(65A[[ZI#dSg5Y/FAXQAjNT$[FD(#2La4R[ZsOT=[>F42=4=R#6a,\DTk+1;Opa(m$<a(]na`JidHqH;kR
%jQ^SD6%PrQ[Io0%44`l)S1SIJ."O(kK!7qc,JIFRa`h@F++R<]=_^BA5[e\gR8*o=F@PR6P1W(A.E\o+Xh'JNpu50/@FQ1I38l\p
%P/`5L2]f0$@4ph`C&KH]2N-P[o@9\A613pOH=7L4(?0XteK%SJA&H7F3:X/U^9)Y%5%;rBk)6coC]QLF&>3P%=(m!5ALX4>h30s=
%)'94NS7MbfV-Fp#V@J6Y@&_HJFL7QqV'/u+5;i1#.%#FrXP%FTJRlBPA*,Wn!rs/NUC^@G*ha[e\q(uhA[tS'$=[_B7);s(Q8V'f
%2Y0+nOE=%$504WJR\oBF)\J&f1nnEV+YFu(WY$8R`Nb:*EKZr/lkV"tKb87\%PnP#&?Wu].kFtbk[Nd+<Te9>kKlHA4J^jSl9%GL
%^]O]js+178*XEt8"t>NEoZ"IVP\VM^$@uP[_/D^"OKX&2Ut8a86o(%n>_grW>mo&DcsjtM/+g2:>'#rE.ni5#O.8s\g@)t#_Qe/p
%OJ4eRM[V$WibWkM/C4[DM@H-)G2?&I"mj2eNOt[25Ou1ecF)tu0.a%c>lDJoegeI)VTXA>!a`P5[k#H<!2p1Ld*tDs*P($<[U7G>
%RQJE*Npri)^c7=C<M4Z#.gPp=bUHWl72T%01-r6dP/<mMQ=O#N2$5IBUM@qPGigHcYi&&B_]#ANAO<55f5JpQ')-`,@!Q(.!.D\4
%);.qdLM\$P@`</[,F2nYa12hI_,j[-\Qa^fNb%dh_CZt)Z:.7Bq.OQ#agU-5d"Z%f^06t][Hp>)-BM/<_f[!^ff>,`g7Wih9kb;"
%Xm)N4YkL._]%]1Q@:g^g9f7-9)pDG8+VQkNcZU&?WDfKZ"B<k,`lbb)lGMN?Q's`Ej0ZtI[+5ZT2`IgZSul5'r?q(CTVXC9iJEm@
%qe=2d_mn]lSm=.Q>`)$mp9;H-[7uK!C_8YV_F(Ph-/Ahb_SkkB/',hhJMiGj>iWa9`j.KnNB)W2Ab=ha^dMNkq+0_?8-EJ@O2EkT
%5am;SncV3)jip+l69o.M!:<BOa+rf+M,:)UeDt3u]:/QUDbC<VObM@eCY2k=P$?ae#+&+("cP",)X#5n*&PR37MHDO,q8sme:rsH
%\%R<t!TO2\!dA0")>(7I'L:-?T>4_TX[iD&R*3T7$5)S@7S?*H?S"P(_G`7fRQo1.*?\c\O<I*$$YI)BB2ULg_jQn'c3(OAiq-qh
%'tM,]]r<1NBXSB[8#,X27HG[P:<9c':1s>j$l1On=j.qV`_8/Z3HI<@C5tl'%jN^X<crN?"+`>to4lJb/MEXI\.,;9R/j4^`l$nm
%T!uW"\19="5RMHPletZbc-<)sTcJ\bT9b,WTa=&ac8_I0p8k"dXQ<de6WRts"uJ8.LJl>cHn&=P&0S`JNErO06#MM6'FFA@^91oO
%mDY/2ELKEqi\sFS=&H%.qUmE#B!WWG7,h0b]bREgROsNB-8:'-JMtI!S4u@M?9?4(.u`OTNio1_Y%ajn]3s';cErk/k5g$`\31g>
%#\Z(jX#lC6R.l=LR:4\!*IQt.7@RFQBZR@.:'o+&5T32C[.^dT1C=n+&l\;mEr3R5e0h]F1]B:geO*O.T0\'ZVNqUAiWd5[J:QsV
%c"/VlWEFU(0i0WN+'Bc$%$[iaQ-6a^VlU<nKat&ImETc;6PJ,GkrkdL8>WSo1Uk?2dK!78*&`@2A+Hirf4kUc8>ph7qIo>*hN=kc
%-)N&EZ"6BlA8pHCdaB>>BrWP9>MW:LKXFl3]iK'AWMZ[AeR\.,WEsarJs"AbHEBpJZlHEaE;O<(Jc:\[aEa@C67@=Vp7+gjWCssI
%ruV%->E[88'jI,l>(%fc&lQGk.Uo`RQQ[M[U9>=M[DFW*\N4\$K*YBBSRsa-N2Vb^JgOW[Ho8&93*&YP$)_/[X-MBoN4R"eenlh3
%5tZ9,_rs7Ce:qhM%3D_qD7c["r'9UN=j$ThWc/ZmEoA>HN'o#5V3iB>K``"jS3c"LZ?AjtT9O&QDf+s$Q5&;s8i9f6@#q:!RaKM-
%[tBD_VaC7H<7:7/dq:pocd5Y(:?uMr:hKRA1?W6R]JW?@Ot[:OE-3\!\[A.Q5.RB\-U1-XrGUrf57D2tA%(HJ,>Ia(mH;(KJUV$%
%``,]C#&/,?G$-+NP7_QL%U9gmjK^W:l'0<B9bk"P)3[/V/EmtfAGGC+hThGr:KO\=FNO$pVJ_4"foe.LHtn`hj#?DW\WZKp.`LtU
%9'/^E"]I1&*b,@NEb=kAPpRC49B05e[M/1:K^Y0O\JYhCb`N<q36c-384I#:U,L;Y>RfG1,tL3macB\bZ0jY9E\/1h^9T!8U9tCq
%NXR7Z\n00H>V/["V+,(j0+V\bY(fb.@cV,/mtDPqLf%aN2-ON<SdSS0"GTl'S4ShT(s-?*:1Wc&1tSTm-?,WB)b/n#PqkX]gkm9]
%K+FB%hJVP=>;>gYB1#-YH#>7qAtZXa'f%].;)/Dg63as+0Y(jbaDgd9TAn(Ibk,`9Rg,:'<+D+7pZXB51C#ZtLLQo,Y-qggY1=JP
%Z#&`,!+u@D0(6JkraXNe3T2flS<purfoNh4bNP!a6oR(!0n3A$o1fk45h<TL0csm=)I7EDpiocXU+Wgn_h'&WHApYnYdQUW1%51A
%<kE;l0AF%T.?@P>cGg0OnWQVcRALJWXQjWB/*V(bAB1pei94FUNb?s#WDagI:;`9<VISD-eWVr>0i2J<g,RD5Mhs00SEH84,$FRk
%][9t4lNj(lY*2=W9V,_r`0Dk!1%B4MpVq8J1gEqOVn/f<&=Y[5r*`kO?KX>glTYgWH>'IQC%*q%nZr+ASE3j#[VguA=ra^)Lnn<i
%N`A,AO:aiF#^d/CZU8llL$"c?L'Vjq3Mr?7AD-307QW7[a31EmS`L]a(eJ?GOgZZEB^3?LNoQDt>#''RhNSZnYA#\p1VYYtQs<C)
%N0"2mi18[@2q#j&gDKD[#%NnO(c1-tD@,b8plDZ8'=%'oj^1ZsCWpctS^eS#.=B2mV_K$"D.=_YL>,VlbScDpVT[_?W>V)Nq2E,l
%J]g*FEDmS3L!7&@ONjb`;&bM\30Q(Go/^NA6Y&f>N-69&mX$Kf:'=$T)&EqGDAr^=LN0e^V,J3Ui/Z3+@5):.EZ\%a$rE56!aYM_
%Af!,m`RS^mS@oc@F2TUJH*QoQQ7I0!2%g_g0!86[j4)'C%GI<[F)gh_`5PEX!9^K&`O.2!^kK8-R+cZ9@KaM_l-<H@K<$$kb$%ID
%CDA3Kc<WqjEu*Y:E]XPAE+c92ZeS@mUG`6P0OlX<(IqDQ@M0G8gC3Vh=%qn=@g64YZSF.G/&k/K=Q39,0cV"chbq"BEM^r$m?N=6
%AT]cR7)^FB37/UFUGm@b@cYuMj#XL\ULq9")C3;#HtNH63/W-rZO92V-s&.=N01X'%^c*\_1*8M@aIu=btd'"-!-(r(r'2WIc_u[
%Q3MPJ@SU*+a"&rcr&bW+f;\"#-RKVd95B9A)lHgN`J'Tp=a9G@3\>?X3XTLGL@'kbIj$+mdF2l-&jsPjP@BcppiB@Xj3:,R]-5Lm
%&J?=>LB;5R,Ard__[@D<A=R1"7uZ>Mq9DG<XTFm4Ko?ia)@9]/M\m!m"EU)k(`YG.=nDCQJWqQ_YVHdmG)=k,'+pG/[+$T:0u4[s
%WgngR>-PhGLd;sgeU8Sa#4pr5K","LgDPg`)Tp`]-6Oqr;'lPJ0M+TBUcA<,I]$2Km)+)tWLf:aB8ni2ol)6$r0;N:f]L8p4'\.Q
%b<\3pLjdNLem[Y1ZIXZ5-6&3'H>ACBl6([c=3=sI6Lpus#*=M`Tb@n<"$mRN/)d^k?@6i>*6(=D?cn</cl:IR[UGD$['@`-iA_fe
%Et'4K]"_,PKDobIbqtA\FQ+0%W;\D#_cXQJ]]q&c!-B"43)QaM.Xd!Y`A![2Z#Bib0_-I2!NZ^I9.?F7"N/=F*?tiE;(/g)KsRH\
%0.S\rX@[,A$%ZKZOuKf<dX>B(eAB:EUV+^:Ki.Npeg;1+h\TU-(HS\fdb''^#(s5s*rD@)(_s"%0%ufAFf7ST*5BgY_Cfps@8oOd
%hr#0V+a9Un?7`dn_'TRS!Z3ah-@F12<^)ZUa:*$PZO$`#6Fm_@'0Z\L.lV:]R'4H;31KE`RHK0'lZBuK.ufhBH)i)fbk?'d'8@BZ
%hbKirFlm&@KL%g/(+5jiQ>o:R(f\AjE0_Fi@BAQ\$6int#Yi63SOaT$K7T9qOYF8)T5tYP+(4\0HGGr%iF5/a?AO9"cn'#TiPUKM
%S44@3Rkh/u_MD;=B&t;T5kuD%3/92pd4t3W65V4J7kq/$#_T..PuM'RKJ6@S=8q.5FC?m&@$ZO_nMbFgpcWbTKq8-.8#;1f%n?+o
%8Xp3Sg,*JbV@J@Bf!Tspgf`EqCXsU<#'^csSI9A?$_90mW0TGBYQj^$OPf+%NsA>c_o=]hJR*eHFNS"hS_Jad)1s*&gl=r,3Q6m7
%SM(h)JD@;D_*A0c'A1BXb;)grisGtsYuQ8AElVpV(2!u/`hO&R%)AtnZJ`S5$u6q>5o1_78:!O2$236mP2Hli7kf*)5+#s5+a%S`
%DF56AC#_`G;ZuE@.&.#9E2lrN()4U#:FJ*RM'4hnb;9Gk0UaF`X9"J<JJ^nf&-Pq%:*dRc-qgZ5"".,F[W01q%)`>Xg/"Vih7Fj*
%JLR"th!bE@7m]"a+'9su=5!MeMWH:r"Mpmo0:#=@._]H:OZ5W\=`6g!2[$r2.oiY_"QLRt\HY>Rs1sZGKcsQTJ]lgW_0eSfI=`W0
%InI_]]\16oZiWU-#\HPbA&K7:q1ZmpG@:bHc:[\<`Xn)qFjsPP6a.%$VW5r1_+`H8+R'<N,c*qT^/G/U^B)>F0,274"KI!(+W.\a
%Bffr5AtKM)?5S9Ncsei\)1oEh6+3>O'h"LMJ*kAiXPg7q$%aVahD%b:%#M8V>o818XNU791B\pNWaTLP#\J0UZ_(lb?mb5^?5Z*a
%_ahmV(9@=5;f\W`5qof"'QC2P^n@\Q&%^3l@k0@k=RSoo]UG2I)F#pFNQhrlI[4PV2`WRD62\UF%Eu&Ces7.30HPpuW[g$t=uJ%(
%)L*Q>>RY4PA0k-ei<;\-;E(%#>2WPJr[h6'+b8<n,mBmnpXh8s?jN",d3sQ'F&HlmJPkX6osR<qbkN.h#!iMglp2TNL(K`uSWCJk
%Jb]U4/"I4g]VPm`?MK&;'l=j00Hsq!3Z&eiIb0&-!euMU(o%.%%u80na951_<1.&/,2bk>5YAiqXKd%DDm4Tjl_Dm6Ssb,.g;pD`
%9Yc&M<<nNS?f5cehd<=4)9!]/0.*ZK.6p#AWIQEO$K4\_X>ur>K*k_E1iid7Yblp$]M\dj[Y]0K.U^gLYq"Ec$UoIrB$5l9R%%7Z
%o&*cgd/'8Z`WaR&_eR%E(GMZkg)Ch^F8-#d3u9RRb[+PaJ0B%B@<)BIJ7+@X!E6cSm*8kOKQ@b;A7WL2&dA]Zaag'_#`uR#!@u)E
%cX6ie1G!Fh#+Vuq9.k%rO>=*"CqtT)<Arc'`h_"bCqu.\k&<4d$4nY.2IHm%:!f:;(^cg-a$p97gGc4pCr"i6*,=iW#7N%sMk(D=
%OmBF!+9\QlAaj>!@$Mp3@YDP`LkV6d#RgaeqCdN;h#%5p!%.p#Efn#)&=C)PE^66'J[J5Y]XgQ<N4k.ZYWF'`E8C`d?5S6Mr\eA-
%1'4@g%*cctbhjDuB1cQ(JS9!p?q$2jbu'T:NRoDfl9YfYY]65uKU$L0W215mA-<B-pk9<I7UXE>q\6i'4Vqf)3$U,W#EEn!#RkEV
%h5E+26XhRui>^V)Sb(X$^hI^g@?eRoN-g7<,qt2W#Tp`X!ol;k-?Dde0%l[K2VL:G60"7CQuFWXh`2o8:=P.cB*?5t:niaR,;>5V
%7bhp@^_gRO,#/E6RVb-4,m7iE&<SM=#gAjn1g+XJ^bjuc9m%T^:7d=R6=?'p3oJ&5s2c^?Q9>p'^Zg96G9R820XNI+i5Pu&6XZ`@
%*AF=ogmeikSJ/3oI)$;4e[k5N1P7n^ciN_s<\`b><^C(o5%%V*fkmVhk58&a:E!M@2iJMiKC=oc6a_s'!AdH=HI2RV2pF7aAAHQ5
%QKP'Jq`_,S"l,epNd51;L@?n>hPk?_#GXDsJ0</g$SZcXPaCPY^tn9'XUT_G9jB)s]Bp@"%)="R3]$hrfFp.d`o;"#s!<lsW\3<Y
%_Q=(?YQ$eMs+\b-J#=mB:?i4U>Lk?rR=@`U&9TfZb/!#T^]+,Sq\q;crK[7-JC@VMkFoh&B@:.b4Ef$-H)T#0b27KsIUZs0?^tZF
%]o;_[K=X&"mlY\3?g)rom>9n?^Wb)>oS[P#+D2gliL0&!gok8nf<9833n5n#h4boB7)+glDE6)tINpl=4MO7/G:tM^_dI7TniLXq
%)s@!-9K`&"`G[\6_C9pgs!I'ue`%O^42dQGf9s7@i"nHt+hR%;^-+!Ri(WT4=inMJMfZrWC#luN>@L4u7.(FlZ8.$c(Wf[Q_Nidj
%S7LEdY$Q0c/:V\H?R1PdXYF#:@=I<leX(XDZ6E@AICm']:?gMmP4?EQbBp5)kK@/U2k+_u9W_XCHs-2u@;/u\h.Ti[auB/V&c$TC
%1cg]dY_:75o@d;o626#X#"X-8WmZa0GPWp@B*r!rd-080US[sU'DR`0N6Jp^ra)m]TYaHf=np\GVNec<)PlB0hE-]HfZAI@nn1[`
%EVG'F(o<1(k2+'2EXC`333Cui_^_YapR/HKAB*=2$D"?4Mo0LPFAa`]]up\+S?`s6*+uKSp6%/)l#'t"Z56CB:MVYC!#,X6L=bs;
%?1Q=#]qhA@)Uqa8"%Y/@AW=!^/I8:<;ta[_UIoaQ?5T@^pj-T#:Of)(Kqeh2"D@&^%3=.p/#?ZO9I&3G72)mTn@26FWs48U*U@ld
%a`\iAd.Ni-;1bqe!bs`nl_T-.he0N,g1@pBU['3R"Vd-kofb-+*l;gj.J\9-U]YhhKs-h@6o1C;=!Mo8#=1$'ETHXS1\NTX!i1c2
%p6%dqh(*"(W]DmfKY;VPqYO%?)_Rs#p*-ZZ/RpGe]t/cl)E;9oV#[u1,APl]BW.8jU!eHN@BTn&H4.Sr<^2b1s%M(g\CG"Z2$HBj
%7F!u)0>eu-Un9)__k&^-?4KND1+:0CX^E7WcBQ"T.:`=u_X:1P9>6@^M5!_t98G`=2br%qaI/Q>;"beX8@_Xl'(/</Jl24k6!Gj*
%fo&Wt:[(4!M`MT_UX%MM=tA$/CDH?ESQ.:i]ms$!>rXER(phR!:=m\1<7Ph02dJ)3-scSm<_A.b[XNA1?4*-e0V1mf.'5YrHJ&m>
%WD;'glfED'lX_3#)fZg$00RM$3YYUY14Vega:h]0,!<:c3(p-aRK[oaWHq]5P3\C4(R7sqrAC>+0pPGYH$Y7rY?bgf+Y6g38P&lc
%,$QGZ*B#i/,eX30/`YmqZ;V')SY:7LN=oM&H:KdZ!orGa6Ygn*SJT*]'%3DoH*LKW<3DGVp19_i)E2TDGi".C(PGS?8NASFf/TJq
%nrb,1Zn!^]pQ7an9NcYg"\+uFnoF3d0s7%Zh$R2rrYN26A0h7a;'0Zs%fD$CQTJL)&qmp!<mNf$Gequ8bO@j=$YqcgD)#m_D'k0)
%$H[On'h_lCGi=Ae/[V<^>%]Pa1=q'6Yhq*%]R[bi>haOK\VF'86,O)q=9*1j/A.nrV7gal]WGlmkMQLT#JTncJepau!`$Q>#Z"C]
%>WSa4p_\_A0#MU-ZQW)ZgSuHG:FEEMl9`7D_KtbX(aFi@n4p`V_A]M^(\V.=Gi21h^>!79HHZNn<C%m$5'-0ZLoKIb]?O@uBAUUu
%'I3%($o7>?M!#ZG0(PKA!u8YW:_X_Y.<4jebN^<;3XZ1Lj93K5M\96UEa:);Q[)+s\[uYc-YM3<@[Y/]B>Rs4?s2u5I(LpZ=tAf[
%J\Xa>n'&5@;!m2p>o#MGWa5PrlNGZh1BOf0SS?\#pJ/)R@OJBQ>^1Ehb"+bJBQf`i/3:uBZM<sDA/FJ9*@)]D[_d5Yi@:U'*`nM1
%9$%Z^d'#jkdp.N9QSEU7\/1<6DQAd/UQb%Rq)A":EpP.1QK$,n]DF@D>mO!siuGZ^=$W_E_QaK$a+oC]b@&#)cZ\@$[<1rMEpV4L
%j3AadZ-.eK<[Hq]I:V7&E7cQ#fNkqJc]qrUO^8e_35[?m]jA06^Bgli1</,Z_-&%E1Y,h[&dYjnf%>+b*j[gBEa9H#W``)3h<":=
%:7/(j\J*Mr%:iS"/CF*5f\UD4MaOXuSR4DkldCkBUqhh0kqk-`mDQRE(0\E3B#eK$OQE:XX34^7_0PP8dP<-ag7pHNe`$Yd=IXG!
%F5-r$/g]<;pHkq(1KY6"[(:X(X>`VL)o"&5\dTdHrkN2i[B=f+T[dU+NF`i;>$]/(\\I'Ao\H3c<Tho/c((%@pJc_N>:ZVEeOADg
%'j/JUbJ+i>n_L:X]ICKXB@T_jI>"rlZ=Etcp;3h&.He:Il;BlQA$!8kF/YM:Yj0Y)`4\75/d/7,G#hlS#d1qHlI&2alCb5iKO?>?
%9'Q#B25Xu_2QJHY<kLMle\rY$WIhJAC;.%(/#t9?42;QhXLajN:H_g&OVsgt\Zk@^3Me0=Xt!&j+O3]]WsJr0AXc\dE!q>nS5ko-
%U+Em3P4>oZEM4%/!$GQpji4;nhS>pq_kGS,8`.sM<>X!j6ku7lQaslA3H]o.@6!>bW=*T"B$[4iX:-je(o],c0,uDW;I)i(rNDCL
%Jr,>MK9PRE9>hCkKiFCTE:@2)<#5TSGttA4!<D'p;I+;fOWhP3Fd4LLhPl_(niR]cS4Rj%1X"'8F\rcF\&:j\FmjSE6(^\jR6tK+
%NKNMs^8m\3,h3(!*k<*4S@T9seVmEcOWUOQi7+S'0prEI/u0bEF&$"!j%D($?1se1;h3,lMj1$cJ/G1:4u%?$S5V?L(J`d<2,7G!
%cQJ",jX(&-o=T,/,*PYU/Xg6nJXfUsI\.L#?0HsQM3M_)9GjI@%*T*Q/ebOhDg+NRelj;BmY&0qWS*RB)_jnJ;N"<51brfbCRe4f
%M)"tBlT7)mX+#\u<SW@MD34YsIt]+niR9+#=B!CA;qo8Opmb0I_4c/5dj8eiOVJ*XFJ^J.JFi#GDHUTK]Z!EA"2ahTn[g$Bk^9rQ
%cnN'#ksEN<Jb/,(?p!2-:R?Z#40#3XP;Rc(N4M^[&tn?F]"m++<:J&/MsoJ]9V3l5j?sireLV#L#sTXdbF)1nBSNTNpH$@RNGG9A
%#^%j%\OG/9;&<\^4U7`7-295]WCmO`Go'(Yp/n4IXE'[/pW)i1VppER;6_pR0$R:+AW9TS<+:Ki.Hb>8`p.j3e.#i*l>j!NeC6L$
%q8-aS-.R]O8!fA'6GVeNOQs+XEBY1:?&JHSS5`SCfS7f?.`6"%7<g-/,o5u(\uVuLCKKm8Uq1)c:rpJ@<0n2+Q?53f/rN,S[kkHt
%:'!QUR8fMZ:YN\IHg!I]@gF]G\m&q97bGXI\QOkepQ8n`'=\&58u`MLSEP(&.R+*+/e!/SC/1XacuH6J>e12-Yo_SsFM#E2K1U8:
%#JcTq=+l3R\&O43PR!qG:8A7V*4n.8G]_mVp@C9HGfq5W2&PYE6Pm_)W/WJ<?#6mBS1i$XMqD]9oh(kbE&hS=N'A-;2:NI)2(bbX
%JQTJ0k<_/MWN5BrL]nhU\8tM<J<HT6FY84.W%N)T>l7o!0c4saI\S+`_OO7+@[S1\S-u8Yn.p"fJ.U1t3Us^9,m/KtBla;"02M^N
%m0;.WKsu.Nblq^8bi,R>b>S<-Pe!W39D1/K0!($@B>`qR\SL)"Jh7eGKCtTjA@\NbE$;`3!IShHe?s$&#Z+0:A]f]@?s"f!/_n_r
%Dk>a9Y[&\:1q@0H7[>U9aO-.We]&"qiS5I6b`Q+hqTgU2)/!.u(ig2jTSInAa@4U2'KR9E4,a0Vk]+5n`%LDd&/$=$jL@0`Bu3j0
%ZA1.pS>gLt@C2OB\(U2':5mqT2*)?0!\2(n^(KB,^k"de[(%e<8%OlC,4*I"RrREt,PH+LgqbJ].j6O.oNBjbabMs:=39]GE=U&0
%/o8#tkV+)kA@Pb9_5V9V\:BaI5iYOlMeBtCmS(-8#L)R=-kq5)7!:4G\-VO(Ms3(.bblu9,nl)?kmf<c\D;=JE!fjRX*+^&DEJ7B
%!aP/9;-*2D7WGNWh\K77V^qX]2?#<X^BHbN13LTbgI`$+DX(GHF6"7`\'6h&EoPhc^rm,S/VHRgCP`rV;+JsKHJ=>F.r\q1X]ABY
%Upi%i\D<`&nk]b7N?QW4\&:dq&ra<X5f#iD_HXYWi'T/F[h'U]#Mgua18i!DaECdTHV%;E>:6IkY1phAp$>YepmLY_B;SnGP=&bS
%,e>QEL.W.I*'tg`6+PG!UAg"WE*?4=ZE>fTEf9cD;Y-J?DHZds>>X*)$eYlA>GP$k\FSD:Y*Gq\Di<L\A8ucsr''DWP1sSZ@ZIn-
%D*dQbgRA^k5$U,B0?gl#_)ENnD1OZ4cI%Jc0ljVkdr&LH#'QtUe(S:,KIQ/e[Ko#:8qsrLD&7!Ue)n$>/5+f`[SUTtU/$ZU9o4RU
%d5K[`C4s#4'K'1\Cb_AdQoLQei1NW531DK8:-S6:bSH]^!,FQ\/Y\Ju28qlb-pSi_9X]KMZqY(h(k>qIoK(dT[H&8F>8^sZn-Be6
%"2b>"/YL:pgi1miUf$ESYf4a_2M!HcY,U=Jf-9@jk,,?$\E//O`a11h6.M^W'7"Fl6cZ`QZ`W+[?->9B%&bt'/[-@G"E,k3&2Ft]
%D(TLsNc`HJ$a0LJUpWbI*GU*jWRCSc)YhNZX,r39K!Q5T9&&B1_(Gu9K%1(]UpZ$=.h0"nej?%A!#QBt,O>-R)rOPm_qa&jXTa(Q
%a>)kZFj;J7X@4IQ.`^mfXG(j/J>X(3U08Q3(?__EHUD(?\lpL1(`(+lgPf=ba_L?mbUZ\1ZR!1>eKSR]JA2cJP+DhrjYK\LCJ*gM
%_.dje_)?<4=V.T8Z>?ksc4mfl$K6L+2/$hSG_"`2?RTY4`;=Y2g1?a((dTap4S>nISe_?K/<8"NMg?KMc`@]kH,t#3\7t-U?"9Fo
%ei?m(Ect.$Q<]5[&]KA[ikdkok3B=\rqjQ)lTutq*OZA<g[+.hP?p4_!?NhM6_eTI%HTVqD>ZR2d^mg$BM"u2C=(?<USPE(d/lX-
%[MU6a"h,I\b>(N"Y.6Zt>dVEB4a&=/@0dl$T#ErJH!H2>_;oA/[=kVUUMP,m>2]+EE&Ca2&]Q=>RUhY8^WU5_A]QW43G><&qD\ZG
%[&o^cJ_#!A^@9H(6JAHgcSG<rS5if+2*"kojKhUGjP7(_g,;5l4ZdL=?C>FRZ_RprZSF*Jq`+*sIV0*eDr+V(dgXr50_PQUiN0@6
%e:H:r+e;ncUH)AfOjJ:tkF?+_9>31,Js-LL-7>>&psXfqj.#_dVQY*Jdj[)DD0EJ-j(,JI7VhUMCXsnfK4u+1[//pQ7I^g;'e_DM
%Ld7,]4S*E(=b`-a7Mf]pg$)(&A!igQk&ERfTC!GD=l;<*^K0T1B@>BJXKeN=(Yj^M[QDm;99JTbF/j6'&gfd-%CPQ,4jembQ@pKr
%Cgu(;lsed90TT_qlRL<<@Cs03X/lT6JFu5YgF^8^S?i+_!`LUK%`+Q1FpjR3[MoTL0U[s&eP910=TWI*?*MGF]Z+[YBRs-`#eP-!
%f&c#C7O:](IeUOd'MRuMJaF^0E_NHGYYfb>cA6.]-.R&-<ta1u^kUd/7=MAH@#uC(BRCtb77Is3H0:6b7qJf!7n\G+A#KdZ#Kig!
%d1<N*\Rl"R"a=e-]!]YF3jun.G:He/D[<_=gmDTPJJ0]TZ.Lm1n(^fjSoJf)fNU/oiKG3QIpe97rE*R?CDVO6:q<<Z%3SoEm>=U&
%_4GI%YGD[gI,UJIE)/bBT`I*A.](`jc=FW*<0n&aa\'@]]"4?mga"DGK=TBOB,UsOF3T?/LEDrS-W]:L-Pcn4i!*U4>V&F%>>sPP
%6YRBZQa9+r[@L&UOB<hc4Brp'WlA,4``.fCFt\b)`fmhfok+21p<L=QNMBYRn)*<>T'q3F`cqMr?gN#Go592?f>N[o5_+fTYU$OL
%e%]t]<S]H`=bakT,bc[L,Z+,(dke[:fCGsF*$]L"ELLl-i3DhqXG[3=A2?TNe8qTiQgg@ZN(621F"AWY-1*R377BNHjZLJf+SN`c
%jG'+L$42groEURg#)Vda/g]V?i\2"2ZrT!!Bc!=pKYaZBJL@la6`:aF=]cM2C35#M6rlQrB^U(TF_):t)_Va+iq6l^6.-%+l/bP)
%k%so)=i?mC:"1Ptfj0\[q*r>=TB4ghC6nE-RL1O1[@.s2%uuf9HV$r05fL"Z@\P(Q&suAgHQ^'.(5b[t+sl)5<`P$a1`I];BZ`]Y
%Z;!o$Eoa%3QnMgg,V$NT.Gj.l`79i($pZGQmQ-q=>\WE+5RO684dKoF&:YWq_U&:AL*/3q09i%NcBbXA`cDid&B5_K.tSoWc)eg(
%jD.guLW7!tnOdr1=DbFL"`s)Y3jC)Qm0uEse-k5i_=,UtiAV=J!"$(886h'_^dMdD3aTLK6R2t_(`kkI"DIXgKQ"oM0Gbe,&2_Z>
%fU-N=lKh@\Ub(f5ou&P@il(3P&2Vgh@Xo7DM>8/(l!Y8k1&%&BP*`Ls,c;VkP-@&7,KONFdc`\p86$onD*HM*=GS9cO$m/'Y94/G
%kS%FP4:*Po-5";:IcD*<67E<u/3JLFg6;*k*\e1FnGuPs@P#G;3#k5++Q=Z<Z@KTbI'S`All<+Jc>'&XR(V'JW]T-#>RnJE69F!_
%.4d#$,E=<q('1+kOpVFf,'ZZ[Qc*!/2LmJh^!OLi"R`N+#810YV6im[cc=Y\8WcV?NkUr]!n(<pSm3k,:.,U:2<8t<gr&T`I70)"
%(:s\rl\33?0c)=<^jbpQGqBHTi"X(e[WOlTYLJn:NJ)J=<(L*E8QWY>B4d=6!8g<Rd:=kjN[M%h:cs;eJGiBk;Ucma4\(8OG==p5
%3Ne<aq61]OONAq`'j$!W+GNB!h^[/N@liFo8jl*Z#[M0uob:;UTJBQI978DB!;8)s]-Y2MJ@a`3e\t34ZXCG&'9RQsYq1Ag%"Qt2
%U^V)W("Ya-)9`t]bDtKA0!Nrh7MBL/1F9ck`0'H/,8.s$$&GrT+?t`Q8a\=q4+.LULcf\9\Q$1$:UE_;$hiM7")ATE@MlXD:<S5'
%7hVfI\i))X5pUJ!Da4,tP[>n-&Cq,?cKOsDlMr.^T@G&X3e+5H1h+e:`Dp8$'EV8qE.gLe<NHC88?trUH9b@;$OEVl]MoM)XM0iE
%Y.f;]!.go_+a^;A86h1&T/P6t9D&B!S:p&I.-V".nk_E`F?5a81t,;I,fhrc'lak"&3QQj4>Tqf=iDd#kk1fQ5^C(pQt\^F\=TXp
%fnuL=B1ogODKs^)ASN<YPX?[-ESj;5bQZu/,E?S5:QF]mK68E@aR6@0F&AKj)UK%Zrr<@(Mh)#)jou,lARBD'k0d)+%`jL^Q0MXA
%C<FigC#k2`TiH)3U?WQ122PCJ#eM[DZQCT.bZ)\0\06g5WYoQrA)sOJ>4!R\I\'!g4KWITi$h(8`K<lL7#34G.0A]-Xs-4=.S@cq
%P=t:4:UF^Z0mD<&-U%(?3.`cYU6<n`MD!7)[qTqoT<Kos8dJq'7rW)J'u*q6,QdA>C,KuRQq`N.%8GYt*5r!ql1?:<Kh.EG#/*H/
%Ym+du;q><n%sZE^OKfR8Pq?<V-P^]a=BErfh\%6L#Z?\r896&Q5-QWA()dAqMlSO&eWaNNMM!;,F]5HJZ2/k>78()g^r'?,hds]W
%5Eusl4_;aSjJiCZL!g4Ci>q`K-qUfp:a/>:)2:dUR%GC.*J$m6F!Tb*Z-T@`'R50[=]40@;NKFm3Hd)=<eaa"AS7BTcS@Re-s=qT
%Pu(L/MN)oin#E/5pJPJ-Gj+^oQ;WSQ)_O:&Y3].cBL<m+*lc]!F^BY`i/2)OW'$0kOKf@;S`Z&YM2#+Y[)BRS>rpBU^9ltj;Pn0G
%L7V2/^bp$SdSgao[%&SLq;Mr)Gl$>B=LTi&a&hR=GABDu1KtVj3lMX[`fP$f;0Q+b;$M;5SB89:JmoER@ORG&'GV?fNGZi[H`Ak0
%VCLjM$lpY$M/fYL_m/eP^+W[N!3D"dAhR!W%@r[C4h4m00K4H0WItruP=*61U',HEWIR)N0`+b1n=6/<Wj7El)UHg,=f.ek,iLJ=
%7[$:r5'YkIVor1!?ck8%Y'^>V$X+fJ9Uj8uV@o"E]eG'WeKRuZ+]BVa>'O@eOG2XjeUl0pJZ(AETNFUeCQb3XBULKsQr%;)oZB_V
%8qnoCI.8J\\I?dH?!%Dj`7j<$(FOOuKqXi+)p0mSDau@W.$,q+;/\;(]V1qAW*dBO?B?iX`a!5R@42Cr1(3mmR/9!'gS#!%%!2r,
%U[SEEITa<D'YmSa\6i#L;N;M^i'RlnQiL(bjN/8QDlUQ.36`W:1D*3?"+'J5!dRq%oa1sRPZQ'7#YK\>FiA_;"F#hT3Wo*i8WhAg
%EiC6f@28C!=QKaq%Nmn-K^Bp8:*s-gok]#I3LD&.FU_%(ggl'58POo9<17h>k)P719(^P*JWd5/!a>gFV]%2K!<Z)NA-FRq":jJf
%E$amOA@gjN%$2nb#e323B=6McPq^feY<ko7),M<">[d8HX<U/68lmlSj>)Bn&O"tE@;GFN![*HPN$(VJ,hWl>)!B?O<&G9D5n)5\
%5NF!c0I2MG(:pNMaIC%39O,t]Cp?2X[K4\ca+5^r/-PA+324FVLoM]n5Y1D0FJX2'l!`pZ+<g2IkKs%_F0g`K<ApS!0sY8o+;c70
%1IMrB`!Q+Aq8VG/>GDY;73$7X4.[#>KH\A):KQDAS@;TL_61D$0s<A$*(qBAFcf4*o4Qnc+g8l=:E8hN3dBt.-m6"?B7Mj7++!.,
%**'CF$hH`"3q;rpQP[iFWV)kbM3Gn:B\b8)fL)2]e#*YWq^/1c]-'CM@N&D:du%ReVM5d85R7+J*1'/k#5Qrg6_8Q'c2[nT0gN.4
%)Ot1X:ZHH2ZK<%!RtnZZHb1Yh11_EmiaMln'XQuu)S4p:`[0]'KJI/G.3XS#k9mh9'[fPI,?Ud=%KitW5(PDNR0l4[7hc,XGmFs;
%!l&h'\TI`R=+9l\C]j@M7L\;ba9c6F-#=53lRD3tSqK/"+4/YKLugN>h#s<#Aio4lm$,AV4GI,"9+f^./5+hf?p[($(9Rg&!>>bf
%a"3qO.s)=8PguHMY6Tgg0FTpi+=^t"OgmkDl=dEO6@sRjFu2$Q/c8?^kP\6N$oDK(1V$fh2io^cFI:W-]i+J$nDZg%+fWhL):09H
%Af;m:1rP,J(uTE`n`&o$.q@'"!l7eXp^oB[4E3,L7ro%o#FWpZ;K70T"f6U1Ni:kW&jg9ka4_DuYQK^#AdpIgl&^_3)Du^M?j-QO
%&6r%02ntMJW#',A(k*5qSrbWdP@*UP.PN#V*[>QBQ[pYnF^"1s>Msb$]f;>UE]e7Ubd7"240N*q6c907'KBgr1j\s1QjlW'[!kQb
%*fd<iL[GIU0SXDaG7'0W0.?CCr'K-06ST=]&M<K;H\fehf0Ei_4tHoqZ!\&K$<)a@3gJeOKoq8DD@TOVlI\KP_S@00G6Y=V/8u%#
%*NZ]C#NHJ4T^coVYI8R#>Tm]WMF^ND>:/hG&oR+C@Nmc=lEtQ@fSF$(r.mjsSRo60=bB+X>IZ_]U&F.#_ao,_;0u(KBqE+sA+<Fl
%LbqPh$A+U,ZURShnH=Yc!Hop]jAH<.G#WTnh-S,8NtSRY\LfRn`@O[JVGn71f2Deu?KrSAPX5i'-TK%!4TpTe(A#G^[#R#^<()c.
%9$[tl<r5F%*i1@'7hZ_X(Y0Xf'U#3[WZ2\Hictm"UUpo21->hOD&`\fnXV\O)1YtUg(b1\%r#Qu'I2tT>/Z:UNd\I$=?&Jof20+.
%-79nK9BiU!'S#9o,gTs<`AgnT=.!^'bg&`?\Z%W4j=V'bR/+l<EY-H'b(!ii#oFY]FIXKCUbPC_8Tj^H1Ld=eZEe?3B1tEh.uAW*
%,^"!^KX%5@^B'm'L]t/n+94BbUTUJ4G`6M5V'-5nYRSi*Vu`@Ar=LXm9fb-XFqD8QRpW28+Y:`t,:`o_;!9Du-34L_LP"sbLg#ki
%7*L)+=4\>)1\W!eb.e[$3>P?HPV\$sJWPsaG$ErBdU446N?s^3*fj1_>0#HJ.6/o[fcJiF)klLYa>11:@hlRX,4D+Y%hH)rO8VI_
%Y[3+M8M&M2.]\0(&pUu)L)@1WKT<ErCeB56'7"PuCr+GT,EZs,_`*=aHtQXXc9Pi@i=ejiN+!Qc\83>;;KR^cMK@eNfg^+a6lZ[.
%@6j5M8;L7.'9t,3=&N12>\b703:S4rK:"k-8a7Sd>bkF3D:26>*]o)^hLUuEiu5BMQ;CMhA;'Oq,Z1A?E^jR)V&Cuo0oPe!?\GCu
%)%27bo7Ua!5""B,K_?gY/Hh&S$\Qu`8e`$W3)D`iP/:>pM9*jjbosf!V,HfL!=,nHZQ]_Z+oTAo.I.!,lXKCFe'?4!$Fu!REX(TK
%H;muPGqe+n.RsSI9."UUJ!@_N/XYS'?<O)I/ki[Q5Uu^:qZRL1e82XJZfVi7Ci[bhSN4^E1D.c3XaF5O0]5h6C))?\iI1H6qSfs6
%%[+s!JM^'i\tIe%h8?#P([4Y1VimDT"0>/0$#]>Ogu1iBO9:O(X$e5dq,>#7I$Q1N1U%Gop4T"HCcQ,Nk:=o:jt&=p$"71[+c)#3
%-igi:,"\-Ne_J[VZ#QQYL<Idlr6@-A#e8]q73&6$KatI1MF63q;N4);9n<B9*Cb_b'<Ykn":a[2-k9MPOKd.PS`c$k9EIr6;=,`n
%&5&D\?#bcY2]ePXL4qr)Z+e-X=W[+KiqkVCj1mc"<)nNq-!$HSUJ_//g4boT*4^'\2ADf@M*6ki6=XWO:C@_T2jPZW?>NkcKna]F
%d/t4Gnj`<#:gkr3ZDX\WY^U#Y'4W!VU"kWd7!1+he>0`c)Ce/[TdbAU<WYsVCVb8+f[5"3W@@qmcKC`#4i+J6Om!JP`@I%Zo<aHF
%?ueK6KJn-L@E?CglYsIh2!`E*Ll00K.43b&.CcFth9&PB/JA-k92!Vd,!J>i;SlaGYW=)-3]#"4OZ$b7:.SL_M;\T:B-c&9T*1#P
%$<*qZ7#sJ&"=-U6Je]7Kj;Ghc:$7V*2W0"W/LiU>*_6pW?`'\T`.6\f";Y.?<h.=n`=#)m5^H:AF@U-Zp*nT/J4>9deb!)^MN6fS
%Mt\$p'`('$=7bNsV3D6L/?n?<=EGMY``TX"^0K<mr(%N#oUKuo84q@S:dVs+k47RP*C6[Of>/OO&_egjNFsVtUWd:Gbn2VFL($\@
%rC`*t%,$?M04$(KGDK[F,&94R5(:A1,=koi#j%ul51W74D?mnEel^&K<TaZ5Uhgoc'SZ'.:-DX`/B$7=c[_6*Y#rn2$-i`A_h*^R
%$CbM9nmFiJ)?L5/i1j7c:bIS@\YUbjS:)L\7[3ZPPJE;br%,>HG`='hb!%STh:VM[W/J1)7E%fnX)rQ"XWCO^.Y^>^XKZjlNJ=Kl
%Om&O6)!&><)J]C/+_S:q`:B^idM:mpR8ucG`Ks/Q+=Q`3,G>h";r.H?Q/k,#'`]:OI8a@k;h$c)'=\RXNEsV%Y_'n$^7!X&dm*.+
%-+"WP!YBcsh>2^_eZ`')SOm:u-2Xu4`PtC66mbP;qjig1@,$T,4l^PhnP.5fC[hpt(e3n<9Zo#er=BTq8SD778AsVK2F/L6MnD*"
%+E]5+oKmFV'QC2DJ<Me@fn*2.Z*jAD[%j<9iGoRAL8W*T>uOE*rKI@kLcE1+kAcZGS&T((5H'+o8fU+SRnE48ZM2T5%n'K0N#j9)
%.Pg.G6"ONLp[_$(5M_[B70-IqR-kh2k@s]AUD/=,I]9(WWWL4?"&uHH%&&^"+I3bJ-*+-G84YO2S`FFi^9-@0:b8d0842?L!HhZW
%/Fq?DRH2-;UTR"6+b\F'`+#M!JEZ/mls__V!8-g8JSo4SINm1PR;O[$1HBJGSt*_^Jf5h1h$O@!?P8soZqLeC0Wslk)I`eKKYk#<
%2@q)L"/Ast&mrJj%AYPml0%ks;ZKDM'[3NhOiWK!=-R9nL&_>fniSE+d2<%LjrH<?2=!$H#iVd0!LO+p'qU^4GF9'3-M]o)E?`"1
%-$42NaG.8$SthEu%(l&ir)-,cnC>Ot87Rrg+[8#M87PeJR$XFI9fk4P0s41r7Um'nLpRXF'n)\Z8@1s)]SOTR%;=>"$KJ($aE`_o
%V_>po2.$VB,<%Y.Lf""XSfU@?\rP:&-F:dUA4d/Y1@N^MR7<9m*.s84Ed_4^fS4/\Z0=irqPJE"*"D7WeUC6MFV<u+EkR5R[V&Ci
%?=UM^>$>XEK.W:MLc2M?=W>$'Y4kIJ8EK9,Gn'_?kAr`tM-*A;;cum(*6EA]S4cnNo1dc/,go@D?OJJZ3Wqgq]Rk.P,ss8I&pt;O
%c3RhNAZK5;;-+D;.BpG!c&hPIVSfXJ5V)adb1RM3R(PMp!dgn7">KS$;(\J\Q<h(;!nmO+2hGEb'4-r;7AR`L:j@X-ZWmJM`=/)o
%eXVLW`->U8G&h7%A6B>45Lj3NM/9&oVbstV9g#K(6-RS1#dgB%%Z]$]0T(q]-ps00/`Tqj>kfs8NOEDT*&q1*!l0m5)Je]&A)A\$
%p#mpFQh!Cm1DFJ/W9aZd+R6-X$]TN_`1_ogME_jt:R_1ufrKZ.;QLEBhq!oWL^@,p7ULH[]h4i[dD$UD+9riTs4V.-**.T\`A*n1
%MMtp7*0"B7hF/EO^_I%ABO;E)P_fJ\:I(&G%3qa.BfHu5=Ku'm4@RCr"Zh\fq%0>GOME=#%bF\@3-]TP''bAtDhu;-U?eV@?h%%F
%8s<&s"*Oi_mP6/OecJ"ed#H8RQ<:VGWDm?QCT`+6__Z!/d/#EFhm#Dn^;>u?=Or!s1E'ee1(GA7'U_+HEU[q7j5:M`:gP<Z+Gusg
%AZVa>DWM9bZ%9WN`#>rM>&As`%5Dm2V=Wg'7BJrtFiXYhJs\pc#Ij!(*\V$2mUEGf8<>*]#[rI[o>$=SI&hW]b*^U6O@)51+1qnh
%a;bLkVcQG8\[H;]GG,'@%<mj/8(`oP&+2.JV'IYG-(CK5T!RZt0hrXR-HA@a^sXKm#U;MA?$ISgYXM)5ZQ1#a2)TEn4NItj,;;a\
%\-+4[1:SOoX+41t2W<%um#r?cE?b7pVXa.Hk&%1sNmL(^:noL?G6PZCP]u9C-rYpJAM-_7gB$G/VTn*^=L"=E%/otVQrEdu:^V!e
%(?pK--].>EL>[nO.[>N?oj=(c&W!FFdsI]XBRW9h+,^iF)X<S8G!OqqF>'BOq&R3&4<q7[I&jpB(=)B-TV`dje*NW_6"o/3'1m.8
%NQN'\@@NE.:nI`=;n1=HK@*dm(RsT$=`IJ8:"@H.C+]mZDPiGJH#?G(EMrC(l-G8F8'BrA<-)iR^*ZHO_*O*R(DRl=a-mlbE^6uQ
%7hghRXkF,$>c8RS:TR23]J1HVZ'gCc=C$to*8$IH.q9W0#4;$U@d;1B1&JOcS)VMcNqug_NPqQEeOe]9QUE'"o:T>h[a'r1RQ)-W
%F?KRSKf'jTeQN7m.8B.^XqZ[<giGUV\/L2mVerGP23nBF=KG^"Xn&:5'XGLf(CT+a"JNPAaTobL8`]#8Z;;^`Xu^2@8AkOs?+s5E
%0KC%jV&f5omg(4:3pNcN-o(,j/9P4$Z,YE-+%Gl_,)sMCS=6R@e2.ak.1-,0.U4EE9:3+ui29bu&e^c_@/5XY8]nM>T%%?'$$62i
%A#XbX6^ZX5<Z&j#-!HsjaWB:`8^hhH]CWE+'T=^PEbNBOXoSt\E]*3K_A5CF/@s.i/LKhih>rOupprB"1miV<HkSmY1"TN<%FA2k
%48P-)<"e4q&D5&688/(B7Z-F26**O:ROe22<8^&0a@Er4R+Do5q8tL-`JCmU!L(>_Htp`"Fq"'ZJLb4)jd+iI_Ppjq<0C8>aqF$&
%Of0dgOe.8ME%4;Z\3%XB&(SbMeE^A?njkFSc4@YrXJGWm,`ZG4b)RMmXi"_0#hr?)O75]4Rct4fSP71.itbJOM%STY,_fZQWE@Mu
%-K(0t#n\J^8==ep@5<9TE>&/N:d(4PL@[48+r*Te'Qn.oE!Hd=,`]h9--qo<'8_CTB:?3;6s7qUK.oX-Uk`GBF(q:u`7?o"]F:"*
%8#J3gn)`[58\:XKAh7[HFuKhW5mftQ2_EeSM$2g^i.oLM'o:s?Y7.g42c_oD&eRB#`sW_2E7J)W&rRW#YI%b7%3^9o9ENTIdCETA
%k4/IseeY!]6sm;1I<3\,a:nr<''*l`A$cuKU%hbQf!]*#6n6=HG50M!kD.VW*_9jO7$L6\?UP)a`._G//gEi4"nImoE%>5!^:kIf
%$s468<CTJ2N8m`@BqCR.)3Vr/@VF)B,Rm(;;`t<o6,FI>W4_peLn#/o`0#nALrHGjh^Rq3d#C0aWn$pLA4?Y/$-@AV8iWaO*YH)l
%S8FXU-=.l\X[/H[)JC=_R:;J'77%_0-`>TQJSmJ,(4'A_T1DI2,\\`*)Vk!/i*HtNTAF`jig`o+2l/#.mg&[(Sk^-E4,/IB*e,"I
%8OWm`#=c3HMUg8K5oRYblY@+iL'RAf>m=5+Yq+D5_07ar!6#Ba8-MXg,U!L\Y*f#gTap'Y#-[f[-'Z64kX`9H,aQ9)o.)-\$+ca^
%S0i:AVs_TsqO/5?2RZ@DojZR(A1sa1-FMp]FljZ!I$=);<%[H_AAt^ks"MO9&+o;b7N)(R3e*aAi%b3jM)An2]92sRBu]7<bS3H7
%2$O3a"iYjr#V3hB"0Wl%h$F]#;hM33iI5)f]oq?SU]ccum)n4rcsW&4j:L@.qisI]3*G!1>]:?1W3Kj#rl0"(N6qs,B+Y!\c5T>m
%9Q\^7Qm"U*[-J+I+d[G1fRico.ulG&*UuF5/<LZ&/AF1dI/fB9o1XfEQ,l4WN)E\,$AIUo9FJWB6\a?BlK^hl3[6'"`jLS(:Q$I(
%e-3_>OB!Jr'Q.S>N$?e6>hqX*UeeM,QIV;N?cMJ+a[*jEcl'dNUg!nt^a2C=I=>TUPpYiVLr>EBKXhthh^KTr=,uT#">_Ni22kF-
%nP(>*Jn@O;-epKd"CUMH,FPr;:HTDN1CUCE7[0Y*2Nof@'Q*Q[P9_*aOJI],mjjq5DJE*X>V?Q:TBN7qg^fApd;iY^Q3V%U@iH_P
%mpp/O^57gpdOr;b6mH:t]q)gMK;7]S6A!u\9Tl3%+E^c6=bB7t6r4gF:DXBE\I&%fP%0,JEB^)pTtirsZ%JoLJ?e*#HA4EG>ZY>A
%aJFaC2b[MK2Hr3`%#.2(2;pV.#I0Y:`IdM=@[gmI%XCIF\V3^Id:_FmUe)A062M-;jNn%4Ent[?aaM5q"Sq>\(ABVJ]j1.E!j*!:
%:p.=$]SYN:B,/e"C76DW/CYA2Pjf;D=]ia!?rASAI*Yn)UI5Iq5f/<j89i$Y-rt&/WRN?3\].#PLi:':%2L9&L(3J+\2H/I[R5>n
%Z%:_Ul3g'n*f37Xm!tV=n5-&h2NZUCknT[=I@:Z)*"t8`U[oS<"M)2Y)6`$mFX;D:+Y<g6Z!sKJ\1g.s0BLG$!/-IpK\q*=mn-E=
%CO!k3PiLGprQ1Mmi?O1)c!8`0IAs+2&s_fSei!mC\Rr*R1@J0T^G)R=(h!b_"_qpe$j<]tJQFhpMrBs3>>O$;&tu!_0m\g*Qm<;g
%G*($hLfs4u#dck26P?0rA+kqJ-UUI6,e7Y!#KN7VLckFgP>e,"1ui`UlHPF)1<gEW,&kJZ`r[[]eUj(EC.c0U#fq,u8k:0sP0/TW
%5^3fVbCQ6Ifn<eU%#qZ+L1gdP-2rq0p\Y5-]`IK8:`![*LV=,d;D=Q?"0q.rdS[#USAVTYI:rCO^k]aF5CKN&L(#a<e/,ET9[q-K
%0+\-,E>g!g0OIs,4ea-7bN1F61usI,>_,!gENnEMe7+=f0aqO5EAI`X80+7ccn#jL@[>D7;1"7&;FbLd"Br6s7:R2"&fBI5o!r^o
%d$JJsQ@t^M`J3.\@DUMoDU/&+0"O@,C?7/XiZusO9u@9TQW]$4lq0VOXU,SKC-NCgjkgTuP`-M^nsp]a(e[EdVV-^c<(mRSUKa"B
%^dM[o?teRU(b!9j/qo-TdR@Z*LN4]+L(@([m[:#A5RhT(8uYa!Z<JWN.MRa%Ehg&gSVaU&"+"[_?kJ'CA+1ZlQYRDWM5/deA&^[l
%OB&RVk=jm7S$Gq[UIml2RhYNd',9@X\&KcG>+l`5@U^QiQ;rLG**k-bc!AZ;3uU]D")an#+$M3;>YDYo(j"]J.^?NASu_BtaN'0D
%?h^!SGlbjUGp]Z@pbT#R.6Jt)^nm4LmSf0U)Op*7Oun3S=2(kHUBYjBdU^6t[r*SE1ta!*S%4\Z_I?u[<4Uqd-BZPXAcWAbA:$<`
%PYI/aGu$lN6g537o6#g]Kk2Ib1kHTm=a1UDL`sDD4B(8%oe'`,iX!=4`bR!%@s%J.gFtFb4CPFL6PiU5TpGRb>Q?S&R99t^2HT-N
%9MT]EB(S74!0IfpW7=_[W'a,H\2=qE_B_E;;VB#XmhqkU2ogasE+G*`;`,H2Ra"I60F&SllZb&e8dIALP56.3IiSgM6oPfM[7f.@
%*=[i@4t_bjq#Uh`XV6kfaoUW4od5J(5XrmIiPSP^m\u+$-lh::*>/GU"'Hb_e<13!U?&R?R0?ZI\sbOSM4Wd!nW;6#;&5590a]U(
%_Z);B;qGbO0N*g]?X'A3GsIf):1G,.8Q/->-Ir8La+`$j*=NB;k[E`J"1_Cp*g#Gt#n!,A=&0:d*q!8fChc=0\3/a1D<qWP!tSLj
%*g+iWnS'>-F)kDS:n^nn^_7UBITU:)HK.\=8i9M`8mlur>T0"m5"Fk$M<GT3.e^gJ/CjeG;/J*$?U`h5*edE14CM(ah'k`&=ttBJ
%]anQ<N%76q.J:Kpd!ATnk`7Y&G)C^m\r*kcM\%-@Lh]K(9!tk<,oG5YD())jWN5LnHtf[Kk'dG2nR>57'Te]_loNe!ab2rF.rue1
%oiT>W,thIdSV"L0-u8<JH'h8g`PrI9Dg2$,:tQBrkgcA&4)ufT6>Ea`8Lg2-VYN]@'hH;_b"#)(/gSS$P:.ha=^]5ejX<iVXG":n
%!g0mU4aBrb9Ofda)d!6h5q$>(S)MJ:5\=]?`8eBH\Wa%o;SU`3'S03u$XUtXTTlDb'Sso#.PehH.3SlaDoAVc:GT5/Q*N:)N%&!/
%n1Z=OIT[Ekp*NKL%KmUOitPoQJt5VFNS$'!B82Y)b]f*?#aagBOr8qsb[P`GF/5NmB0^>E*X3DP8L6u\U_1',*Ei%PmHp<n?1q02
%!t[6oS.a71;3f>ehO4sJm,N4eiuS^N`>PN;'4eC-Psr$T=G_4O'g!#Vg=[%dee-Z4-rl,+n"^S%;.:j,g4n7/kYm$&8gU'#%Zs.$
%jQUR+L7hfg_9@qT+WYS!`<=c]6D4S$V2U$PB*QG6#YQATjeP1VI#92sZ].,8!O5%^X03sP@RX[r]AaHDM-%jHai1DNjYGp_?1dJ!
%6hNg9rtZr,0G@kXoTBl?'mVgP<KsFY;b^sIG1/dVR,T+f7EXPU-S4%<.^g`>.94Q3jQ;dAa[*3-%O(Chb'7A7W>4PgGriQaMp&p/
%Plq@,'6+6']=@Ae3\Q`YZTJ9-<D5!DW*!(e/Haq9?=k`2).CG"=Cd&IGkC&!^sh?N!-Bs;S(A<$!@9q)(1ITce4Ug]0:KY3cr&dk
%XA_72#[[d3fO^/"7FMRr($M]W2,TWq%nAL_V=1SZNB-4cj.Mn&MD>AV#!"UX5<CHc0W3CXUC_P"d:lH,1!okuh84nt%ci*X8OaY?
%8Y@`CG!Ln7N[.Z&JLLTTe0VI!EuY0_Ni@[rpJQ"n>5C7I4Ob-?%Y(ME:l0VGlWhQ`Tb.hX+0.:dWf*39%UY'>*]Sn$Wn;CFTBNF3
%eFQLh!R&i2;kD&ccWRP=IBO%g$8f&k9K^Xt$9Sj+!itFR!u+<^7gXALN)\^CgRPm"i6*"b_Ti5mE@A0=klp`*URR05?m<Grkr^da
%F:iVT-sn-;X+B*R*%g<CGnGTMR4Zf/N&?OL5gGL$cDB,Hc5CfaqaV4\Tk75+_E$oNH('YAno2;gG*_pcXOX3[FN/+V;nOB2RthoB
%=D"$9_AE&/g)P8g.E&/qEuZN:]uM,V94,(Kj]llhiebR7Nm/t,;/\n%3U.[])WJcM(aNN;QHU`1n?Ar,QsLu*F7YHGF&&AgZR$>/
%:PtgeW\!2S9g563R1ful@:A<r23h7-UUH;$-Osl[R0sX3:`C[Ja+82A8f[G)/MS#NSfNjTMR+#g<,4gd+m(b,Yb%_#R&<i"dLaW$
%=,re^J2m^_j<CU9phUF+6SD6CBQY2!Sj_j#2XGJ22Bidb'jVlY_E'32bL8joB3T=8ZgiE=;C?-[Ad&c4;jPMo/1_E)UpL^%iQW,6
%\:VmI&Jn(H>jbK!G>6",X.,JC5mCRhM$2!K-+mQ[B57T%a/RiKJ^JG5iVZ*YBF.n'/4dAJ%(7-e=JVM(QEpi(%=KO?\VLp@%2R9P
%j(a<9X=->(F$`OTEen3s)Gk<3$cGH%po,'eIC@'G:DM/nZ/qjWPbFBf=XDRm@1Fm0As019J@9>YUfh/PR[El^,-W%b\n2DT*(H.E
%o-Q#k*;:+=-tAkING@H^(K+:Z)CtX6KO^pbqEITJEZCb:A29hK,a<skK.0<VZP$2X89q#-].B^>9L[dDM"7bMS]hnW:r?!B:_(PQ
%^YJ>#6]!QMe&atb!ZEtBQmhsaTZJ@]hduc&n-^tZh13UAm9%7PBAfZ2XIMmX#71Jc'hTMbGHPA;LTulB&s=5`.C"Q*Es@23G/A4m
%FOftdifOHm(!baY"38?FC1I?C7RKmYa^O7]U5^^_4>?S9L.)S<*6&Y''RB[l8g:0S3gNpgTOt&-&NikiOlM[nBZqGl+)l0kes'Xb
%U"L#g?G_eN;4^BK$G"3::,G9D#WetFjp#(M>)-Q0K^9n8*,.`%O;\6^&2^*O`^q;.,!`b/#s_8BN$FX9E`k_m"DI;b@Ar&)&q(aT
%-LuWqHlV$6?`ubQZgsl<KKN#b8s)pk(hC29Ngo=PAaDD35N6Z`l?JC/]=^JNi?4q=[DX$iestdI!60"[Tjfp>5[lNB^iA;qIJGQD
%;;ue`!_dep"MulA_SuZk:1.2akV)ZCK,W&>7FF/:7KYRsNJEOkZ5_/8BQ@fZSFOr?1,GHjd%o,-b]p):'2+R0B"a"ZApBgo`J:7J
%EAS6iE"OgbS)Ub1KQ3YGR,r5dj'a(McOsP(6CF=c(Pb9L'uc)@D.70TM(VQ[$dm-)(Iol%NSXjl%bd*lGno#ln0#osY%[>Je-K>I
%(<7\uqlg2=B98#r*a9t:"DSXU=E36b`?hND@KhW_n\>8>(o4Z[0_6Tb\8UA8$r@r:CaHPhH/^AoX"b5I:>A2lN[r]f+\/Oo>*c[b
%MJ9(Y')1X+Q"YR1*BkL(P-IEEZ0s2Z\VLh&EBrmb8eLf6!if[]K,E[H'4loCUol[%FEgRR"G3>FCH,P+W'u7[c4aNO'>u,Zj!ahE
%8)8u4I(3eYk4EU_4_,<LNn$A`Nj?PC5qM0^E+c<^%Ykh^*l3S@T0uOkM[^2!kZ9ME,VLtcf5c]cT$[HW:?9W<7t>,11-AS*:72rj
%WcQT"_g2+#ET-[M:>@)K]r(o"()G2-^/n]rU\LeI`!`Yc2%*SeGU1E*3@W_j8t^,R24X/89c\uf9p;@lk5r3=:p%I?RHi7e&Y9@;
%Li=k$KQ,6a`u74Q)3uR43)Ukc;PXI,Nh[BU9,Te#6gLWh*2/#F1V>D:$m&Z(%tU)-_(io3Wk42pG6lOer>Z>39.sZa\N(`O]SAID
%CjWmV5u3=SE+&1n9&d'sE6fZI95nhif]b%DD"*YrDE)(Wi)lQ`J)U_P*;TbW!(mH>pn`P]?9j?9idH!.HDMp?6\Pl1`*b4'h%C)6
%$bBLu\>TlMa-;e(O\cB?AI\pbo5Z_fdZGupi;,2Egf(;,V1ST9A8PEs3#4:VLFP'q&`aR=/Ibk0&LXN]'$3KK27f^h"=GHQdKibX
%G*hPZb6*NM&M,4J3'PRt7HHk=!.kM$NAHZhj%q=<,o/J)a[g3?&6m&jqF(2',Y@QP@rJ(M!k2(F!Cm+p1U%;mSBo:dN_mLtOn%HO
%!q'iQQ=YTA"YItF"?<3)3JINoW!OhHEWA'[TFj&,(+;5["j>9-rD^kd(B2Q44mJ[Dp30o]M@B>##pVPq)5&q89oRpWJ\Q1i0m-JF
%N?%&*)PjGLPc3KM<2&2XWo5.Vq>H:"T'PZDQkW_+A:@0WVDu_dhi.A@6DIt<1ZFOr!Cc'.jt9@9(AWr5!e*%)@c1&2KN'4G;sG.&
%h(mQpe,mBj-L6EV&`>SP)ef_7.jM"pUVLgISg[^p.H'f-M7'b,Do?gVMph[@-()h>9)L#&K;l>7pru'$g+Np*RfFc2q+JYEMM;#1
%`,EAf3!s`d2a_KH$7m@8).jQYM+)kL_M3dtKD]<p="3A;L`_ceBUUj#Dar\H@:55TL`d=pA-r(V0RdFi/+VF@OdW0`MYtHo'i]/Z
%q9ADGg0tN^)\URE/G!(Z<(]5*<0_R%cB^nJ,C2s%RKiT488-_f9?;%+ajH>gOP_UK68Pbg^FA*.0-S(V^b3cdh\>"mB8PN-0W248
%r'n/Ka_d-sLe&<q]0Um%S4`^r7H?CC2OeF",^#Qp`)!ARD\tN%`<tAd!1;k]/2k<41mBCpbPOaP7O\pQi-hMsano,s2d=6]mMd68
%k%]bHSL3J&/*rbf4PH/3ll/)rlrk;#NP$ZLegKcFFd7Jl:u>e/91k?NIDbJ&oeMg(NVFJbs&R?&"*Qd]C$1_!e:a0'TaLUM5VT4\
%pr7H-@_d''2_9QDeZFLC=reK;@0kaA-r5&!M=Ac-H]C'a`$a\\YqSiG7XB"f`"Q^tGH*+-QLE'Bmcn^6I?G?-KtX%p]cm#*#FoUK
%I#]&9"msROo8WfB/_Sli*/1G,$`Q=#E4#o;/c1LXcHO\m!p&s\OtE`m&RCOALC(0gr!BP&-+5bNRPV*_Db<jca0<6+0N@P3m7f;K
%[1(fZ?P+Q<j:*-$%^e-].'pTqgh(ArAU?506djmep']<a3IOM=D^LW$<nkF'OdI<]1^!L7;j'8m,2CofE'QHmiSL[&:5cl<HS_S;
%;>O#tpL\H*jamU&9aQeP#4>3B']CU[]btB3+]_50Al5O(ZVDg("S@[EF"DCF[m])9K<KN<2C&XPi4ZBs8L=0FhOFA&'ZF%aG93Jo
%nD960#1B(&]ce0Q7.K+Jci@hMhNUPKZ6J.pG!>'6.c"=O\7bl+&<^G6if[@EI.M$jO;:4YG)9tbiWd9YJOJ]17DcNi3L?$#bn$"#
%?Qjea+S@cfKPso1@=X%TI*:J7RGW%Xp>_[!T+epbOXu^s_*mj_I+8H1igXSO7%"?AigTu5;Be@<hi(^)8YV#Z8n9go);c,a7`7!p
%,rNJ:Q9q8-2haR4);gS_+<N"eEi:Rh<Yln<gBRG>&`;(]=V0@2^@Bu(3mo.b`AVb$n4a"AU`h8JS&Q'.J;3SGk)r8T.$jDjk2gBC
%nZCB.,\MMR6B`6+9)bqq:IV0;N,P_Tibg]Q?>RF7+MMiOOOtAepgg[mABGPT9f/HBV7CZc2sndda?pQs(ia)3(rEa$R[VDg_DbE8
%(`d,mh^fiuiCur>VY]bl_%FPnCEj]*iEIQfhtu/L6fC^iFkJK0%[QPm?R1&T#4Lpl,iT)19!gn")+iX7n\$A`kd0innI6+>DZJ[V
%8/-LZn-uWjCb+D4!qB#8i*.K!\.o&%peKBh1OO+c8EkXYG]1)*%7i4oHda.\N%MsA:*YbV1t6EEI)ZP\e%K8KpkMifR<$i4m2[@p
%?L>Heg)Ep[dG*H#+:t?2K"VaLSqpr/57t+&/#14Ol5c:7>gk52e:Ue2H:M.<h'0OB<uklWe;]@Qgji!^DrS"M+IBCtH74@6`-GQQ
%M<:@%($;(NVJd@.^h65*>7os;LMDINc$\IW=d$6/PX+*9<&i`SUg^Y8ise<[iHcf-\)j%tLc::JoL9^Q2[!%5Y__egFU#`XP>l"c
%N"!K`EHLQ6pt`3S\Rt?e!9?[n8]>lU"s_pM,/'JaB!qWc6=UVQL><l^K"3Fq]-0g)J<-WT#Qej3:I2&fm1QihG)UWJWSOg[`Nmj.
%#adYW@Wk8AYZPKrCokiW1!&e8bi/]0gJ[DIYo@(5\u?.C)^&2i1q,_a8pugW:&rlPXArujR6\QM-!GNRMB?#)h(\^]gq]SoV:-V:
%q'.1Qc@ELbJsQg]b3=rZUg(i\Z^>tUjHT('%W7T[*>nup$.7#0$?ABjShm^''[McrI8u*@_F4N)12u[&E0(Nu]C7O8R6*/V=p*oI
%NVgjp\F%^@_K(9<.4NS8ji13^((o>Y.B?T\E[QtRhV2YA1AD<@)f^\-K!m7mS*86FaEcPP7/A<gj%`:49*rY0(]q4@E?i/LmQgs8
%#'HG9>`1#uPZDii-ZS1b9t-UD\F&`2%X0O*$o`DkVH,QQfb.ZfM'WFOC7%tT_2[KR/-L^Dm4sc1Wu^=2DM[ED@gmYl'-cVhHM_]j
%;RUaT$Q>^@7"?-X2^C,!-ObWsD)h1r$uYF:Z?I,iG8_%Q?i\tA%rl-EptJpfM/0BkD;H#"Z,(>lLQE?VG+Lu%/X&=Vr,)!9&k/3]
%"\RBGF>*0nq,3V'UASj<N_g>F&tnW,4D("rc*F(@(LgF#B#k-N!SlRI9M8EUqN1bq=rp6O.fm./AdF+lE/R$1pN#1M%?47$Ukms+
%.?":%#/Q:cXP]]WDP/aF>Y5-:49J0k1^*7E>\j]$1=HoiAd]A^edYZN9AFlc8Q-)#@5Lm$,qL!)"a"5\g^m"EK->1ibuRG`'FERY
%WJ&h?!]Pk-E3]n()p4hl_Nbtn\`.BAg`3LERRCg,7!ur47*?J'"gKhm=UU\t#/fAR6iu+8$uW@,(aET/gb.jT8g'41o`u/lZ;Y4O
%@gHk_LbcIX==C/cb2C9dQ5&a"K,Zgt`2OUW2fdLQJZjppWE+9o"1Sp[B.=/UZiL&o98_\HA&.S];rV`EE5^;^n@**k'"W^u,*[bL
%/6bXdUKB$81F/5-`nYUPhr^8O&nI6e[qQ:_3gRU#j3?&uB^shk@Sl:mqDPX:KT<2(m3J!MZXn&2bD8)a6uSh5OJ'7O]T!J!Z47:f
%4#TZm-15prl-a:MgTelq2Uq-H9ViqU)^hC[&_j\"`!R_IaDF`^W?@F]gMpnO*"(J]A'H?%gbo.L[/C\PgSc".Q.sZo)>?F5K#4r@
%2/njagH_R^/8%f6Og!<%'XUT3=tEh;3G4gMY8lM@ZYT=U%S&n>NdObfW!M(:9[^;i8S>Q-ngp.fMN.h"^a=*?2I\'Oc"IC;E#3P0
%)8J/OG>qd>Hu1hTM7#6dD4h_ZEAM_(^gu\qi7a"ZML?.5Ld4D(8/einM&*&s<&LAr#YlRJ^jrgq!m^CYXu=AI%#-6?[?7RB#7RGD
%LS6U^:i.2RR"/=KC.$/8Md^?FegaW-2@n`%`Y*Z1&ZLaQK_5NX;*,1C#J"fEV#H[)g-!ZCL7qQdHg!.GD1oZC2_X-sd0kDqTkT9R
%?9XrB%J%^GKO0=GLU#,e_pT%>k%7HD\0GA.RCR)SHOb+3$qVBW<Et>U%21=2;Sm*7mh]bk;RCFfK%s1Y2PRJi2_?hm;fg;A%.,l.
%72co7SOVng/eYN'+tZC,$IDNmrHcB-(7:s2,^K$gPkJ""G,c#XbKbjXHs;WVVMBj1$\Q__4qLB47VE]C.OB%W&t>U5b0<Zj!7bJ`
%;e(&*;R>?BOWbEA-\+KAQnW@uTG[3+U1R=TBQt!FF3-#bE'`#6"!tmMW7_`[Ua?pn2Q9qB66omT(;D:aZO7kRctl5UQ"?WAY,_kZ
%ASALlS^K?MB%$k-#[.>T(*J9"`"gE)5\jn`We"d2lc_N<5dS4*3-2FbGD9_->(Wj"bYD([<`ilj\-#D61;n"m)6P0joCsa/KBTa!
%]PIj!UK_`k\;jn$&hTT0`'M\k:(?[G&?s,m=^Yn.#Y2f^;hRk,?oa'k2Pf\k"0Y8<k2Coc)hsU%K,rt[$n7YM<DBsIC"K_l$9_W[
%ft9<oW#4^k;e6CZ]eiWS1?4QHOIW6$jL'6$E`;%01PnQ+cBOO;Y/eaA;bjcdPW7@+;TLSIPDs;!q@/aS%4s,mFIaU')e(6.D)g41
%0L4<CZDkG,9pIuseE]527rK]8(R"A;Qu"\=Rk%pQH#GNF)bd\U9@4SM2A9K.,Sr2gPQk<06^W%YaGqU7Cp&Oe_C8p!WKhduPMjW0
%`0GFgMog]AZ8,%>Cn@S:=&DZ"bH*s9U6XguYbj*QUP-bO)4RnfL6IU<0f*/F-<hJ7IW,FR9nNiT-jGm[1R:uE;+rkKFb.Q:(@:sj
%#m<2SC]`l7D9#`E)%'RSPKg<Jg><U.9nBKECg%-jV80[#Qu"`Yoee-E)c8+`bfaD"d70^2$'S*EARr4L\mA=CdAI2)Q)\u)"N`"5
%N*/TX@2N`CJY?W7oI7\V7*2;lRi"mfabF7S3f0P@_]BtU[Lslj85`$L;mI:U-rX"mfp"1!TL?nfR*[8'.G9:h,GdgXft::)c&.a%
%g>rc$4_6UfX/@72al[SB5k%37[KM2Z8P[B>%noSK.G:qd#uRK(abEd0;]saMUWL1u,b#DbRnAcYLkWRAODM@h#GR;rI^lF96ukgV
%:Ig#N0aLZA<CWTIZ?&;<P$JVL,TC)6Q5d`UVCbDl$]:$^*&pA/Zjf/]S/Fe>/gqpLXjdofGp\b8![VC3Z!/Pcdj%UcK-=ch)8MmL
%6cc,Pe'q"3"$\50<IL*S!3T!:[tKi;J#)nj-4NO#^:k:-DMIHD1Os;MiR,1=aHfB_`6AVAC,SY(68i[ga\b;]af:A6l;>(VR3Fr7
%!4"U&9t3KoS5GsEM#h-S')<HX+N2tf&FHM,aJR4=j9>_-VF5Sf!G#+OE=bQ*2W"R!km!8E+$>2C$mHX&"j(^8+gOZSdh3Wg&L0On
%P3S3&aMnQ8V=.$0Cdt%AVEP49"fOuOpfBd?bqQlt*C44'9YS,-A5g?hAJj*b0Z^Q<aQ=j*L<)'SBoS6;o[It_;jtjfCoY=CedPEn
%S)TDY,b#:&0K/S_luHXU#*R4?0TCZ(P0F5e(u6qn)e'\+L6<"&KQe;+2VTp%X$k(,R'4_1Z3>Ii7l_lbOcWJOV3q5%#Yue=)bN$J
%N4@;<8iD)b<.IW+CmrHP.57!&AiMT(d_N&[F0PRJR?GgiQWoQK-=k&&;lu^GaNgW>s$CiRTb8dsqjX@r%le\#aZEo@[,Z/DkAteo
%/05b6gJ?mY$QV=W>'+=8G,0q!bJoRl4DiKuM6\bVAF)_/O-X^dWVngp4#'+,"NF2MlmlBh,\'Kd:,K#K%)k^4*(.0!M9YQ'H3T4c
%#T$[a913TK-al9V`1:nQ1R)TL1PAC`C^:].A4q')86A@dL.uSel5sGCH^Zg&=kF:id$d7/1O26Fn2ZVkN,bA="GMgB-unMfmP-R(
%kopBPM&JeX)@j2A;HXF:D[M>f.+eh$U.*d$YSm3U,WPrGaJuTU_"L-jG:NXH2l3)TrgI^WFiie<CH0DS9;_2oUd'M>aen=L=7Acf
%I17@iLk^<ERrCdu^4pD3<gkf<)Hf>&(c+*Zpc-1oWe1W"2F9GX6E^KDg,.#h=q9"@7p[DqL#2,.nJ_BOWp9k6NHgj^NrTTAMDY77
%N4Y)i6`F&=26N]/hS?;aaYa!^=P'7dgf`-LBM,]OdWMK-=daAkC5Bm)6..V7DWl=Ec8?U%Z2?cBF*UN%A5;)#*@q040Wnn]Eq)eU
%CE+?X'6Ao='.\[YnuZmL$fR?>f!+4k7oS[':a*p12fNQN#YH^FO_p'f8"0<@VCeQW68@KK%#3sOg9XF[CWW+T-7mc;;%;f&U,+\?
%r'qW>*LT5JL1tLm!=!6Y.9rZBZtA\FI[U>?o;$9c=o4X1>fKnOL>?QWemL#WlY0bXTqA**/^'UL)BO-VA.Y38G_T`LRK2+Ua;RsK
%1hu,S'5,5CO(,3\D6-'%_H7&3IpskX;!XpQW&dB3<_qiHQ8>W$5bYsH+KWBeik.&MCL:S*aoH57ep:;E23LjjFfP4O,39M)S^XVk
%m`E8FrRgIrl6:n3ADIm0RR9mRgUQR"o>gWJ"0T*%p(FhQfl`I1W<l/1Vn86kX$-6rPe(/%18Pa?_lSTf37MP<qCrUfC'e#07?YGo
%H.<J15_@po4]>Ch7'"Ut!G5U!Yj+KYSVC,bEi#%s`uJ+(!ZFOcbn?KNF+=_!)?\bng2mh)%[$JJ"F7!nf$g!B8hnl#=ucr"c7.9m
%IC&?pKiA:\1YsmeA''`oJuHu'e5Sg/"B"ROenk]C)EM*b;^X\`W>+*UKG"X3R_H@d9P/Dgg(QBk/8cpLj+L>YH5JJXC1E\sJu4j,
%[@Bo2Rq`WEVY3^&j>*&_P/NM'9<AelQ:am/KB-ncT[\(nQrHd"UD48SM:<@aY(AEL+>m'W;WVAL7ub?ek89UD>S?-lPgcRZeZ]I@
%g,#1L@8Sh[?^G5[U.4QX,\a2VWc0BGn?a0MADSaD]8303W-(J$%V^!'EsOYLAPD)86)Z*X-2)Bc2=.^'=YIoHe;R.FN5UHd1&09U
%AB"`t6(hq5I"C0imGIqSJ@.BqkAiq`%MGmGC*;"1&n`*3TkAt1M[4&7-%%"k;BH-&KL&-55Y[\=TE:T!!-j<aT+3DH6n#R"4rnt7
%<\1PS6PKHlk\9gB)8g41dr:aJXEtOA*JR0W;L:Pn@&XYc:`?14NL/%%V\@[l]gYJpD\2*Yl-pHC7%$%E.?d1/E]Q'X>7>Kils4Ii
%C\Og/>Hbk;,:uUuK\?iaTPLb7RnaTu\8>?s(9D<XdQi1V-S:IX@n626,=NG+rITb[D$;60[#nP7FKA][Kh!@QR>:#>A/]I,@O+ic
%i[RQ$&C^HY7DcEo>/2ujfP-H=V.5-l.H.*8Cb>9*V+\k&3n"OD)M1@Ka9>l#e<Mt/l.EpR)3Aq[W`QSrQ3QNq0W?eZ'3!Z%E2>:I
%/2c*iV3=a+E.aFQ^b9)lBeagm5c#,]bu1E\U?1AC;VKX"0*.mM`Y?J(ntZk/9$aEpU_-AE-X!08>=P$38J?YHT:E3_':l[FPVb/(
%>fF7BA4!8LCIlkbG\XM06.2!,ZSEM7n?Wu!U)<.E=.QTaO\Uhb1nib;fH%Ra7%.87h@YDtQtWk#)1j]^$RA/0!RcA(:3)"0SJ^q"
%_+1DL1:-Udk"ZO:?%>Eq1u+h#EDL;5K;2@P_NE$sBZr]<%iT8+C/TTk27i9;3AW]N*b'b\:=MF=q9W_b-j-4V`[a_tj[FgS(<$Fc
%F<'Kg>J`g!L>6U@n>OgKDICj#Y"sWoXD%C5*3El`o*KkiPpi1oTSV`t(I?GfNgW:V@8f5Hm]`'lpt8!9CRBl!7;?):OQadHfbm8d
%'pK9W\Prm_OV4H@Ql(Tg=#%WR+;uO:83YT,%2-8]$Bo4!TS\P;3&E$h639tA1lb7]&QLYE%TAsG":U7lRHm@'(E2Hp_iNr]$T-_6
%9SEs6HGi.D6#m=M*!mW):jITtNBf%(4q/'lk<$r]@gY33Z@6fs#>P0A%<EGpS;F!\#0g(fllBM#j+NsQ>aeG.!^RtX$9HNndkV4J
%YV("cS1_f#B0"=/<MH>YY&k*e"+>'uF8#D[fmaeZq4C^A>P^o*KFiNWhJ'0)2qlUGF`pgIMiF:o>7,lUhu>i(i87d0rj_si_>Rsr
%ql'Pnhn8n*pHAQEg!f,TXTj8-GNk>Vh3s`,F2-8Nr]$D'@(3[dfPgE7WU.`KlUT]GmP\9Rh1e$bDdr]C]:]*8s6BW,d,6!Y1-PSV
%iFN]BrEaC_C9-/[F(_t36G%Dh?^bPM?lIl=lL+Sth!4?/k`*"i<+e62T,X9u`Qhn=/%a'FcC\bDCmtOoFh?>q<Tmehoq6WAnEA=f
%lX74$aZ[7_c)h>d6DHhhVTS-"X$Rp-)X]5J1_P^Pps]4]epS%_Rb0jkDB-)'mENZ(:I;3Fo3p8^+'=<DmRjt94)@o"jA!OCNR0[5
%4M*Zooj6[-\+/Q6H]_=*gl_;_lC<'Ace=0OX.0(amu8f4I'N47qUFr7pRD-+PIB75f6V9-WnFE%[o2OLMp4gVE)5f9g&#[IeQIf"
%iPnZC%g.)Gc1]gDVfU5Kf))"UKf>2S*RpH\mi6L0)\9OQKAG[%"jQ&&rg,I"p9:aZc1X`p8%B_u^urm=BE+XRC\Ff'QQL;ce:5fY
%JbeEIp;F*';/QZO1Hrqjj&%EG+6CL4\RASR\%D<,q/&:`1je9#gp*Cfr*ca[h.K.%EYXnVnQBaWQ5cIX`b2hl].lLmrFaGs_8SIY
%<U.kcSE7%Tc=5i.7VdF]^=E&>6Fa.0]aJf5WRcoaIGU*WP)&N7YYS<HT6pO=ji6a`%3;F@AJUaGWa?^I_io8DIs?VcU_`HmIb<sD
%lg;ZTHT0`+F+rS]<FlWp)X\j5<g=tMld'"3*^d\gFgec+NW(B5@>*h?.f2,eZb-HA(t!`#SQ;Y8o8h^kcRkuAk-%f#gRttoe<m9J
%(XY>2DV$fdl^RQ^*@`og0+%ZW)ngmDk3Cnso4A]][hVY&kk&;ahHfERHi89&9!>tBA75@WWcrFDc\#!)ENTf6Q]1-Z,<L!Ys#^)q
%IBE!8^(0Z!kZ7#hYTJG69"k#6BAal.A#sgAmJbRL(9ST@mP`X=W]jFr@3h,0$g//$]TWi=:2islc$=[<_u41:mEBW80?:<!!#;qr
%]p"\kilaT^5n0qGI5o=K;X-V'e-beRPrZQ;^aWTd%t9d-pk.m"^"_oBmPjuB*6KM61L;nNq)NWpU#-enc2Ln[H/]-M]K)#7+o"0c
%hXet#6,(]YNUBOD:N@_gSa$mU@_RmFH5GTiT5g+AZ/'CQ:mB:U-=^PbdqLCW)i_$9]O8W!aAckC%D<Lc66@h'*0WHc+V2.gheF35
%R;/VXTO-h_ZW43gA0/R.k!]S6X3cWan]=gW+6QbI#HIH?\d,j<<bJ>IP!+K=ORY(aoZPlU=M-7a5%'YoR.92/n*&19+<IshT%1&@
%mgB&[d@&nL3F?B['7>J.?n8pF@@nAQ0Y;h0MS_>&F5<girf1Z0It^GZEGiPbm:^D;d*A^ifm#t+:iK<K89'/[9huUF?G].`7Ou`B
%i=E*DW%b;BB'ZPHRA'Ap]WC&2=PBmdgPsd1UXe"uAi';WP!SbZTn9?0r;HNdOob#0bK\m0X1m9>Dm]Dfl3AQEjZ!q9T8@K8FA"ii
%rD*/u'tqXE*9ot'fQX7lHM2=n]^MV8]W5F=)kB.W4(B<:\]-3E)>Mm!6Z'?b[n?*ufVa%\AC?V$I8hm9N6\N.d$a>cl\B>cD-)[_
%g2=?&eO%)UK6s:,VGs6^p<0)7")%>p8GaQ:>.2&6r@0IYbm)^ZDM+s6L%hs^ea,5EYOm]gdm<Z,_NN@9<)N'EKBkn:e#r7F;![K;
%PW4QKM^^J(<4D.p5O*`hFP&&2?i>;[iW^_]#<(9cFD%W]_b+)AWZ/'P]2>bnEO&_cD*I8b8K9-8*E8r,$L_R/(&"YPMPT&n:DWVH
%F2-.6^[\)ehu\G^As73[b"s))2D7rR8sR\\MYU_7,>fr(L1-\k(GHJ5o3t._>i:cr<>]<-=;:/W:rK)-R9QGloo+,H8d3ac6t0"G
%`(!pEAdj/?b2u-M7B+_'E@f6l(?OH+D(]?MMYeKO7B*YM%/]I7TjgkW02a>nQ-P>G7Qp%A.$`Z.YYXqM)N1nHO^_1fFCnKarV,s4
%N+,ITV0@3F<F_-ZEjXeNPp3l\Ddr@s'Vk7DIct&Gnd[8d^Mr/ZVe%Vl5(.&Od4"Ei<@iT/da,^[ANp<V4j\oUI$C&h\osZf/K1g.
%'ct29>oTt_j)o2af!Uc\-5ik"(JA%Li2)H8[IL9jhd4jQb1_PIf#FcEGZFW:YA-Led&-p>[tj@5<-SQGe0R1S%`%Tk3r_$oa4%!(
%,8a4OnMD_TRF%?-.mtUSVdEI381_+gPW&6-WU[@Hr3OdSCXrI]1k;+:@2mDG`d[)=0#jj+>FOr]`ce\:EoG8@=P#j6hI!ER2CPpQ
%<7fE!9L^*rF"q)U@h?e]J5G#N[#GY?U%Ai1692Y.@hQq7`n?#lbB##c0`/=8Oo><^m-!`M\$A4lr0SIj_4<j:6[Tb0e`^Jmo_TF7
%\q>jcX]/t]A:jTWFm$LV`]p+0`<GkD<#f8_^7(VIFYs"fnt#`3:+n]?Xra1A:Ar*'Clf%@P3LdnXo]>sI=!?pP):mpN<Z7G=6ROn
%5,D.!JcVms(&Ca<U@/P1Slb0o8`<dJ5554BrHFb0h>KgXb0i@L]Ar]&i=X`h/"^3=C6/9YnAPd?8WKMiigfI\A:fBPR=8ZGn(@Y%
%SGqCHJ-UjH/<BbEA,l#Ms#]rST!MX2s6n>2J&dg.L>2`$m1CCIcad%QP8sIILX]cgjS#4NcZeaI*W(61XU%m&".J!!LV:]*Vk#7g
%m4)W4Rk"]?k#@m2lP2_SV:L:aeR+;:X7OBb?#)<AG5GEpfhGjC/+i8n"U!3l.P0\:h<jP/<V=%jRh,>K2s`W.:@ARt.95f`fKs1%
%1h-pH5gR+YQM.SOm+AJ#c"(<?=]PE?>VL>;-MuCOqHH&;7\bA^dh3V/ZG!<Le%,-uZdW[]Dfm"'[lW>kqaA3mfR>`7eKLo"cE)M4
%mN;-u.V;ac_bJ<?NP_V\G8dUM[u0mc6JDO1BpP5F6p-1S1sjm>AN=Ed<V:2SLOHTJ?!uE>4#T82[IKr7d+HPVh<kfs*#Oc%[_eul
%StEn3qs>[s4g"?o=8k>':.XR5@"-5Mn1lo7N"%FM_op^%1,ce(%525/bF(F,bUd4J;(E(B04VoC&>)5.L6qKK?3[;T?(<mHTeR[l
%l[`]E/P$Zf1iY.C`6auU/m9Uh%lY@8Eb-/+fL-H>^_esa*.8ZIfL1ugN+!A%h,Abnq26DW(``PRZ.83EeXIr?gW,fD&2._Wc#G_-
%P[WGha!@N*hAiRL^dGjiT(=3i14/&K^iZge9]pZ(A,=W@^,2csqOc^\XmaiM3e**He6KA^r!LrQEE<(cW!"?;c<d2@jApt,V/.ue
%TiIp"-g_#455[G-dpqTCYKlibYL1C,kVfk!0$0kHk?$?Ws5FpSn%@J7Go.C,2fhiSAWKW#([ct=qTe3/8*Fic>3(c^32dkD%B=O5
%O60K>a?"/sYjM<PG'a/5Lu3dUB%@DA%)=>RquBalC7V;t`;_j+@gp=J+<&uh7d*N%nofuQ!n]6-oO2RV(tt2AW6P.C*Fip+(q)@Z
%[UY9`(aEM1q!X`<qt3PnA/F(J]_S*c?NsFXVH_sEf3?Q_bpp!NEo!-(Z6);upJShb1GW2SB<D=1AY\*th![/8*&cN?<=UlVg(13%
%<L>r:_u8,%JGrk(0>,q^:n;?Ff)*_kk"3SKP.:\^?8YrPqGq>obZ!i%0Df8+:o.`Ei1QbnMrNrAL+;R$gYL/(Q(c92KBgRt,UPNm
%(!>h64&qNFc6,'R1&#B=\5-W$dn0Ke@@ma:r&G9GkXQM>?6+2J%U7W#31<=Q$V*F\UfJ#<-/f(q:BkO54^XB(fMGc5fRL.-^++8<
%*:RO#]0g#FcF:Sb-Y7.U;UAL1+ZSO+?WF[VYlh`:B;oI;Ar0$5/sIsE\[]ZS$Gf2A>J0[sW%EI[qW[c+2dC"+C2;]$1cLfT1-WsB
%:NPRFgdOEO<RB+4Vn(dM_Sn^`?,4O]$[82C5`-E+j'7;0NK8/@j4sDh2a5NHO)s@A>^lYY0@k-G;Kp.$\`#Tp^$TpMG.R>rS&s$L
%j_!<VE13iYM2QeR]4_?b.\%'i5_d)s;Ca*@O%:.uOlo>qq3YZp`!CB0#2$JEZZpm?5fR2jdB-*=QBLPm2d5n!]iu-ol5\;4S,L*>
%<jIGQqL>oQ=K/^aTZ19Vb46c5O"0j9<2S&k%(q^m72O7\=`n7\`,0T!C?Ji8m@Zu1k0h4PgIAe]?3R!YQ>KmlZrt_easl<5'n[ED
%Pq,\5Dq6G<3Mk;ZlI?ugQ'1lG>4-e3ZmEK>\YBrLWdbcCH$Y8%mJ:Fil>%n/+!4nj;)]tkE?1HqWHr",$P#4;r<dVLrjB:d=NPi#
%>7Tr;7MTl0NE5aW7<<[Hm@_&/7="r-Sfadm/N9XR4K[aO^@<FdKT!WEh#p5GRi?,IA'JD3CX]g$foD#7:uMso3e!)Fd^PPOXFCsC
%8TV?kIi`^cNH94r^LXD[NKp4[W"b56U@3OUlT0ek=t.%%-N%r9M]Zu9i<R@O&-(B%[=Su,hUoMc;Oc[h5bgUSY6pcnhFW1p;BLML
%mR*7b^,NiA?DS/[@>7C&n-@R#HFMSbh/?7ZqiB5:H-l\;WuJ!mIt)8lqePleM+>YWjuC9eg3@ZY%OG]=2odCr(iPF%^AnfC^3Iqe
%n9AjkrOm1b/]cs]K>X_]r0Xm2FPb%K]o/!m&JqJNpB;fTSV]uW73D+i`lsHY^5]rs!uZ:rNrF+T:KDN0)s!&[?Ckjj$;9F+DdE85
%m,KSb:.A^AHB;Fg4!c.hUec09:A<FU05J(aM2S5">u\b_O3`V$j;](`7`K6Jol]IA)7(-1P4@S69EXP)lG&Po436)>_N9T^(L)(n
%7I<FeSIoh(^m0FF^%u/Nl3lQ!)1cufoJ=Rj;JLP(p$(IoWfTq7C9qU7($^^a%q2QQgMV-%2nK1!Igk'NmajCt]\S](Dg<!2D#EYh
%S#WpH;X4@e-MJ&*RkI9P)7`:jCbD;u-8,-KHS?LQK-"Xm`F$h)#9"T!,7[V'?Zk]%hKG/V$:?f80:_:eHtqB^CRsY6!>u3]L\,>c
%Re58)EST;WaP0%^2*U!sh=3N9Z2?="Q9XRCc<1;7o"lX'q6\T,ZGhnR$R,B=][L315)"rh=d:WuG+.gX?iKeLcO]f[7/jXG3m@T:
%aq?_f%4uC=2B!6eh8A+;`3Xd%^=2:@XEM(YHT^VT'CsbOHE5TOOUX[I^?TfDo+U*$6%<e3I]M=t^H+*I[ufEhq$):5B25r]giIp?
%<uL<<B)a!F.HUTo5MuKY;u,07\%`F4G;#G(:YM@(gADDDDJ#U8=0G^*oO'g$)UG`u+EK;BEIMiY7e9mM&)1<6<NMUbh0QCj+\hCj
%fKptJ[EX]k03dns2ttV-CpDi4DO.HiG4liP?f^aDenS8*h`.o\AtA8[?T'f(fc]#.?_sIiYn1^Em]ZZhT/6!sqrr/Kqd[Kc-D!s0
%o$NlXqHrs:QhY(ah^s4>B$*M"pLXc)AZ&E!jd8OOo5"#:s4DcPFkU&Tc2L:?3rNO[p5J0ZHN3L9H1+h@O*od'3j:KHQ7^LDDYpGg
%i"^n6IW=Q1.$-[_V_E8l\\Rg#M:p6Or&MejrJqTsGY7.DT^L24C2],n1[EV$2NK1s?M>?g^GjlI>?g98bhrFl3HMq',XF9GbW/P[
%V_3E(@lM70cUFOk-J<k^2iJBV8^bCsPDOMV!Budt+44PudGF^ic\S4_2^VIsGPOb!g5YHfPs64WLU\5tUFFrAFCf6#%35E0Rl?r]
%mC[6\[teUMqjZL:?We4qaDgd#b]*JdlhblE'&Ru>q^:k3H`l>&3?nI'Mm!(pCOP15r;-EPZgjbO??F5GmbcAF]c_LX!/b?X-4s8&
%`6U83WgIe':rZHdIFjO.r"(qu112-oJdeW:e#2f>g2V1V0j&hp]_>rX]P<L/mI@4T2cacSEW">(HCV+WM4"(DjZ8Bk(a]8::')Ng
%JdC[d3*rc.bOsb!Y*WM`4PnmVgl>a&/K<a3HG!M_S`Mm>P8'In)nQDWD9%]#LSJ>(NKVA@WGACArg#TZiWS9fHb<nhm3VX$n0hTM
%?L647#3."V]O[(im(]f94'ptp!HmW`o!(G-;&D>K([]^)g-5Lk<cl?@([^aerHB(FT0'5WU<[N#hqT/(g>bVK]P.>)76=2[9V5p5
%6kk<2%#;AYiZbZM*8!]aCr]Ba]Ar"!]NkL(jgt?@X4E3Ti?*tn@k77t\K3EUIq-%/MX75^j4f_NnR?K!VT-%bH%+tnDSlF69d8WZ
%qX6)h^H_P*qDrrOH/0BCZ,b&\Ge*g#-BU+n(k_/Z6-<"9a%\p.<c%s_qm;=cYnQ6bpit=1YM+J9eR!&42C>"SaNbZdeTrpmmRu[C
%GYT66E#6K"SGIQ9NM9*ZJi&42j;(Vn(66[#2g^O%p)7p-cJE)Nj@-Z;CWZPlT1S670b(Hqlm7cAbE8!cjYMB#+EWSdCoQSeV`Yml
%i]NYXb.<ShqdC>R`X_!tBYG$d,!d8(Eq2$Vjt=e$M3Ea*@kR8`fJ*soDN\Oc$To&T2.@!5@bO'BOna"S7<p4Om/%*TNA-h\EN5SS
%*g(%MA^eg1_c*-qn3%l381DG3c27k$c^aHZ5'7sfEHH>po8SYV'O,)@[%RtTV``3G3ip'-P)sgkW_W;L[->sW(1H8O.:0^VpgI\k
%lTk.c)j?Tt#dJ<<4<U@1)\?=8*YHGQL`f5$0kA,)`FfpSbrEjF3%b^b"+X,f%IpBVL4<bg%!/`GJ?mo.KBZc:]A65*7XWkDfkk=#
%h]L]Biuj:HVc+i8!Xk@@SBu5XhE8lNX7.==jpgp8O1?BKpSunb2?)GNqI"I+o?6Jhhjc+c/1/[-a*\J1OU\Z8]p0OJ/k1jJ=`3pC
%>4oYk=#80/2X8sXH\of"DY+&QP?RcKHUl+mBLL%gloFPua9N9J_KIROg%T&fmoAQ*^F_ASZ74.)D3r#(IsY,_(.#aVT4^L2@t]>T
%L.cpni-:grOLg<EE/rUGbRB1c05sibeFRT.h`dt/4e&V.5G-;.oB_LPgAJ@+n\@%>'2\0OmqDa$jr/OU&'8g[L,"/`*>cW:%4&>,
%0_Ua+5FaX]_BcbeD[j&qH;p.%7!SL"OmIP/(-ZK@%XWUJpuWKE2ND/E8tV1uI&F^["3LDpmN8[6ZS:!A7n0$fSaE"&^&fP4D`.:8
%0a#FrrXW-(]n*?_3k8MpF4u<=,;4nnCO<Ish4qZ.P`Dn2^q4f>&)H4LVLt^*ATMpnfuRL%lSroHZY>GBP(,.Qi:=k+;/u'P+?U\^
%hecbGE]Y(H>_G?2h#$P<`kL=Lp61!j"oeg%*02n@@Z4)&5SVX#=VQq5-Vep,!YbZ1%-!+HrnEk1"#$)6j(Q;(r@%QbO44+/51+AF
%P^[R!ou'jsVV)R5Q#SXI7+qV0FN2D?Is3LA-'Qpk>Q'W%eSMq0J'c>>1D;!<4RqnuI2DM,Ys!9THX4f1c$lVsADF>p[gIfCZVe8K
%oi<<,UXG.0NU$7$o?5>DHJ0CF8,;[)T>8(BG]Mn1r9s[:2NN2W1N.I<9\2L1I9LcR[qt0X$YNf&Fs\8@s1`g5;:4*,hJq;`o>-!M
%B(oXN"/T\7j,Eefh=#h^P45ra76^Te6B#2?rj_sZr^Nf>O8=>p54oNP8`-2S?1)MMmUnT.EkS).f#s]JN<!H-^D>r_"SUK<c*bRB
%e&HS2NJ2+[bmU3<@kKq_H_*+'i:DHaA%pF$SAZeir971pr8g^1e*Z"ihs9+TXY\r,=_%Bgb[N0tDL1DO8,cA&1tu5;\(rN0.XRuW
%NW*u_P7!AOf_g(+ikOC(G,Kb3]n*7jX0]@gfW*Fme+@tsMLYUJ:.=qbr`&8j2c6-Ed`eZ\FpJ$;cbCm`r4Vs4J@<?MaO/>Y_d:*a
%56T0e%iqB'HZa"\fO;+?VYWj^2s/B]fp02LmJFFr;n9C9`t43u&Qm/%Xlecb=iOr1SF^4IqF"-Gp237XJBiW6VWgpYhh`H"78\);
%s8H\LdG'%lpU'$YoPQR-@Y@IrBD1et8q$SP=Sh.-W-7m=r3P*T1aLmtN?.?'rbQ]QRAPPql>!f=F*=N8hTWGF%?49%eP`E2/]&hu
%**Pe>faYoKlo4e6X\@RI%QBUNj-uIj;N"/D0ir$_OU]KYjLQ#U2Nt+3LBeJglg:7\qG(O0X`JH+?q0)%g#kk;[NF#.[doKE)7*]=
%m2_Jb%QaQ`Z?iQc`cu<3j46M;:1]!62ES$YhO0'f'+9TocG[nPYM\P%^G_+$.XP`Q4L*M`:8sf%rkqR@A,C=6gLdY<WqRGG)_h)V
%!1?aNFQ/sBd-+6sReqlB4Kp&;9[KSr)Qj><m!WgOQ$mLj.r5-lEF^2d@D1FQkg[4K'3Pi-VMh,aGfbf%-G8^5lo6u2m7t-!8)9Sm
%]Cmp#KqTT[gsdq4_jPA"pMaa)r#XY7:OLpHN7+PKqtGDT^%=DpYB$c"kV]rd2^Vigrp3F^Cc2+_NFo6Es!rSa"\[mVc9]k)=T7>R
%-q;0?gS!.'Xj0DLos/RVf]qQC+J4J19e4.joc*:7kjTAb'*[,e*X\/qO_9[1XrZ7:@1t:5fsj-q%(=RfX,$Y+Cj;Rla`73U2:H/e
%RU>m^T[RILk(R,bJ%[4h^Q*TVcG[0YaFSWfS_kCB!uQW:hl\WO$bF!ig#!a<rTmg&O0IKt4Dsj.YM!_L&$j$&ZgOI=i7Q/_coZP\
%lg=PbgMDR\4R;p:]mrnl`X]S&B"N\AJ%'W4Xhb\$GD18:iinHj1\%jBH_Y`'X_*JbX4_Aao]U!H+$ARQF3\$qI.lF6U\fhKQ?i=F
%)I8;rm'"HWIT6+?HFr()aDRp4X*>lfC^ui;S(KI%Q@7XVKAQ2)g"Q')WlW>TrHrfKV(LjuWU[HQUp@;3hIo'RpTqRtm;1?X)"]sL
%3*s"tXg<6!kWW0&[4VCV'a?/%qV)VFI9Ot*RO,$_cT5:Ncg=.N@E$@em3#R"f)NhcJ.i/b2MQE;h6g#LZiRY-p&19(b3h0Z=?ep`
%9^5@!D)JS5-BmiiI*n^7jGABHn]Z3OVqGljd,jrJo&&:!B7>-WfP2Jq(KQc]=%c2W2j*LKB.RtTnVliS"*jnLq=nU>:L(cT?daf2
%o(\&[g90^k?SBYdkG2^nnp(h&Kn4k7ZAd)DOYpmYZpqSrg9)K&pWe4im_m9%qDk,_>+bJtj>/;M055h-""UiBiJC.$MN:Fqn`VcM
%Moo&3PA_c]br-Ae/Uq&?m,u]@5!MK\J*q-s*MC&^2SbC1fJi3eeb)u/aF$#%XLHeDfZ6+bG=K2^[Vp87N=O.sT&)<QJ=q:=UJ2_F
%B2kc"oYt-70_)-RKEqIcZgk!-h3f[mVe8/+]:9YOnR-!ZDf,[CCM/!@:(Fj)mlRfQI_EAFqkj=3*@cR:@BYfq?X1kIl)/FlM78J(
%q)?R#7VD^'-e&)6`E?=@83HJJ4'J#&a*i08hjW;_&*GaVDtEbM7<<<I3/O3Sp0_Z#gT+NFl?@6PFloTZ-R<VUgrR\4*c6,TPKt03
%pR:j@HH3bIXC9N;(8iN<.iBE"b`AODRetdVSSMdtMG_kur'Y8Qn!L4-9Z#8JFpiL*LW9p>gUK(&B<m)SXc$Bs)h1R5G;JWbHbod#
%p$H6GrR)fNqUA8X<I/>VHru.q3G3isd<=E[GrF].p5IO;X3k_N[#[9\+1ik:W.!p[cXb5EG-f_td]hT_B_M2d#A5Z^jnJ:^QWr:V
%rK?/bCm3+=4+$@CQo.Y)#Fa?uD1h@IB#l(K]Xp&Qkou_/?9[fugN#C1o/#M"COSN3[McR$@nr*BIdt_=l!mO/)1SjUSCjp0BtOoP
%BkK@%rJ[?A2@iu\J"<l58YaORn'oaT2<m,)--OR?^!'ecX+!n(EG38=3l$`UdDh=1e>4#,H8a.>U`mroZ=FcK`[Pc21#GK5Re^]k
%.Se]WZW/%RhiZIQPca_^7[r5Z_-(WJRl)u*jK*O\6MTH+hi%*`7_RP<m0/e5MS^]=Tln-&YHo,`GFAl=:uP/![*J-96K@'r*&iqe
%g\n[bef!eG1cji<GJ:K\*,X:hgotkJ5ONC]ZL6kpQ"/@*hV:R6Wp".M]f4P\lnJ2'oN!qLi4+3T(dc,Vo4aieBe:-n=1924I\"Y#
%p3,cT&YO-tdmC*)+(cL^KurLtm,oC'(*C$Zs*6;"2R;lHNbd55*jlfqi<`5&^1hm[6erjm7]>A(D;J+5AnNr;2,@FNZ5,-We]VUe
%'3]Ph2G[OsfV3TDlXu-X_eNia,8ZrFK4Lml?A0DPc*e/;S#6]2BquLL4(+)`1UaEpgX]AG9!^<L%@d5`4_gkgo"j>(UQq[s9quCQ
%Rr_@dPO3#Z>Z'fK:6Ea=iH1?Sa\K>HA#%o9s6I%eHD+oJ^O,*?>nkP%-:7N-]jRulSu[dHQnUJ7XYp,p[+6/Om7,qf5EH_/dfYeK
%<c;oUTA\ob'G_g4ePd<((:nN$h'1`]<W4U*e=?EZjK^8mQ9PJt3W0g0N:KJtPm?ujh)"10S&S:0YeKbn;%bK?2A%s"^Xd/-Q,@_2
%n`$J#q`B$"jn[G^l)jjUbMCp2leBa_T),pff4s-N:2N%:q"!:deU.8%H2lQQYK?),_qk4=&"XhirVEp&]DC9&X`j*SA?@c]GV]0K
%,^d2/qDJ:[p,+_r?MDD`2uDQ3(Vd[fLd1=7Z6(^6aSn&b4BT8JGT_2e]o**R]f.%J>g7`-EeV92r3lFb0n-gT?Pi\%em83b.ZIg6
%]Qk1*DXuD5jFr)Fr@g$a&-$>e=o5k&rH.]jIXRK0c%@Nf$TG@uY+aD,b6OC.T)72:2kK(#Q)/*]eNA<BXbP#?05#Xb&$mngH@MpA
%rISB`j4DtLhsPl[_%65*?YR%6m;@%AX7Ra`mO\e?o*4rU[QiXJ)Z:Wrm&k0;E[L8T[!]A;k<HY,c!R!5?!DRHV0Db7b2P93HepP#
%=#M\er+10Nb/;EG:Cd>1q:,1%rTrS?#-KUQeTSXf8,b;_q9goTS_r;60>Dt,5.K+U(IaCS441+^pHO!T[FrOph>KFebra$"a+*lY
%nHrWAlRTWVpTk,5J%a@VT$Gh2T(VbP']S[Wr]'6/Ppa=Yo"Co74F%UDB_><tQU`_#)icpl(140#:&GOJkM-<#msfesn8dj_o]"$k
%<5:SaRG7Q.lh0@$Had(R47B=8=Sra/[^^O&lc-Ukn!f5h&X@k4.`NDk\aTm5VY@eUm!!U_n,IM0d:s@YfmL-U]`%?^op'/ch0WMs
%DT::0T&+r<q3MRM^ODa2Hi0[_rD(*HlVhO_^:CIsj'I)3\[.!cOa-oDS[miOmr#f/oCi.%HT.RHhOB##I6ED\IrSg;\Y!ND*q^SW
%Y&$'V%Mt_LTA%TIkND/hZg!BTQ60s,\rqKs@d@@D?YkF_2r](r\*Yhj2]oT^pX5+i.$H;*BA`ZpZ`nm\gV(>2ib^n^E4`I.mk%hu
%=@d&e-C;2S5PWE[c^rrQqI9,WIcXu:>+<+gcISkue[m`Mp$d%)[er&)#&e^b<kJ7=O#ro^(O#K*a3!&ckO6.7Y2)dTENmX@c'mk_
%Sb\*!VXDcP''F'&G.)Pl?LR/SJj7LhOOp@FPLCUleu!=95HeA`Y&DfBa4W#8^:bFo(0nE74K-N[D>dAE]!C1l?$gU-Y'0c_jC7Mr
%RpY(&Aj<AEY0Ch-?EMK@1iM!9rO!G![hgu<r`&nqbs-Rre\^RC*nR,*;npmmpJ\PegjA28degkug<J6W?Yd,/2t<>O\#8-'[6&RR
%YL`-U\\1qRf64@L(2mM`XtBT-or5ATh7Ze"^\6bqmG[/Z&%+p.#?/#XZ\JprVtJ6*C<u?T^KOj2NZQ_WCb.DYl]7V@[F`^9f<mPm
%T-nFC3]C)S5C^8XMm)sGmWDe3ogS16mC-0UNS;CAQg;&]G6aILgKSlneoj.JIVj#WH!&h9q>O$hZT@iRp1<j_QWjEDpMdG3W.$]d
%Fg1XWEdD_?H?*Wlh<W2K96ZrKg"tiJ-CnfB>EceuCd7fcameoHa-4X:.l3BuDRMc'hRQPaC%>U)rKkX&h3[GkpO@T(9Kr=JW&=DC
%_o($HeZEK#jNH,4p>kQ=RobgBSa:tm/@6`O5HWO$9lB<1?bLmROZ1s@SUJ<QeA92IK=0bP^8?DAFYktdhRta'*SfJA]%Yqa4#OVk
%4e-QkpW6Aom9cJXp?TDkT74D[4a$5TkF\Z<T0HYQHFWCuT6g?Wn+P8bLDReVX3\7fVqt3T]e]784d_b>YLU6`NLfb@WR'Fbce6oD
%[9kQR:A(J#FtQLlhVGnfji5`oV<bl[fY-A$HLgl0=F7`2.K/c#bG@9r%Vh>rQJF'X*r68NQ_%K4)d[i9UNcU`gUWda/q'+:ZZ`<s
%F6])bgWuJX?J>:YGBiAFs'Y88mFL7`lt\4L^O,tPo(BmN+"k1Olg;kmJ)U7cT:Sj9\\.-BY?ua_qdT<jZR<5c?=&]UmTk9+fme5A
%f@JfFb?LU.dH/]HITsF3Ye@S3?/)@adoZ7O?;/[>miP4.n`6h:RqqFFe+]:=1YLAR5D\/YR==jIY<Di!qSqpeT3j_5R'&Nq@!\^_
%r\E;9IQKK:3.(>cQ0I/[fdjCgq0,nl2]q4cgj3u+_j/1gS`%Yceb-$pCEN!"^%/TlF)^6m_qes,[\NTKYO"K%o]\ttn(q?OL0*fu
%Y0G1-Vse5l1qG\gqfC2X=h0%Jh9<3ANLY:E?D!hbn=dQVZh=+OktGm?M.ZUB:F<8O=_qn\SR8tBFu=aFoZl"!^\6fm55;G=]=Ko0
%[rqB"j/'4dJ*YUU>]&>CKs/&`V3Q_c/h_^bIVj!!Q`4cJa5nu+mQM'QY!)D126OW[maSGRmkfL,[aD+)\@1#eprg'okL2*9Y?p&\
%Ghl"RT<@'t34X$Wq);s`qXYZLXm9nt^$B".:\HDJs84F9]AB0-)/!;tA*27iiXPAUUZXRbRdL#nA#4CaH"2!'2g+0Za#3n:k&:7A
%NW"jM\$M:c=*q9[Qg\1ONGm)pbUu$Xnoj^uCV)D"-N)fJrq>=<Ze<%&Qb0SZ4$PfJf,&p^2A])+[-$fD*oLhrT"LJ:487n%:RC5/
%:L68UCHZREjsM8J5L%NgI(:u(Ce]WT98=%-SR9(`pZI$TrV5"?CcI1@?e0\^E+W\tIWGA<;gZgGY^YJTgg?OkhWuf.FZ*S$U!q<$
%fY.2rk%XNHY5A.^]R,#(lE:#_mQ>PtG@JnSE0iV'qr-6Jn+)h-K'1t(Eo"@V=_W.WQ@=8N]t62s^tWV*a53/\;cimtbNj"0$EjBj
%0870Sp=J<Ca8X-OdQRX%e"%bOI(SZS?PCZXQ`^S&Iu:.Va7$3-#4J^#l3E=CQ[1sD^XNXpmp577l.^G<I'Bu"3IF!)H8XKJh/U:b
%2m1-I[;1\EUW!,u@<@!=IQ`#MErAqDd@+c<?de\tn[/ln'W5$AmUM$!nEZ9^nXDVs?G+hU>`3r5fPI.]^.j'&q!]DOZEtGo5Ms$E
%4D@!ipGndJ^#u4uj2kK93;qt^IBg*T;u0_Y;E"-1T5NGsepRMWk0<de[;>ZMqr$W6`pU[fk,[7[g"5#joVC$J'eDMXIqs?*9(1?3
%jc<2UD7t@Fj]9.a]`#s?R0nGT\+I6,e(X6PUS$hnLT<Xfg&CfVgTu+]0AX?`D<pKSkOmZUgRm>-H?/o@ETl;jn_d"5cL'_QO*@0[
%\b>74Vk9Si#i%FR*_bI^SR's]Hfo\Kj5&7<Ve^MBpMVV?m2jd+Hh49Kk3jn?rfqir1RDnO[eBG*(2CU5gfs:6^GHa-[bgI(]\RkF
%^$thiI<Y5(:OA]Mdhdf:MbahQmc(F.&#L*Q\sq<XY?@<@Ia)5'n=JK>>4;2-05YViGdDe^h;Qq*]_]:Mr-3@%DY`>Ih1asChk$sR
%bYR,1Xt1pOY-,G::g7%9?JBsZs2s*B^&,;$GLQH8)gedWDliYZ%r+&,hL6$]-GM`hFS.Z.k/#*]S'N.'\ULs`cq0i\4^;=ZmQGs,
%]5m)nrjC>&UDpD.gj-8Gp$1^1YCG51HLs4Gd!^<7d!Pce:1NScj7QKc+!9scC#!thZhd>`amG^MIIe^GPbd!lg$Cqo8\4A_hYuRZ
%Fnb.sQ%a!LGMi>hq>YO1Y3gBP`VoN->Sl:+6iJ>hA8e?k1Q[^NgQ4BGj0QOk'R:kV_E'Z^%,oJ&fq8+@<HhNjba,W%,Tt20p:Af1
%e*!m:Y-*6:Fnb9-n,2t;S(I+Vo^P*Ec6(p@dC4W)rUTb#5CXpXjOZWr7JcnRs89\ts5pG-YMT*>O5><NGE[ONfAHDdTAKP8T7$Hq
%n+eX)r;Ct\s6FU;H11Hjh`Z8bgV<^RS+l*<55NS%mk1elQTk$?BA_%=J+2/&hO?_(fC4Rd_6*M<s8'QaT7?d2+9(3d5CECf^]35E
%:I"d5]<?_WdC6m^S*th`J+TrEr6]jUI-oaN5(E.VV]UEWGjFf_Ie2/Uqr,T1qXED!s7l+S5PjqOqVAor>OQt0j*,Bhp('C`__5>G
%o>=+kq8F;FJ+iCcIPlWL426%<foLXRbPWHsrPL;GrVgRsqW6mI^2s55qu??hasV-+p>\q5q<bBar2Xbn\bFd\Ie^n@?[qar5Q1*!
%Y9*W&ou!uhB4$/Wf09Y8s6eLRs4sS;rlsd/Er>WLY.o>P=24RUVdKDt\)72PeN_DnIf#n4s7"LpIf02#LYk;lk^N>5]T`BpGOL"X
%=.fHZ?MWHu\$&!ppa<Q.Ia+/4a'X;crVq1,^AZ<+>sEF<rn$UfrT&4ds1SBqDsmPh^YSb*SR;?MHQV,?k3_p"s7Af']_C9\[sihm
%]h]`"n'_f-o?X&aU<afDr7_,Gpul@/ht_^"VpGD4qtH0#j53)2p$:5u`rDRWh=pp1=)Zs/J,Q,Q4q%D\hoF("rP^G)q<Z;Nr[iL=
%I!GP[G<c"\gRiukoqQGT&`/$4UG(L$_1Ps!h#Hs8j*U;TYQ*hCq]Gk-fCp?cquFS*&,Ep!gOK"f2rB,SLT`mkqd7'Bro*kF^V'6j
%)s,8Hs7"R0qu?SXpZMFGI,jWYps(N7r:n+CrUYdT*rO=`oKOGsj(lh&55`Me]&,V4ra>Sh8,lPkSilkqrs6AaoYm^mro^K_o^:Ud
%p"kJ5s6H^UhuED"dV&Q+ri[EAs8L!lGJ<\DgYqGcj+"];mB+F<^K:F5ldroKg%,1A\8)Jbf`6r]j5MXK16rrhMqp((0C58RjP"8T
%<_1PdXM7VWgjAhXrNDhu*?T]>Cm&>Hs7X>`05rB<@^O(R]DE--r:02:hqW^%n#Q>0hcO#(4=_e_rRuK<]J(rO?K`4J\UO"LTAH__
%U?3E!'r?SemsHDsU\F1?<O[:+C#cqY[:\Nk7h6[^q9o:IO8ecJDY<Cr9_K+g83lN+@5.HFM099V_L%@3hg=XF=cNI?P<0;):G)1F
%du9aKG!H#kksg?.eeq92V:@,Eo_?^5?TfnbB7S8'hX&9D:M]%!-/I%e9#9pYeXi[nr@,/I0CF:8le^G^<Sce-?Vl6`\F]L``KMtC
%?DsjA`Rf=+TM']]nY\&.5.p[e%dX?PmQA-IYBsPsU>!A-/Dp7As!Sp1kr[-@rT`D&Y;p%fc`\YOORSkaI<4onFh!?"%km?C0BR(A
%U7]=.d_1DKn%s2AJ%D9`[fdaMq(J=%6:/`)(\cSYlH[BI3th#.0VG=%U+Rbc`F"+9quRabqr(b,nD=nC0C/A2++6MeIe6dhd(QV9
%^3TK">bYKZ0Ucd\TTkLumsXl1PO"nK5Bt3<<prP!$:N@kF0t]IG<^Q^#ADGSNAmuEaKpMKo[G\F2JM"Cr9i<85:3Ku5C._GJ^&1^
%7TE9[%VG9-X1Ee1I-8h(WqtD^LWs6,WUno#hgA&ViMV_X55>1aW9X(TI`A9LK)+bPbN$TVKSBf6hEP0an_ZHlAcD\Mgt-eB$G_UM
%kK2P@^A-j,V[r7O]3f@L=[fmh7usP$DTLbB/AIg_[^"X+RfB.r4%4KRViGp!r:=P=X-p4ao?<cg>B8=ML8F/!hiYke?H<<YQ5`L7
%f%p?BGFs4CTOh]D;r:F#cS2hXHFN%?Xnq_>WfFu(o-rqUlg!4fno$$$Rs4gqKF=73rq,FEQY,KB]*GuL.d?Wr2D!eCq".EF>Bftq
%EmK)^jb0tgePN)l(R&R^l^h80qr;SoKR837HX;9i3H)'jeE>`g4im]u5.fEA,u8=Ik?ehARaRZY[6sg1K]&EDg@U]/XZg%g]qL^_
%6]-BRq"W77GFffBr;#d@YKs5E^&UC2TW<?I;psiCfSu^+*$sFq,Wp9P?=itIa11HOr-W_3Sg>uDfW1TR'^]8-3j!P^I$S>hD'3\[
%[iZY_8m]iN[-=D@1Ab=c%;5&djs7TWdbC)^_lrJJWDd3F]6gSrGG"fQrVI\n`CGlBV<p1oGir9k?2H80[c+1_>K6=T%h\@)f6u.T
%\r/=N3+"<-i8&L;J.J9$lgJ-fY?r7jnnt#([HA"Zj1!otbPKun'>j.g017BGh57t0[i7iYiGH*h@s<U@r6r.Sm[O'&mc'50Wis;V
%IUMo\hJCI%WM$k4GjqiMC]4]&4W*GmbYMY7m*EE=G9;>#n!8m`?GH9s0=]'jIG+Bj(h+HP#/'^/]sJYA6k/Uu!0/&d3L@+e,+"3\
%:\+X!dS9T462qGcp[FOKqe%j1QIdb,Q&@7H_6!6H^A5d2qWnHJ#%M<50J6lc<+stSp@lE$ekETCI_Yf^>rnkuY'IXd^CTINW5!6R
%00aYhTckHSHo8Mr,'S#,#6iM*YR>93Q^C"0"5[]3o,'CT@%bc5Ik#h7H1%6HjOnIEm?TYWm]#[jj`q_b.mqp;+2DK%qstQabR=`?
%_93:p,:O,ll1>^%Rg2B%=)On[Go]uZG9'`0J?TF*moM6D9ErD'feI(0jdule9nlmH2];=)Ad=RFRsQW42&T_TXRbS[+3/;hS*eO'
%PHE^/:$sXcbRPpX^o,X_PNQj,n9L2X$6J2uatdTFpuX7`m#_%Ce/(Ga]WVL\D_?:2H:QmLZN8&:Y/o7K]CVl*K4UW<[ERs9A.SCd
%,14*:cI=,Wh>Ga!H)Ce2p?W8\gjj5[2bN^T$t>JT_ahKAn;T[1i55e<^@RlcA_QCVH)K9U^&FFk$=E<+X"n%d^[8t>,+cR6pFDF%
%1g@6a>o+dbHs$FIo!=HZ;K6$b\9TA'Vji.M\u_aBpW>!s1J"9sRPPA?g0n^Jn%I6%N$bHB!4?*r!FZe_=.$b;iVgaQHMs['iA^5I
%Y'Ege9i$JHW)!4[G=KqU;%;7E9M^AGW1NlUdH!<(TUiZ2pA@kJ/';qj.%39q%CBTLc(983Hpr<e`n\_FdXE:RAn_)5($3Z\5:2#L
%Hi<AQYD;iHqt(V7]BMh`X.8=+<MIIWGd1cd`D8$S?+E(1?W^96-@*jHRA[P>+>4OK\T/k=493NhchnK?TS#Pp._F]:9u\8<n1,0)
%LKo<&p.dd\m$ZmiX.M;m.hHm]qV^uFr8RLrBBA0R9]`]TF.tS/q_BV@qHWSk>\GM&D[0'LNnDF;P%,)d32S4@d&+gI]S%e'[tSLo
%(UHQc6%=Hog<')5DsucB5he[g\_j:[W`njmO$<D3Ie7N*Er=@oSs/aKg1ShdF&(G8A]aN6ZUa'G.mhmT->pNM?)8h_>73:>?-Sd,
%Td`EC]soZZ%f-R?hbMI*^9c(rV7*XPo"Rol<OH5Fp[4O@c!*F4qI`=IJf%tHJh]n;qBCfMV7(15+aHbYr808*;HmJPMpFa(`dHkr
%rm6=Xp%%gdHgEE4LjPO;\s%P8D1h3j@40l4eW,^jr6bK;s,d6Pk'ONWY9okb^gbM>R3,S(F%TAnk%q))_#GNVU30781IW5%9,^uT
%p/`sp2md1,VWD":4nb4Uc(3&lh9!C-6bD_"@40l4eXA^\DjTebrg.g=;-VKjJ;QV`4W^PLk^,0_PUj*d/J$$VWAR,j"#S:8:4aYK
%k[CZ5A!\NT+*Z4+c6M*3+tV5"gqldhaCc-J]S`Fb0iK+ZTGm@):$Xu%qtE:?r6kjcaZ3W$6M[CAhuTU',ATo;AtI*DjKchp'WH0M
%FHo19mIua;\?!0e\l]PJa3E]IgUHPHmm,.V>t1'5.!8]@CC6<L,mO>Saap/a`^e/dhKs&^AlLM*8.5)$P_AUch]Yos*4[>/7a]E0
%Z4t^$e">,2(P)oR;(2981MXqu'M+8#GPa%hiNF#`qS,s-02r#,Kqr:Kqemre=lcW@quY\$<JnO@hXdYl7Hb-/l>uo\#argR6OTPi
%Uth.:[c"pZA-2d*c&s`_\#hQs.F!m?*%=N+?TZgV#XPi>`JYS3=_MM:Es4$]S?ul#pQ;:ck8)ZGLf_RC\k.TrPhGcbZtMfPf#EsM
%^[\s,D(oX?d7m?!`d$V.3VOYbF,K4]UoT(e\WlOA/aRJ\dcBN]RJ%"!%%=?9/1itYBgEca$WU]TfZ`_1^)gH"O:[P/0pNV*7+qmR
%hgo=K\7gU#;'VCD2&W7&'M8Y'TZOnGQ?o(#c5UN/bd7iMraK/pj3Wr&b*klb/9>^Hr'<hbR&<>-3JdqUdE%uO<_FD.$u5$W[W/\)
%/*.s:C4O/ip6kb,rE^fg>YCaI8#S\OD((0)Bb@2_<LIK[PS\(Br/MINGVo3DIoGYc<(W7/TUrbh[3$a)LWkF;O\q'sNbFp)M^5l&
%TU?NC?Y/VhPd:atM\9^p6C$kXnG#/k(rWetbmQHUOJf_mV($-g3c%<%e)5Ge$l*K%Eoo:qEs\9@':ZO4@uV^s<]UI5P%JB.<6&TR
%W(0^-e:C[le1j=U^0526EB3Y&e6Su8gX*%:c-U8tLF+<%@kF_@Y!Anjb][Yt5%s!'7r-;ZNm2]Dbi#;HVe*tnE&OMEP;Z<a$>nkO
%pO/il14up+5%L*m1h4jgl!4O,qqVKi6TR3+#W03kfY^c5DOKHTq1s(u4\3hqp47?`G)#0H?cfYb;+?21=OL>cEPYOICJ,kWcpI"*
%GAGo^/Jeff]b5_i9o1Ke5)p.X&4cPb\b(n-Mi3;/-ar&;S%[thRMTMZU"LYkb'?J@",=7:(8q-!=U1[I7N5*RA5W3G2"Li5j7-[&
%<t$iTq)@l01&.(VAB(XoZV5sOR==<spc$M@7kVG-Sd4"*9g#SFU=0kUdmTlXe`*O2dr1[<nQ?!Z?V#_P(_s%L1J(>Qk*Zk9L]3b]
%*bVI.TEm&cUp38nciE#/TEX!,$Z9;):FR+)Hb"o>0u3=J94,MRXsoZj]R3*ZL-LZD/f2bkF7d)#2$Hm(m3"Khp6fodE"`sDMA2E*
%X9\ASmM=\m;!JfQ%;$)<iWMj!['e.,FTi>^S:bLGHQ\IU1Gh'^R[-GF1]k>>I\GSR`/<&11H,<a)h!W0`#:mX)CF`/*RM_Z\[f]m
%(2;=EOd"o`-7X8!1fYYW>h`4bbFIaa_oAWHADcVpY;,'C*[Sa/ENE?C#iNf*PJL4V)Q>?1Bjq]?%Z)PNC,a6kc&Z.:k#d`"VDuZD
%pcQ4Vf"oClQ5<j/H0td-HJf9'd_0Q&6,i-3MVm8\/juA_"3jaka3-uG5<'.\+\g@eZ%HJ;<3I<OO4@!G^JDX.?(,B#X>?sR#WXed
%O?A_O^,1RrQ&P]/Fm"taSY[fr;E_l(FnM!0UpPQ>GnPh!!uD^<YS!XmV'Re/0`W,3:.KTU11?!Zf/ps]^R]eD&*V]ZZ>^?;XV,J!
%bE@VFnrQ&a=KOcD)I_8M'fg0@$uP9!+iL)=]c3FD>qa-fQbuStCbnr`M0;$qIMZTVDnrN6G.DH%3s\JCo4TYaMZWsE4gff^Fe<f;
%7iaG/\,r+HW^r&[9FGdL@R1Y=a@fr%.F[JM4%?<+oPN:)3)BG=P![@O@40fVc%9Pd3mX$7;],K#d_q&8TnG((`2Y.LAuA0_.8St<
%7O#9b-($qScNIsULpb>jf/e1`?A_8T5dY=ed^qd92`*uLiP`=`m([8.%o1:$(^^#:AL+R+hR+suKF-#2a[:lQ+\3kLLJqp)S?bfZ
%C;`4gLFI;4BK>bqE$T+JZ8[=W\ceTfB'd23BO5f]9<=a`B"M<Mk<2l3hKHGq0$VX?*`3M9.#U2`;bbU9nMqBB2ROr#'t3B[(BpYh
%[t/5<aI_Q)Qb>2*l7p7_X%Sh;ig`]4=X^$sBTbQ`Lp4[&W36tm"^7<VB\R%^CW;efe&T&$Hi92<#"opm/WK#o"a*H7&/K>2R@,O<
%$T$nMln[<b2=;N\Xu$BU6to`oZGUK`g35q$gb,pY=dO=YH/O2tM.g)eRZ0VU8PtD+Z+$/^$Y;P^'.64[*=qUI;FPkC);S^_mL!Ka
%^q6ZJ"V<pMgsmSMUA5*AQZHXA@B;pa49oSq,cq%&Umsj>Y$^@VW7rnLe;r!8JMrR'A2L.0<)RqI#2'>if2f(KX"=0Nbf>2.HeQ_f
%%I#hHO72Ugns'el"+=#micf>0-k8<q=iX+T7X<X[WJYP]pAt)?pj4+W6L6*5)4mj#Ue%C6'.K+mWtXHur`"RqQY<L!jFg9,.cOpo
%WG4lWauWD)85W,_/T+d5^V.*K`l:bM1\)^aWJX0&FLnK7Ed+Oh;+o.A-f0[7W#Q7oDP\T>j)h[RBDsa,,M2:]WlLZRStu!?9#qKt
%l!d-p8T:_fr9ir.P`^3jAZ^u'G,dl,,-=h-"Lh"F%Yq$(7kmTSgo;\-SueIC8mJDE)4me"PW10.jgHo<8,/+MZGYj,=5ksaP80At
%l#`1:*p>UeBfQ[o*S%!;c`OjU32`f1WH(d9@'WMLW@H,]L\ZrcPMjRJ9T!o&6BfQA\k8/1SZL>:gmtV!jD%dI2@5tPg8#"P.Q8g!
%am)SQiMd/Z0$IM<8T:`k1pH:&Hfs(97b,&urUs3^T][^d@InK!g(X#%;1)!KdoE$'caE<WoF1DjAE%\7.,o)DTUL_$Q(V<V'@iah
%kcH&Yd+'1KWsmhK5eWfSe@qgp<J.N@>#\+6Z=6c_m<$mWAF3@XkY?^&LR-6PH\t_JXf<(WX"4G1W_5Xe$<*Z\.T;#V.SW4<C=AaO
%DB![fI1!PcTF*h^Kds?.8lVdE;q7h&[8j$j']J:N\>*",4\)U],J#ZFX,(qRC/mt$:0+MAg)90U6p!oT.e2(><`AJae>QMO*HXg)
%.eIh*X0gLC$<O4DdoEQZ%Sos5mZdS4I<nBaCM?kZ'&?F%=uo>B4,R--a-PLX`nGOHlIG$5Q]<N]-tNi.F1.j2h34%G'XWT5'eKcs
%<RN)X7SPB>X;&&D:K>phelGp(oQ54-ib]F=TNd[5kXK:@iRe8pMVFi15OO9!;u#;%XZsJsq$2-,B,H67qss,>TBcC<18D7Vr\$F1
%-HAdU--=ooiAPj5bX'mHHde<;/[(BZ]Ndo&1tK`Q;RH]AY:iH7UjWI8psUj)+ut0cntiS^KSU(3]U0jQ-!h3:BnIjho!Iq-,YI"7
%1@LYS"=";@[$N096uTL:Snfu8Aki+Sbd.s7-NLe8+kZtpK`9^b]gue#09S;WE53RB,ijb7H#28<<0!0dlBg!&-5'9H9U]srRMO^7
%442-rB&I^,7DWImUB%Q2luEmUBRrR8G`46$[Tq5rMZk4!36uZ%KrsoD=S"rPDN`_OC4H=G[L?EhR>Mu^=bJm%!;M"o#,)+D2$kh4
%bnc+m7e-k$SnSOi>X?d-m-dTp9$L8]JTok"_N;\Hab>C))J$qiP#Ok^D[=$dc;]XgQ4M:L%$d'cWgC8P!Y2M`PT;*b^0kSPY[a9O
%25kh(==6r];Bi-/I:->I`.V+6'h%(HUkS[iGETiN`Xp(&6gNPChV[YiLZ/0r&j">FiZ+hu`%17%pB>B&P[-WJb6nG3C*[=1?#63/
%44Gjl+G5Wa"mV:lJYa(GP=t2>Y!=J2rC`PF#F@^_8#q`)WjDn>It<E2_F8;Df)956fT`f(n4]'C=_Kk,q[+&\mZ5iPN8.]*$qpOX
%U=%+X';,e&X*p^kb$UPQHnJn*kB0Ca(28Opc%hmBn$+O"bN*dSiL"'9>E/_#'Vl"GQHb;<M*<0mi+9dP:Jsb`rQ#1d.Z5"([RI^0
%M+PWYHd[/)^.4ng=h*R[/)"q#RPHHjER%7f)el;E-R)u1=dC,G,OXpZ>74M8Q?+B`1<M5?CHY.oS&]\$F4!@l8=HNn>ZHbOg$*H<
%AJ8G7o$[8u$(H:aqh!]Vb'KL&""big@\M>i"]C(sMEI)]:"&SX.AL"P9jJ[qg>J1'g]N[49Hu;ha$`Xsd7U2]ZEl2A)c+j=c9W@m
%k-^IDrM2VRW)XYjPjC,0".$VR5"Su+19r*..]PLlSTu`?QBTe.:`BnV%U+&10O'UWj'Vb,FEb\L]X)2gC0"''46n6@ZW9i>4(mqK
%6-`Rq-/-K,-ZXLX$AuDUB+7;SDc]f_F4O4Lrf!*VF`k]-MJ21SVU@;6XJ`"_SJ?:$l^DQYJ6>nH#0((qqm!WEJtB<c_P,:YCFg[$
%\&qUmo@@'%Gj\1^W+W9@'Qn?%"[7"@7:shIERD_fXLY:uo2]/84D3J=]JESpeB@)l0,e<3qFZCDf3`')])l3jf3>&T?%kSRl`db[
%kpu<(^?mOg=a:!Be3/*AV@LH*TbXj&,BRXQf[<=X+mC(Y>Tn1q,#AlPs%4<-Zk@XXg]5!-48;'sZN1Oc9V*(>1HD+b-'UQEeJ!ij
%:kU>Y2_^\&]Z9A)K:4le1)thH=ilR1IS\c#+S'?1<KDh_C+_U_I2#*m=E6/_3o$V:n6!o*Si([V6ZnQ0d[89lD2?@&D]<?EQ=6I]
%VO$La]c;:r=Q6EBCIBm8YQWDbR@M33!rAW_ddgKBE9?:;71u8eaYP:R)kC0*>4ntkRV)B/bb?>NQKUCq,TJZ9\MHFO=QEC@MNm+*
%.\)nQajQ0dMok42MN^H,oOHDD(g>&lW#B-)UaTYW'@S`C8CTV1RTL\*!Bh,EP27M0?fLJc0]1,[#3a[d?;'f>Hqg#-nT$s9j>urh
%h*YP[W$C$A>b%.C3?6*F3S<>_7r:-f<[tEj#Cn0&L/WlQ*fU34M^[jR=X@e5/2W!aHCkB#$D_flU8I:.]SJV83#lEi/haX@";Y;u
%&^-"8+5`u)SG6L5blU:<S2=N1=D5?EdkKXrI"4WsdbfU+ElqKLi:poQp`+Dd&0>Eu:N1X!ncctt7?3.C)N0*WKGo9!=\Lae#>-;`
%l0j;S]*>'cnf/(5HDLYeaXi"?Bg+&#!YdYR,,s#u"Tsr]cFYJh-d8S==QK)5#(/LBBhScbrU%*VQj^84/#UJ%F=ujd3*\$b0eu(*
%k,C%Bq$bN=PAH)S-RUM(;C7g>8>'/=Y,QB\aa2Ci!%*O:C:=lm`A$YopP6*8/4CFo#L65_MT6-c9_a-?`l4[L+`)tM;r+0NE]!_`
%&Xm5h"*[)%EgAH66#"30AUL"?acK=L;q*YMI-),_o#7mjX=E=9--[WF'gMMkII=MQY3Fut$m!oI0L`A_,^''9.1C!9EBNh^N8]%"
%)+e&O9*GG]OFZu]\H6/68qI?HALoD*;q[i-O'-4U*CVQC.@ec$]W&.<1Nq#nLbjn[LfjR+XZP!<ncCR"B!q>\UkCPs&r1i]*/t1f
%k.P0S=DX=0f>P1\,ZnA]l,*fq=b>La()A%_;0rm'dIDOP+:0A5Q>Y^>,b9k\7D`)dAOu+",TS"((5\Os%*2p4SBE("E9-o13V(ao
%#0LDPf9=<mH8g4$6ZVY+a`='%ZWf^IPJjG:B(NU&#^(0C*I.NX_O)#.K9hjWh<;^%OPI]*Qps@lOoCY]OAa[Q[9?`P[I3C:CAkTb
%oN'ApY+&"o4:3fdE[4Y>`id8R*0""HrComo-Xi!+$9c6._k:Y`ZK1*b@PY,e`FD+aN+S["$P-J(A8E$UX>)!Gda-opM4s1(l\!h@
%cE^lU7[lC>Mp)j=rkJ`W!4M6V=NY#%lM+"5e>UsVqCFuK&4MITh+5gf!m/[+.st)G-hK1#d2jqGXM=/c;=;rG&pjm;VJe4+;U]5K
%HQ%F17Yufk2i:"k8GHa(=pH>ZJH^dC*FRSsgs[i*1WlhO1=)U,9bnUY%RF]"Qc/5D6Q7i'c8A;F>f\)5hZBbVZBN-D5Rn!l;mAX8
%EeS8&PTFTU@g:fhij]u>YJO&CFmFp,W0nZ%?Af)Je5'b$'=j3K"s#\i%sXi8N9Z_;1.XIP=9Esc<>.Q&T\gs(R+JMdB@'#*-lZ`^
%PIC*9#b\/*7R9KBeDF0#0umtE9QJI1;o'01e;+m48k#a:c1P!IK!^;Kf)ee`?qSpM47I8Vi5g?^)KRU+9N^C2b<T,1NE)FD5I4J*
%85ge4FHXl,Jbh2$/nknd"t_hA3Q<WP(>uN"4!_lk1,GE],n.7.;LZDjaf-!)laYmG93f$_U*S9b7>ra$a6B84#&VaYNQ"0#$`U@l
%<d.=BAiIhhQ=gfF14/I*(/j3[OJ"0'T;=)RR)t\?&8Et8J@dne5&$q:8ZS)nM`H?maD]d4'l>HP*BXjCpjbt52lj`SNH>!QkDk:1
%8$I4j\9B->-arS6rc*XGABIgCWYrDec\q@Wi)CXV5AUh!BUZ1OZ,cYm^ZL?ml$AF><pp"rhQY*u%;29'1Y7_I:)I=?EK9:-J]TDC
%>#hL[A,&N3jI"uQXDNVjoTtf<B9K@?B%`^YeG=bP-TlSVJB^5\8;,lV8LN_@U>?uZ7G;.C%bU[oJCWtQ/uL">+E]BU'YOa'HkdnB
%91kS<;_Iub2WU(l*cV&Z/FdO_G]SHKLHV754:t4+A[DKS%N]Bc0Dkt*T-+0':Lm-og$,5]C6_Z\BrhkR)_%As+IbYEbo>sUAD3Tl
%ACs2FIGGT1]INEVRZ_ChI44X(Jn'\;p3O/3k<'!N>GeglX7O<-q*Z4DWYVQSqgh$SR\brOnC@lr\q)b]aC#K5=QV.A<idCLm[XHe
%>d3`IX9sYn!38l1/oKo=q^@f,"bIJ=O`0>J2;A5oYCruWh3]bd)*:=@'M"=Ad5>sm?1QL[jg4;cWGs@5N$=S+BKCs5oK(*&"gW)C
%3LVWC2_AR%Zd=HLJ8H`bat;>^H0`?#.?:U]e2ionY3LCI02`QJ9/Tp.%@91F*9`7tS9T<<.WEP3@V\upi1)3rDMFE6V)7:9e^YAf
%85-T$?l_Rb=uR;S%$$r,mGLuI;cM+X@Amsq13["unL>"f>n'K"guQ&LVP$/S`eegq*Ah%r8#!&X7+cggl"Y1-<+km(X21Wk0H"Fr
%_$[Ct?!0P6<m?(pekhq&?E,Mk/??p^c;[r!M]s^L=(MhE_T+J]CP_d?cWsZUgF?H,CjHpT"Y;sAZ3D+k6m1&7,\HPsUZuSj1-``D
%=&U;ICGo0%>0@`6<Ah!>bA#>Q'Ps;g12(D0.a'5TOA<`/;\_/D2Og6V'K%3,BjT9;n54!Y.Mu-59]J08AmH9X+RENH=4>BWWe@sP
%"s-)OT44glL;6^1c$Gfg\t5e(^?Jo63OA@o.PB%Yd*nYUph6G._F7bAU'==t66$[s70>J;%=QdOghB_bdm9=73pVYAqAdaAGu3"`
%P'tDW;$4GBfbmKn2&36PER<2HF$+fLU5%BgkP_9Vl(BPA/E>ED^`k:Z.Vd?/HmjWA#+s5<lY-\Yc$3kNEF%$TF5orh+R#4sac6Oe
%AWj);NT!TqU9c/L"ZZ18<GrSJ?5pdUkR+fpJqH%K:+#4881?1F<?NJ:\=]m2:1ETaH!4Tfc;Pm`(]n^IB)\<'`,rop3G5`QBRpen
%lI]\=%aa%mI(QY;YEn_^2$]8XG8^*\0XEu_>doq?j"g4tNABJ2QTM@bG]=^.`+"([);/tK;K'1kAu3N'A$!T])qE4f4D6aGEH<VQ
%;QsOb2rgoAO`oiu<Ccb]Q'3,CO?Aa[p^16t]f0c=bh0&mT%jq`NE0Oh7C5=N'OB02dI2`_O]=1Lj#qTb74hB>D`;7X'(s50Y0b&1
%0g=0*@?OlZkc#gI(WZ&E=iOpo%^r*i2u0Skk^O!S,uI=3Wfc#5N39/AV^eKGN`BRh$e9B'XkYd%XdGDBXZcQP>/MpJ]j3J,l\:RG
%>]R4nB[ROA.L$n%ZCSDC1jZ9HC857]YuE[*p+[k5<mk*9Ro?h*Zilq:-I6mkk2]M*d4GGQeeNVI#=^S,QM'aC:'baS/F)A+g7[,&
%bmShOC`7oLA2L'33#n.("9_A:NX)3;WWljt"3UbZ[8+134`(rhRoR]c<*s[N7+#W^X;SO#l$7/@E^n`5eqq=C7Ntcol^`aUM6UL/
%b-`cE?WhXn=^5&WRJAmtj.`f<9G7cC:)6&8nSm%?3!?#AKi`XI`Hhr1L&/bl3b^&k8'H9tYdUEq*W;kWO4MKUh;R)ecs`%hNDd9d
%5@YS!92V$:-<^bbM)W7C?+4!8NV)QSW-_K=.OJ:F=Ja)G`#ZZ`C0t/A+de%r7ANsh4@3aM%g-1ll7m1.'X(#lH7Q@fg#EQ.^=ZK2
%c=2ea=^jMBa0('F8_X@5nU4oWhRBEsSdm1cOK_%+'VleILjJ!-[*sJje.EV-6>XAfD&Y&JeAdC`H1ZDjj0@9seHKpt:E#^11b+C6
%(T[6qHr0bu#mff608VH8p!J>oDC2nd`(0cI8X<a#m<ssBd+U7j6LZ=6VDlOB%R.!;k#^5gLo*dQ^rmj9Lc]6c-,fOKZeRIPKSCOk
%7ZJ4.Z56pG9Wb),HQ3GZ2G&NlbZaWs3#ttMEuE$&pSs0h_-6;0=B-@M_9H'/>&F,_iNI.[\mm,*mUk%91:Y0/Z'Ab-[[*&;.si.g
%B3<AK]Tp_MY0O2PAi_`V-b*Kk[@Er]mF]\i?!GV\4l(RAj.0UE,Os>C1o?\"(!X2Wp<>:8ltOrac,uc8l,KTTkZLqD'^m$R)N&^(
%AIWu13o.6!URc:._mqnc^4pEJ@pq1AWj]2)'It,?Y;>N]\@p1l[%V_Wg"K9Imo\=``L^LV6h/I-\Dc.&h<'HdSRZe0dC+3WgC`/[
%EV1Zd@t2D`Fh._d(\eCX*9iK!.i``8[B[X.XIX6c_`d5m>9*&eB3=3`pWg"`\bU^FNb&\Zq8P=JK'lb(n3^"kq])JG=QluE[>g.U
%dke(InGM_*:?T6upFLG8m+,3M><D`*eXk<OTr6Q1:pdP[GM!MYl*`\?]^'+o*HCmtWr3FJ3n]+?/*(dk*j5JuXE_*p\!B.>?s.W+
%*G_5fg#tRW.IMDU4j+m6NG[!cDspj'0Kn+'LLZl`iPY1\\+-/*Vd&tQPIctFHmm]OQ9O:kmrVbUrnbcJ4qqdJmmHRaM][h"QH]qa
%ZSS\331Hi#rGVq4@JN7mkq(R2G$T?IoacCm4PB^h>sFoh!@3+>:UU;`BP1EJEAl.I"6+R'>68g!SSS\PYthb4i]Nf@%n,s5YR'5#
%I(E&!cA]LMV"\\X/3Ug1L^2`Rp-Dq2B35G]'R$L9&B?if8r/h!1[Kd>b2-5-ahi&'XUmG8):h..j?",E#+f3Y,jWhA<^Y;r:U_;&
%b!3daLqe.gm1>0X-X.+<;qk7<LMks1m8suUgt35oh,k>q'@kS!M(%(\(.IR]olQZIMKY"[&Pm8AgD,RWf@)=0\:urN73h27Wq5S8
%\@p1l0]E9uh8Y8FSRH*JhL%8*7SHUe1nn[HfG\`uSSW-g0+smpDoD1s(.[,q\QN&//<==XSSiem,sK6CLpOXs59d[KJ])gq_Zktp
%dHO\&4;,uE6fQF_DM`K,/A#PY`'/h"YY(X74*F1hc`g+&]U`K#7.JR.:82tpp.7Yr/<gQ#2G0LVg.I4.Za!FQ\mq^MkTI.u=Xt@N
%Ao,Lsa\ZKRAEbOD9C+M4%(i@,::OrOAEYHX9H<GA)^^GcQ5()1a?JF?M5-VMai)jpeWu%4D4b^j`&2gp4d3>CN_P_5\?]j)E9u.;
%Q;-+5pJlTf2GTR0@c\jF`6Y`16IbTXSIkBD>:4SJItk@p32SprhFTJKQGo&tgHNgC8N^m_@J.!Nk.P:%1uQiaT;4kfffr%]43I[t
%HeIXA:f>`JXIu0I+ae&9"hM*tZIIMp%JVc\..K<HQ<b2:LGLNW&G8`O.#GODNY3/tC\oMQLP^''7S6S8=@ihUfLZB5h,6j[m4;Hj
%nJZn;[F@qn>H\+Sm>C,s-3\nZm<&4Q%tB)=oB3`H0/"'QH2$oW%iHNBq-R62iBI]r,b>*2oHSo.55j'i^#i\:3'>.BJ+1J<-Z@g&
%5.UFOiLS#=^A&kX?bUUVq!GOCIX(D:mJdLlp?NMZU)^o7VV;fPro*O.ImU@]iBL`5o`kEUQ[c$lP/L:^H9%/DFO*JVGs!/p=%(`$
%h/k8i;/SdWNo8$:hjuh"R![%FrTpDU:DZ6?qr*`sf06k?n$bOZim(VL5PjtQGK99'A%b5!m#6ZfGFNh9:L+!N9X)gZR6I-*X2h,"
%n>MFN+*BmF@ukVK$BR%1-.7/qnR4>X#;f'Z\V*WH!!P\]ZQ^g+JiFhWA=)DEf_@g@Q(SQ+koUndAZ-D2P.41QQ,mGB$-Gk8/_=C`
%CTp6[V;+*gmADa31)r#``;8I`Jf[_N>^i(d61r9$^g$uYnI4L-G*%g9J(g4486[<2\T%ZO]dAQreC>A3TPVoZ<JW6%=e;LPK0G8B
%Q%^HDRaXam#FG9Q/iL=PW.*oS8'It&CN6X\8gZS)/ZmGW_)W`3XOYlQe[O$jW#5ZW>A>4lB"gs-]%>9eGYXE&I4sRpVkGFh@<%a_
%;EIFs-Ta!c\*a5BgXmN=D1)!-&;A3P1Aq`@7dZFHit]fSY<u,&OD#nr4$Et6!mY,(c2>p#'kc*;J[]!j/9RW'p4ugnn0l3+f_)g>
%1"I8M!^smC#9pQ@Fh!/%WT5@k?c8B9)2nriel,[7^5>?Ob$'.>3mRY;?<"5[#,,3)rK<AUSiIBF=LK.Hf/skS4Au%e%*]>$'16Vi
%b#2@f5odL-"XpU_eC[_&nXf#tc`(sRWV-!_k(=gJMHZ7D(+!jfUGA>EF%'^.P:aPM1*)jhnG`&aSj!&CN16J/Oms#p>bSUg=Jq3V
%HiL1b+ija`(_/-R*Af!'#h7gEi\mMud'_s3Zr?/F509$M^h4PUT*uCNdcV:7eJA*+%a-,l&tMlhG^'R[gpQe.`4#<+FNiGu;\tl%
%0Z/Z,:%HeW$c1E`Y_"ndVHt?KdYkMfLDA;I-S<dO,dTn@fO8<3?+"c@h]mOn?GjYfC)aW^EK?pLdl).fgkYm=$DqTTX:;R-I*:mq
%*`gY<]Tp&DDolO1X"`+b&DQ3`i0K%"/SMD4j?6C7?5m]\(@.W*U<,@HW_E<B*f3?_Bs:U*YN>$)fKehr;7js\i2r9A4tmAS!rlp9
%KjK8_EIsSc$rf58F;]uCB@O^JT+&,9pIOapCH.F.g+h+.DM"E&^1Jqjq)$^a#DOjt8hZ@'Q):."knGlHp2>59Xpn;AQbq1)1!.'S
%S.\ks%Z@bcCm4^s=bpo9?FkZQJi:B9C-t`rcCSdQc@$)@j=$0ee[%iG=bV['dQH-aANj4=Sh40nXq#J_"%FVkJp!;&QSs6VN3HFu
%YFi,JH&e/UrQj^PP0Im@"KC(s\pW[?<bfDW--BVU!ZA$b_iNX9/l:0W8$bj&@8]up/Zc`1Q;goV;j1oU?BsehV6D)QR,e>tE;#_.
%=/D>q7)5gb>aHP=9%;_(8C[rN#<M:.=Lpo\PX>,ED1b[&Z#ha8ga\;LWI:oMOVCOT`O.A!@+^%QQSk'EhsOoXh`nShQq:#D,k"S<
%fKcC-X0I75bY_h\n^JPS>A-=tMNMM-qagr0a[r9DAl?HL;Q4e>^GOGW2K]sC6k4Dp'5^MrZtsOTLF22n/CjI&J\9!;a_7PuQ@-lQ
%G,,ISmkl(VlWME))in<aZ-sb#>g31ll`,8RSaXSJfBT-lDuYm5^4#nJk]d=5jk%iIr:/Y,k4a5smi:f=T>/-fs6c)_cdFkVZLc?4
%jbVGt[iPG9M<XKbBY8o`BAtf6U\m?[?i8j"-]d^Zr;>Q^2rB#CGl6^?#EPHq9oN5"+jJmjrJ?k;-W*'Mc(B?3c/5knBVkNO8]j8$
%pXjRC@R!#t;+F^]<G47?fW>C,8[HIpV`'+@U)l#40UP6\U%P%#WPR,=#i!p"%g/@0qt`Mc$1'tl^TD?-LoE--.h9GWPOS1)Zb6S=
%Mj%>d<sU#4p'G@qN`?,rZ'FlWU38T8R*)9qbEKs]QMs`)f44LW*X#6;$uth686kKd#1RZK:s!ar4"S>bCJuN'1g(<HS%,FJV5qa:
%C+CIMEsEJW/&/'a"C(IQe.mfp0Yt2)<OAbXV5rlrd<db#Nss*FH6.9tK?\G?X]hlE[9UKA>13Ze<-?XmHc%7-Yj7t?A"[N!_:""'
%OC<Au;Eb))Gtj40rG`B3=hkL<)lZE&;u<slLRc3=Nc-cbFB^Xb1u#blfOoQ7#6V<Hg!](mUoqD4@8kgV4b_4:J)HZ(h"lYgNZ[=f
%fX*-T9sgh&qB2ZAp#h^E5,Mh8Q0^]:n]+GaS`s]gI7rPo1#&cVr]Y0*XM0GDXRl:(!`r`=Zf4]jqm7[=R7MgJf6c^0O@XAj@-f:r
%g+LcOfVbd1df.(+Pb,8L.#-G.d8S\qX,bX.Tlh'5E9ep,fe1Z^n'du*1i,3F:Y0\&")XCgnb;;#;*+.d`?a5#MLi3/o_A<*kU>*<
%iSC)*8"&JigT%#jC:]'i@@rQ#V>nH[;-MC88*SNF$'W4i*BT/SLYbmS_S)^dB"EYP]h`K8l.C0DQEKU'*SQ4Aa5<d^7kre@Pb,,D
%-lna/@H-b)Z(pfr=.9D0H"`NNMlJLg#(%+ZoNg+EY<Jfu0n.?t:4p6':%V`DUQ6Lt9g!f>B_M^8[kY/^=HC,kP]kmQ;mnnLBEj-H
%^JB1Xj6,^S*'Q<?f*9KM2t?WV:Z1=Sf\o^V9:V,=.(+MCrC1TY.m8iu>WFV/Lo6UZ.($+j:\Sp^`SCt;-Mqdh_]h#UfY.??>E!T5
%'enNWEX&eo-g=iR-=@J`I%+A2nl\+W;E3aAQ$f2V?6$6j`Yok3@emc93IdPU\n^pjb#qAI+^_1QWG27r1uuhV1XD7K<EV8e%gH]+
%_ltV.bJ=ZG]AZJa<oRG!:PbM)fE*X(a7T^`?KPqb6"jGB0bfGI!AV`Rp$WY"]b3$I.@0)4-5YdlNW$#SlQM/n%g%"iB4<Mh+%>SS
%(f8E"5UG#/\QZF9c01b/F4lDR.]i*l9`]C_DJGm5fa$%#liWM9]1G^UmH10\dr'3XeJP0&)V*>&9n,D[,6O2NS(+fIlPb$TRph^;
%q0%"ko*nK^ob+g'D^Lnl-Co&V*etc`']bFMV*Q`IZIYCk,=P^"i2'R<cRIk`Mms'L!U5X_J!f:*1>a+NA<?N*%elMf0lZf(R9.if
%/<uNP@YGHh;'n/YqI_mdBkf,F,Tq<U,>JVYYo7[<)o?1Znh=tm#.F^+@ZrQ85C"htjqjLC(uFe8Ucnb4G!3Rlm.iF0oKh!qs8LR#
%q^VFQml\.-s8K]5XdU%X3DJXMRB\RrlF)]uOs9pf"5F9\0KGTk4mqXVs$aNsW[3/\3E>0L?M)[:eV;*JVHr][@("[Y>0V7e@@t8U
%IJCpqn-BCJG5DqcocAW=_Mo\qKP^97:qdC.Ku2nSB,O?$kru5.q:T><!>f!C8NM\i!+`IMP[#BRKQ=tla<XdB&_)<e9men9;S6<U
%k)5g7`/E2'!FGE%2MAT6d%&4!FUna:LTlI#aVeX'gM"o@9<OOh;qMnVX%YP9/C$kBl>+mKbFHM5V+![V^)lTYT#?878Ii5@EV%;"
%\"^/,HGEQa/NJI-G7CYlm)cYECs2^M24/MbdJGq=0I9TKO1i;,4+?*(A56pM8bPRX8fN'_Siil*Np$h*!Gs+'5+W"h:@mRYEe;mW
%T2rM(FI[R!<n5DU"5TdMU,d(-BreQuV6/"nP.'@rls9CLC9o:$CU7U#<bCf=[b?%_h5)d*19oesn9;4S70&"PJnabk5]JB%MV@]^
%l>Clt7dXc[;%FNO2`FKr/XBu\,.Y)MF#o)GWC`d^qmB0n`Yu3Qkg5X(donOX3lt-DXI1#@:SI3gm:8?&0]>I9Mjgm!(aElpleKeJ
%o+kaocLUb1Ti>[M@1d1p<CMe9N"tkNc8SOSE07>Kg!gEcT/F"<YGKeWYq<(/!Hq3+$8Ib58knQ9,egc>d\FaS)PD.o\?aMGCLbC;
%lABC8QuKHT4geU(qcQ:%r`V1d6>T<,Xp-:r_]g%*Rr>.#FL]nPHcd,?VCJ^K!>ak.QYVb:lNarZ2W(WMW.l@r<C9F(+S/`'C]8XV
%ej=1Gqm(*-fE)e2!]*HG$B8T]fWimJXKng/*!NC?-a@,5mUQ*).$()gYVH6K]\/H(W.3C6R_>:r/]4HaIli#@]Vqse^!FH<,(G(6
%ps*NEh)ic?YO?o=nBV"2mIfLXmf,_!ek;T^Us1\q.ZNa?Uq,op97Vc8j,Pnn[A<ACH"ZNN^FJRYg?u$ENa<N,$+B`j:@0+6Vm&ts
%2D!+iPU16)*;/12"/2_FR,A.h/JgZF@%eOb%LV)T/+=1PkEZ:SKru"(:088h4Y&>5EFG<jNd&2Mcg*F_V^S73CIgnR0&gQKc]^WR
%8JREkgHu/>!aqppOBC1o#3+YAI-1:Fol<k*.3S>=_m>0:FiFF5D5&X`X'1PKY3)Iu9lh#Tfc-S#B<$C"&"'#%0ndEW>Xe#OO-^1a
%-`[*0W*YK)/p";DmO55*3Al&'BBNpT)-oBqbTstu2U_o)lpei-NaJdT;?b1/^aQcsC2\Z]:/2AWX'HS-FCs4`<'7=uqkDR6K!uFR
%l@pA2PZs@9,!HE0Zf>"3E;d8k!D`qtA7a5J4D^S%at$,,n5LIZTbPfI(2.%W/mtse-"o=0m'FWaIl>Wa+W>Xq!X"\Cbi0I>#jT7#
%/8gK/&m&du,CkRYP(:=P>Hg;`;rmX`?O.Yql3)U!fg*<VGI2&/q[AqHEtLpMPkkT1ZsWG4#T!OaS_3IiWd]15j:MK81-'>)E^#D/
%LbG5ESF)8UF12k>0Z(:RAM_MXJ-XMK-&CDCBu%[ppd(]<_>cWh%PT;<<HkHto!&HQH1p=O+-=)gT2for)8IV<66X6A:)RhF*SG?L
%=u4bCCF.UKoju6I(m!?1'eN]@?>=IIFmRP63m1ddF-`NGdLa_BNj_lFVPR$4KpoYL,C.D$idtf^A0,0)OV,4=(st,5\2"6H)A4$l
%J4qec"F4mN2L-b1Lhh5H.)Wj?NH6.*d&0C'&MLR0>Vo"/Qu;Rh3?Ke!^>Kf4]c#Db6"lh@Pld3jMF!k*5e\a.#-?"$60n`SUSGcp
%-F>@4?$OAM3;+CO"J!o1/])Utb3BpXEAQQG9$?K=7-hS+"AC81'roI?p^uAjN</uSJ,0V@VKHKmQ0r<d?[(Nhi"LQ>i*B=A]T&BU
%TPXt$i_TkLKNQ2&EE*7UaN(NKAJb;+J*a>YO<TV/.V]W:Cqq&Z1@lj9\=#.><PT;\[mG493lY0Nb6H`f5,=`3o3*gPS3kkMK-ogT
%J@fLO<bZG58eXrGaji>5?c";N%Z5_lN1%,?fmqoi[A=sbRnR`,4$6kuU:s-,!q)f98)=-MB;o['>C8<oRd,4,K/*k93n!ID\@*C[
%m\&dA`@NJ7?!:b*6?<5A?V1dlG9%&S6bj]f$Z)#TYDq&\"l`fC]5#^78EH]-ik,W.KBdn,?K[YW^RCV]*7Gj'FL@DPl$$8p2$Vi%
%HluI$F8`+2<[t<AJSD.Wb;OVc08R9pkm^2=VC2'IiEV@Hi5)VG&[;_E>8!%2icTPL8lIUVXuD/&fct:1,9hDCW?2^BWf>kcr8^j.
%_p0Ct,A`e"l%l"6d;M^B;<\L>Kr%utpr\dk?%a+-4-%^=AXR0u8&SUi%@@rGP.Hbp&F\:/?s6/WF@8,B9+BO];bT\\T^1*X@?H:B
%3hdM[?Z0(e^X3Xue?&c-;Uo/K/V<;pd&MlIJiatbMkV1&:<qPEAeRuG`;<dK39p^?F@96_1gJM-Z3Y+E.p1Ds(kUg;R[N4>\BEEA
%.ghO'=[d*!AZPo6'I_85edMr?)K8,r_CWsUcA7f*E(*:8]@K\AVA?.Fmjb!Y&\6TVD*U=D;i_q[U+l="m?I>XS*9`+M&j!Tr!Z1i
%G.#4/*j_loRT+Bn%ArCl>/7Rbm)aCGT=q]1b9;Ye91RJ]@nSc.R?!*(G8%YI`KlO_[H*WkU,*felS2VTM(\bJ+O`-UoWUu>GhO$*
%^m5&l7(*E3U-R]nI2I?9$H/.q31RGlLo9]]K%NsD?4b*oB1mfo=biQ_2A!gg[$hJQW;_n5F?#pO_;b)FLHu"rTJgA*h,p/P%5NhA
%^DZ$g>m(A]Q5/jWZnT\GJD*<n=-n1N(9.DCV%62)C_o8;g-Y(Q]m89HdK-bP)+Fn2fEHUiD6\kOMc@?_#GL/Q[>P"eC-i)q\4Xl#
%)@)s`=k8BI"0-s2a(pTAktiV2/ThkB#/^=(,H'U76T$bDF;^Lg+=!8ieLV->44WOYD&N5dhGDc^)_#Y8:!H^,&^SI\.*,I=::/\M
%DA@R)nP.t:MCF;QVdg,ngOGH<61rtZi!rX"F%&TUlf(`P2kVV&@R?7nAt/$(OM'njN[oG&+lEjY[;cp?L#c;9G7[bRhSp!lp$EDW
%,)s^b$Y-sm1^+]HET*C")E%it8D[<La"9!V(^'3!m'jCX%O>l+*Q7sG2fXJrIMHf,M4=$X>WkP2iO2-Z^Q1+-SBoi<];V=VN,ab_
%<Tu-YITsuahiJcYm\"PnC"2F@^kCH.I&=Z8>E>dX^`?DQ*LPNrS:">m"ST=M0.XEX]YEB1Uqk:c8%"%QK%q1O_-O#QbtDs^Gd`"&
%[mTe4XUim(.E+WBC7W#[3E!!k4/-p2fC/AdaN]JZM/F@>\Jg3:bYG^<R,bf9DFqW)cCK&34/2D0d3<p*]:jOq=@YTXkoLm4H(<3,
%QHLN!NcRA<>`I9W#hk'#SsJ*H&Fnh8YG\&IVsOM'n,"?36YE2X=f-@i.f*ZqgGXB(BT(^o$QH_(1h5lUEYH&[B4LQpmu>_1FdhO%
%dLE3NUM`<!`s,IW>?9,na1ft'p.hG3gnp"`1[j28Q*/,]M-X3*?0%`[%*^9&<)]lV[*fmi?/;PSPV*e,3K+"CZX$B2&\WF54UNo9
%Da7;&lBh4GUgsPpTIONPjj`rOTddYU<U!8@I^_q$-K#)N&Q6<c>`TMrdLia+I*7DNb'$&cH]n`mf;$isF@7[kYCpei2kZ\R4drl%
%V>Y]a@#ul(DiNM,Wl!X`FmEJCqRfNo`NEtYi[rMlj&7huql"D$N&'5U\Z5@M5V]`"?0VdeiO<L)buW2)^WfO%"RLsE>&@?AWd@"*
%_)>M'7G$S^=m9AMHai3UO.Mi-eLe.tHUWE(<<FRU8%N9qRKgC%l&#f]YTg[mm&CT&NU2Od\rF(mmpNaS`bp==,,]:./a=;BGVtbd
%8)V$#KX*f$Z>JciZ9%$OklNbB<=/1fcSDWF+^W-NF9BfK3K1>E2POl#/k6q<V5c)'UAqbD[47KBqB_"gl#P;&==WU+-n;7?60i#(
%CPNC8ar/r1cGbP/-T@:ig<d!hgJEf-e+^m;?rJ.2"0mmW35jo/+PBlu".]tcLf!ICdJk[6O(^':G]Tk@c>bh-lD/n$)MV&m<[Ht9
%@F]Qc-T%X"5dt\T<J.i9"0).?/K@=3?>e^eWpXm8#?!FG><!2]_&G:_3ZPSI+E_pGiBZ[Ih*OK?_K$"h;Wj&l*(X(1DW*j\WcAIP
%;O*MO3061RDW*j\U2gVPHZ1*MNo.]r>_X@oalD@F(*</lN")[_lj59d(N&A%W7)X8W;iHU!dU>\F\UC^XXI#mBke'dU-S:<olr[7
%Tg81+m5j0_!p/+gUNm<YU-SPti@<cC!mPeR[fKR;RshFAXsf=iVQ,15iRSRYc"SQ\M?<UaXC\aj[0M=o^_O6^WaigZ[7@T6^j<ku
%<)4Y0I!C>91:3"gH<b<$5OBM+4Y.[h4_l-R4fTT<>k04Sh,%LTe]qQueP'DIe]P_VAg9%IC0iXCC7Sca8ig_<..etSSn_a`;LM<"
%7O=@DlOuq'nVX1!p;PIFOUT]uNK)A(MIUA0ij#k[qcMRSKe,q;2dN1YP,6u^ajP)*A81A'*Ej+,9=ldAV;7BZdVeYfBlqOq)Q[eD
%V;3uQdVcs7l0Q;_cDn":V;9X=UhZ&O6LSt:\mr5G;ktaheO"56?;1_rRf0Z)]#ir&kA@K8'r7\^LiT<Ag2a">1398AKQEsU$%>6?
%.%A6@2PhY#p89.;L8lJ(ij?g1Z\KQ0[@81N[BU`dLgfn[DTb,i[*g>gUM;AsVkmO'>@".//W`^!*E3K:`tVV))FH$l(<]fSRt*TA
%Vp.0On0"shE1=otKsF%q9&(\*/CF"%Wh4'ae]9k/B%,Io#LWF<b]l-X],h>]0,0gXW951uY#KteW^6/*?n6_fZt"]*-=2`H/7Ea,
%[NF]fKZ<@X:,,Eadc6?``m.W2780ndLF:*->Rstt@ook30a$F!*'6jjM9c1t%*OSa,qPnAim:GE37E>:GiBW0e_GoCL(uY()MIA`
%O-4h%(aHV!?eE7=Y%15c00fLE'dc&#C-tEh9QVU1KBag]W/*!*gC>s!#Ra3leKA'q_:ul6(VH,Nmghi!mIf1rS2iF[[>j[,1lF]5
%U#F^'Vpq]'Sl]TGonpJs6e$&A\,.1/>[+L[C'N@\99$CX[FAA'[\\E"q?o-$'^g:/>O["t+(s"/,7Yp')!t`=#rGoJQ;A$j<8;8@
%k)?om"6+Yc5_W:59"<4*eRM?-a@rDoBh0nPF7g+u"4ZIF(\*m+*m-6pS8]='X[/4AIY6FOBbBM58</c]iNH()Up;UG$`Tt/IAGDR
%79YJ9G'UoVCHk0FZP9rM[u_/RQM0nomOJ']9%F1(i`6O9XAY)eS4qUIhh\K?"(A)nNNbm5h`FTqg7kHGK0kPLVOBD7g,k*KWFoi[
%Z!2qJYr"GC;2pG^\V=*F2'3Nqk^YW[e6fAE1+._L4*Y#WYKLFm9$p_4d2L^bX/:0Y`dX=>s-DhsS*)H`RNO2hK6Qo$(7\Wr9T'0t
%QYD'E[)>jt.T<(<b5H7)^un\K"HK+SjdWWs21`fLOgo0E`r_f8-NlSdIJUG3RXh1T&kVl4GBLZQEoKC#H*U1j%Kkfo2[[kY-A@"[
%QS.-PPQF:?1uO$IgnL3*Wb[Gp@<ZGHnF1B*:SEre$J#a(7pHb#Kf(r5<-*\HnF8n.2n#h,9%0c=&!OjqgSZMY)4L*N4gi4aApJa.
%6cc6U=qqW'\k+*d3&hQ7?NjmhXeWh2OmJ%bMbMUn`-C\Rae:o?_gsd#Gl8he[t-<VV-m@q%/$>*Bg-uaKHq#.m&kNqLfi*?[1:9i
%!heI_s/ANkG02lRTW6[AU]FP=7(bh="QXt3ORn*W@L]iA,HBm2,NX=fd,aL;)2pE1MN3M%AK5Z(\gB("5n;ao7Fr8bM?,0/52!b1
%12,;l4UB:bW"fnKD`oK0*AC<)hYS2HP(5'/=AuZ:;&Z"3:H/B#l['RYP"h53d7kX4VR9;14Zn^)`FqmYo5LfBr@mV:Vcl@2Tmhb8
%<)]Uk]#1k5W]F0><*\Vr4UB;*;&X2;Dh)ONhP^mT8uqem/b>Q+Wrej#R\@1OZY8Z2"^:_8O;<".8&Q`j)UR^LJ>tdC:SZCuQ*QUA
%I6&S'SG[@IOHh1'%o;Ja`%GLD5AoKj4fg*u?@_1W\Jp\-,2^8"YWCpt(f'`Y5\6@H5oQt+Se$AB]NCs1=*-hm^&2jjOQS0fH8a:G
%3@!YM&h)%:?Ho,F%Ih+6'^"BadXWV/gF<**VS"*$Fj8jR/LZAI[0I65bV>M#D*rT*FEfuY(5!r&S1@6DGpP;nIPs_!G+.?f&?)0e
%.aij<ar6<'-Y@"R#4+0?9BLaMF_-1^@&I"(+>G1S\ruNtDQi$W!BpYHP(Z75#`'q2Jp'_Y;BRp[AVL%=)fe*_+8.4aRU+M-h2FT$
%]1U9Q,N;pbRUDu!),0Tn4XA&*jQ3IKC.i'8)N=`.2r$h(>',0mF=dQu)Hq<bU^l?IACA3CK]8+pTt&K&liPRF3=eYefGTBPPo#4]
%FLe]BV+[Fb&`<@0U*4kP'BddikQbl?'?coQC7":HmL=tAGoUsK%[r%'%0;ee?X<!>%B)kt%5,#DMF1VVBk'@Zo7d!.Fb=E!@Q\.h
%9\Y)$[$I4Jo%E?BHBEWEa"`[b*\ST@>^Whm^5'/NcUJm1KZ+0EOtC/=aJPc]M"tM0n<(XjS2V:0&6R74W[L654^]J.RO+++K<"-K
%;UPW70.ONhX,Y"iI#QLrHR_WM(aVUV;XmM8WtIKI(dQb9SKHMoe?t+WHBd+f@$e':3&@7Hp+8^UWA`7NeS)OWY$Bs"6!/Y6m1*g@
%;BrpddD,He+4ID54@6m'L+p<F%3=guDZWgBk[U,?\VBH`%9+-TNaJcWX9-tSrjK%#ghc:QQ]mn$Z"Y:AZ^:fnlLTS_\MW%7O)\=`
%B\mPSX&f$UCc#RIJepVp7L1=[3!qIPWouF,W!@-J8k[GPoA)l_#+Oi5Mm4l&nKk_/ZUJnT$N4Aba]45`n?)t[2E/]XAYgeQnKFCh
%+qRsAfHMb*b!nq'<_U<?kqU;fIF(fUS[M;HG$D'cg[`):3Qt,qfG8m/rLH#Wh4Ug^p[Bi0WJttpJK(MoA.g!I9L=Q8E1Oo8!mcTH
%jARRas21:/D!9^E/3/FhcJJBNQW:A8C/qPkJR/&[Tr(O?X]?W[Fm"mDn#0@7M\3EQ+b[nhb?G:-LtHs*n,LP1]C;+a>s@!:b^)T+
%&M5H71G#g/<[#n"1W3&bf*nF61-CW+KNc+!`B3d9"P`_r/gkAXL;""Ud:Y>6"e6af?sd0W7jm_`OlV7"]>uh*KN=uZO8RiPGSjhO
%(HU00MarGh9[B?`8s0J:68F3XO_F2[(;gX+EiB:m$kr&EfZLONo,pURl^:JWeg+mV"&);?<$@A8`NR#,&.p!Q?*+iejG<J[*aAmp
%6!su\E5aIj&_acu(DZnIc"8=n"CBC.OGu^,p%)l['ai:F@G`hlioEfJNH[OmZ$tZ9C3\#0e3ug=a_GFsS`=:`\H+cWfnC1+\$@^q
%0Y.Y.#`CZ^L<1?lRPc?5/CqK1i2%k^?OR'q>CcO<,UNNSgbAYgjY9]U>$<eV3gLdN&B0'qai>H2B:d^B),q/.%&ML9!bZt<XXDbX
%js4>-)\tg9)AX+aYUW'Pfq*dPl.&tk<;Wd6>P[4l39PIg:gTP@\.CXQb@?;NAA9ZaRm/BfFUj%0D4YYGHolsqTMU\$eOSp^0<Efp
%Z#,KRKG;MHm-,C^q7u;3F1-`c6,SKN"[a/$aSpL_8Pj>0R[i`,HH3@YU)LF2NG*;hi/2MpVV3jKgNIhX1\cVbJZ8:\joNep4NU\W
%8P8@^1LUSoW[Lfc'_'nT!BdDfF"H-Wl*^s5P/iKcmNu%GYG"Wq(i-r=`-pn6#Cnfm&(Ni?P^qdA%-Jao\f>n9r\Wm#3OdctP),$r
%emP$AJ3PZMF_)s?%^Y6=)J'`U;T?eeG6^^6T,4[<>ZTCL1HA&Xkq!%:ms)8rLfKJL:gJ%iR8o)267bnZGc!3NCb.us/FN(SZ/[^Q
%'<:MQF/gI/8qlmRYDtSf>1a%<hp]d\4D:=S4+MPYNs2AT^ui&@,h%VG>)/"Pq'J-.FLn)RB;-"'T!7c5O`5q4l28Aa^f$J2cFATF
%m$n\`F;?_R$o$gS6V!*\fg%IaTt65<H)SNKL<@WWOg):daRLaU>eoX4VhAO*Ya9._;^,[9R3ZDP%lZc&^BPO=pnC\H6e`BOabV*'
%^B706Pr2-)?eog;URX">DL4gV8PJOI4VEf'Ic@WGjk#;#V`Q+H%#\C-]aE!]Mj82aLcA+U[*fh`Bm%Op@n7E6)ln7!$.Wj1b4ZH9
%U6iE?%aWcls2UmQ^Aa&C3meG*p<5^`[-_-KH&Al@HqKQeVn%EaGG.1l'(Z(>*V=DhShD+eV[iUb#GCS4_Cn*?h/B37UYJf#VgnZS
%9eU.JpZADY^&Tf*.-"!r0%Z'n^L(st_TjRFj=2`45d_7>TQs:DKpFab&jLXRkV'37=e`X*i,E^m'X:<kLBq'cV/F`C?e/=Pj=;qA
%S>(G?*acaPj!V;c%E^aYh#U$U%8j,S/9#'Mh+%:c0$3D7"_F*)4B^Tp,/m_G>3m/,WRaj<ZI`R1btca#TMPn[jq82AB1\A!'t>rC
%+ESBeM<Mm]LhAi*;"rRX'0[Vc2[\DU<D]?IoJ]"LE"f?&Cack8!LQg>lk&0_c^o'XoI)V6h'O00ctp5RW^A$(Gkri5eY"niZ@pQC
%5=+8\+4BG]gs@\MNK@5tb?X*^JC2S:+@+KF%7"6-("+@!%@6h*hPOk?0%c`foDM>+.65AF5]L'f+Kg8k,[e]%Y1:S`(p7HTC\PTm
%M2_4K=fQ*Ckkb,O-b<EJq&)sD?fd=-%+TR/<qI/=H(T`Db#3\]#H3HrIGHSai[!C4=._`;-G)`O"j:>>Q::bISa$6s,qLC6]Hnt=
%TdXZ(&P0%PYGD<+W++8t)T8ZX:;[*h9+qR]I+)/lFt36.:#)fdDmqTOrK9!!BNj-`Ke@\FmI82r:Bhk0fSrX'D,-]%^4Gt\BLq;4
%Y#=)'s(Q9/F$-?mc%h5BMs/ZR4PgNLQ"@JUZID17;C@0os,WG2>Z@%+B#e\S6*.Kub+`oVK#Wb[l9o%\;LBFA)O/ek]ua`I<,/a,
%\Wu,cd?J3PC^L9h6I`!CQ^bSRK%FS$3mjSn'S+u_a0"_jM=9*O4S!^klLhe>NX;aT?[\j'g<^C9^"^!k)nL?WTBkdY?fX2id2mP,
%.=fu?=u3-,Bg*=.GOi7[&/L_g,)PM,`W+*t&(n]&.uMuK>$cGsb3Uu3)gF%j_KV+*EI7=`BVYTMV"'[)9n(Gc#2!&pGmeVfY,(l&
%6kf!'=bOiSjmgoa6F$/6_J_eZ@T&MY<PVS2F^1+#SEL20oson<A"]n52[C2Q=c4%O6tRQj;+jjSP[Dp$X=7Lh)\J&9agO/h"6(-)
%1rW5c;6@a)nl99EnV.7dO(qfSo/0*6YX?.nI+Y8?i_.e1&C@D?bsj]S[AA(*/5UAn#3;9-,NAUKf+PR@+9l/R*F70H+'iNNVtM."
%=(pk0&@Ra:;EMj,lssuUBpcCs=uH\l71mZUpc`mh>"L#MX4HKCQWb*bRE&NA^j%_4En,0*r-Y??@gHRC81VV3h2SO+1eqrEC.)d=
%SS^$35_e=$&b/56A&j06GLNbbkVt,M9MZtQ&*f.10ADM8T.%IRG?@d'Ri%""PuW`)j^n"*BQqV&l9,fGH$7rPr:o-)BRD?]`"2EE
%YN,2CI"sT@F06*@CpufZm4'nemL#"'622K5I)W4b."OIDmjBd&hbKP:kNHIgH9P_0R&l0!039b=b_Gn53Y:&J,okgJR:/H21@24)
%.UZcj-kl;uPAh?l@lt!9<J)LE7QjG1_R);]r.OIl!YhK8D+M$,@q0?!,lD<t=4W+H_\MjjBBI?gU\oD)ies7n[WUh<i`<(E%4%M]
%:!6\h>J8M:@4^F;2BqS'X7*J_=6+83SLR0jk0&.>O4aG:CLKZB(19?Y;ah9[5?,"Z,0rc;GdBhs,S-/&k1=p4LmH5#BHFBD9#qIC
%i?MD]p9'L6'<XPFS5_Gc*FVuA&JK+\UCJDid@,:nk2ir9<>JG/+deWVJ*a-nU$,6`lQT)k'CW]QWXb]%i@hQ`Z+tR6X9Lsso!HIp
%S"WiTBW8DI\p`(O5Kre^P_`rAFd)<sM*#5^/%a%kZNhDFmRGpCqETc^^Y!<?*[4*Gd1dMl>Tgj:>+Em[^%P;-e/ZJDQF]OWEJMgJ
%iJP/,Z7>fH5UoioM]b4]6:XRD5JSo8[DPBj>%e:!H<0[nLYCaC6-i$f__M:W=*Dg;ecMN(8t1q&4<W*r"-qh[P#J@-ITOKPrbh&u
%D49\-^qDJ*]NSLk5f/Z/[8`CA$FFF7G$sSF(V-1pZLak9c>dWZ*g"+$CHtUs2(hjNH?NtJ61'B'YI$W`:1[%UqS?]PWW`dS4;Y?R
%%&=Dq:?s0;;QFZCmE7.UpObd:A;4\(h!#Q'-C4MjEtQp.\o^ZGRhS5.5Z?W><HOI/?OBbY4^c8aCDHuTOJZTRBZ/-?H#0]:d3X!q
%=QdjKbSR1&@/%i0Y12GedOm<:>(!1PR2+jHq]U:O@8MVB^&SejCI:.X`*DoX<)Zc,^dcpnC_95NaWMT*9<L;,J@fLW=,,=HBqm\l
%!pYTIL`MPXUP>#].bkO).5'Ab3gP-.XJU^S.`nffP/s5LEWF(gb&N/I8QjY.9tK])CTMmX/]qcB?"]snRQrd,R&X1q8?ji9-@1\)
%Y>C2,VLQs!Mqt84;l%N"XJ/LaN"q)jpt9h+>tdY(*4dgU+sFt"$[4&=TYs%WlGshZ-\\!q#gV*X7OrYL`c3%k%Tr'3UZq=5h`/S;
%P>]_LCI[=dJqakr@1`MP\1aIH<757YVofLt27:?==m`$=UB:IJ/2uORR?ME)R,F8j`@]UtUf':`d\q=?M/=Tu(UXE&l^hc?*_:9m
%fJgc9)pLcaIN"PR7H6r)!SajDWV)7..R(3U]26WZ_LO+`9Rj"8U'_Nk0=knUdVD)[X2g%-!7NC(e5<r\h4s@Jc$*0R>mXfqC0il-
%.n8&8R.=:3L!D5Q0ho"%Wt0EHVNm[M81-c=%i\9An"*]ugo:t6`FR*^4QN]JJ@uY6`N@*B%Vp<iQN9\F).Z/Q9;OfJ@c(ClJ(HSs
%>I9kPYck?4F1:P\06m<3ZoJW'T_Wmf:tj.`3S`S-<%#$feVUJ-gXD^<+YXRD7H;+ddW'$1d<4bnLedWqmd&D2ZR/Xt(^Hg6ZcZCG
%b7Pn@5--35^ogKIeA\LeZfG7gB*Oi5(\V^'D%5p\gL>"sSUSQmFnoC@=Eb<']#YPNka&iT;**qB$dE-J=cBSkMQ;rA$+D4fC#A`$
%h8u%7.\0_<;o90U$&1V$0%/#2.W-8@-=GA%)5P.9;"].S3S&SANbrU'Vg<Q&o(LF]Rp\F%?s'+K[u+L7CMcW7M+,g3guOlR4(p6l
%)cc()(9Yu(D7'&JYbL0^DmBCfO9u"'>t`s4]==;C3_`0SFZ))8'#)bT_!F/&A2f\e?&MN(pT,;S"eZ^N9'%1iOutUWYWaD)WnO%o
%7;'=rgup`p8iF-lnr!i?99T$4qHAS%I`=-&XcGs\eYA?<Pqs4CM%,TZa?rMd#rKT.$(oC$(jai2,@ZMoeiM``3cbDhR8e_Nk<*Ef
%#K0,;R\*?#;*D"[lJg_%H;5:=FDX9j%&YOtaqEK<9k?I@E#r:bJ>+)+:tMFDb/]Bp2<CUe&]p0rJD,#*5l'(()5J:H)Hm<3!Qg2b
%J650^]oF%(=Vmh_\d'Jc)$B.*<i:7!1(_if%uAb^fB]B:?950e*8V)p"[J""=jTFqd-+W2SO".IeA`9Gq:1#jkj*O8QW7FK2&4[@
%JE54^pI[T>)`r"%a?-K&SG3Oap"sWEe-!X/O>R(:=bnr^a)tY7kk=OQV>Lq5rJ%$.I!&(P`4Lq31=,1n<iOAnE@s/NR1Pj^HpGY2
%RJf1K-P2'h)>OFhl+BF-T0.sIcPqoe5PijO*<.@$TYJR=G.5i^JL1:`Eat%s/b0pbp/8k=K$QX)\9[q#fE`n`b3h)jHQQG9ftNn,
%%':CCVoI_o-a3tc\f&jtQeGr&)ti1^*Mn]`QCGT6isl)3V7/6c9:Ru+3$N+4$(&mbC$IoahSJk<,W`@hNk!-J0:+SM\@AHYB%B*f
%r1(i:78'd.qqY$5:cHM4#SBCqq//WW)b:[eU).VHMqYrN\/p5dSet`rPK`rrmPRU0MclG7=Y9##`J&f2c$/I**#b7s<APGu!'IXS
%$+J?=7r7H>-;.KrfSZU=(Y<Y6e>.fAD_itE[f."]4VY:-mK':DRI@$Ij>n45^!iF`Sm3e`[]mf=FK1"Sa3k/6/[J"[pLIG.nl3UT
%(Y!"[f<+?h&.?!rI7:cmn3225/U;/J`o^;11oD&3@L=B!:UJ(T.-bM^?VE`fHP<WA.B)$_m^:ZYQCc6NLdep=2$T?/*87+S5q),c
%lrc**(uMgo@%\t&dq.q/,lYa=pC@>E?6,+Z^jpH-1d-#"BLbUZ-_mlA!SH@X+*!(l-@EYk)KR,!S=X$EC,0hU"0@;WKEe3Lb$S]A
%_P;$J)UK\b"*p?@Par<dd1"&7V+DXS7\?`(7eZE:'FIT7/d>cDaR;)3-_>721a@Y:EKF!+B)")&Nf0AKU?^2V(tURWiu(*6(4^uQ
%dtTE7n7^<t31f5?*MDEFE!8a=d(BCYp)9Fi-pH@[?`F1>*cV;(9rN5q%TN+_V0RFim3hD9blqQ8H2Z53.)SJghtH>Z<U&0'*!+_O
%7Gj6%IJF5\SU&pG;g4Y]6V"(:;BW]QeT\>bI"f4MKJdLE05:t-6J8E[A[O/k=nqB!O@ba!B<2L9m%:1Zq#!ZdKD^rA&7<1-oh;<a
%(5ps'\sBiVH4\4X^UQH&jWgFu?HhEpN7q5a3WZMS-Vb87$;1WbLU(@p<O'P5/m'9FRF[ohUo%"h]tU7"2?q*P8E8-5ZImP?6<+o3
%0tA=:a)U@F9r30H#@jB)MN5qW)'GR<5.)'H;g%_E+C6/_da9p(QuCqWdX8Erj3T,9TWa6SQCL8'Z^nPkR3o(JfG=0,/=fLKZk<CW
%kV"E?"MIg_BS?8@:fJ+KDJfk$"HcGlnRQ<rdp93n#_[/NAA,Y*K$c&GeODDJK<,p<BZj[WXd*=!fV)Lq]mkd^cEHn(&0Xp+*EBF8
%,<"P+*9Y$!_EQT1`Ij9LHL'4+^nT)mbsX?#!pZXNeOXA/*e^DTo.\McFrjKC<R\4[f!N'Z?+R0O['PA.H0Bcn%T+UnlZ%sLk4*%9
%X84S-1KJ)<-c7K=Pug4[#:FgJ1Egreg+>FGEjNdQCI:b/XW]P@f>@a=nnV8i/_DYC&*ae\D>2:c;HG!I\n^n`4<X$nelLt#\i.#0
%dFWJG6Hn/e9m\JOb3\7MXLL^TbQ@>#F'Y`\&Q12tOU%8t\mQeD/?\r%pgS>P.TBT6bKK,.GeO`@:77V2UVM[Lh$?""-1uQ7.@2'!
%A+2-mQ''_TQ9d>LniO$FR<0q'd`mo:`Gma]\47!JR"lCsAZ4ib:Cl*tInS'0rU.'e47_eh1<:N=J_3%'UU%rB\!e:CJmBAW@@ai7
%9U"NiCW$[<=i>ArcUlEk82)/HH=D47b,3mPYjBU&.g>]\T&hm-::`*WDNMhhV]su*/=6NlBFT!H2pdCB3<qaL.A$\EAU`h6#3><C
%,?cAQa]]aOn2jPR@)hfHI(ht4X\0ik!Fdo"jF@k6Y'i3MPdkbKHO.\6YfGhCKXcJ3UTt[bVL3nT,!MYW;8&K+EB,FUIYTf=NdYkM
%1DiD?a2/hsNqRZoPXjt!6Af_of+])J$qQ8_RX).R`6EJ9p5]+rO4bb/(fX`[-t`i7M4hVEqT#pg8F';Q?p#kN8XKV\Z7IdIZ.Grn
%O41tf2U>iO@Xtag"HUs;51l7/b^*G!;'u4pNt+KD8>[d%'7R`*e(p`HIGc[_?J#cTQUs6$>%F=p'&6Mp7_J?;4)s,h7>m2Sq%qA7
%_&a/Kd3eetlN/:hDpiOr]@Z'c/+VmCk@W;Gqm=\8F&n3^*,=pNckeh"I$n&Bdo3[1+5X^&q"Vg86h=#m+H6YA7@LdhD,dCSaZhb"
%_O21/;OmJ,N4JSqd21(!C;)j4n-et<U\Vpp:',4A(c9j8)C9T'?l/fZBYO?_R#h>2*[,b^dO8jaJ;4>>VMl@rP<:D]A7;Y)=Pjm+
%/QiJ6*Wb`O)5Q.Qg=O3r*o&#BAOuDu,?C6A[Xc%./\,_Dc(:gr4?HMsKtLXWDo]<RI=LOiTqd$af`Wj+'A/MTW7OJ9=gff)n5m$(
%Zm)cXaOEXI>Sj*6&8f3<0.K'SCU4db+Xj&(m?D3rS![q4lrUec!nf)5_peb]]$'(7ITscE9D+:"3RqMRJVTFXr1jPjXsC&7&ALSW
%.+HQo44]KceI2_E=Mhpl6u3)5Uo$<j?-<>J]OJ.!^t+1-U5"AS8$>]PpI*u&#qk74L@u5:rOKA5R?Ka%EYo-iK/*nqU<]XhOlcm>
%=3ZW*j`t8-p9uMH$X8NQI](e[79YnE`d,Cs(f+l2[Xa$W^6/?/^+"pXb"L*J7S-X(P;cn\nl@3AD0e?rD]k*smgoTcT!4r)`(a7f
%C*ZRg(2rp2&V3N<W/n<(1`>";oo1e,SpE;7(s61&.SXugBj/C,!>05m%H/g^fhWq1>FHVAQ@/I"X!(-3)RjSTJut$O%51L1X>[s0
%.^5o7#GAbtn8ru<`IRDWEjbFKH)5n$ZldKlnRH!dj9]f28#ae*k[6qhbKisM[3IMe&mA:8<R'65Mc>OYPi8DPIKuNe^cKF&\G&?s
%]:ATD?n@/I^[AHnn_K?aaF)T;4imsC9IG`:ks3tBF4AM$@25Di?/%<<>IO]l1+1R-Yn=C4_@($G2LiD/B_t3`\BL$Zc*D.d$5DPd
%%DJl^FDT@A2c5VK[DRNI7@P2:<@RITITFkhd$#0<G=4Qc`a,99+E>lf^+ghVMhQDD)D4WVC0Io[s1Pk8#>L,^SKDC':4mclKNpdc
%!*b3C/(h;n-p$([d<e,SSZ,Ql;FJ:/a9WlYWliMDMJ?O4jY0+Q\+"s<$.qmJ<Q$u<I0jr0bM8\SVf'i;\b#U>]8ut9cQH/Ip9W'G
%^?nOgDWZ)6jpU%`b=a0j5LVOBqu;B)Z'/KZ[QCbnf!4%&R<OejVTV)E]EeK5Y))q47eUf8^PpVihAsaRY,qfY,..k@aob(tWe4*2
%>b)DLGKn(R+*KIA+["(<EX%s#)HnrLPAA.iQM:16npuFRPoiV6Mr4]2Mn#X7hbAR\%i9?+0*Rk9/5`!=jB:]p?4H2',sol$0+IS%
%+n\[A^R'dOVK6g*j@PsB"Qaj$q@fVh`Hum(<*hKmX<NjLkl*hHRk>4IU[n6p-nj6uiq9jsF_!'QcjFZRSEKPQ8BjI&8-G2m+JDYF
%okr3paW%e8#,Ar9gTl!>T8E]@HtmTfMXn;X9m]I6=((L4[\hfk>ClIj.@MX9J0MA"rOk(851?,k7f+MP/bJ4tJL3KF$?u%-``_UG
%YaUSY(GHW(g>d>C/0F>_9le9&V<1e/6!,VL[7ag9aFLSO_kFo2jkVnS'$Q]&&m$Md-SC*[E*MDG=HsFl1E'+'Dm%?10K4*ANt8oL
%a)@UfAA:3&*pl4/$HL+nn]0Sg+tdS0?IWg)9-Mge+=i:sN)ZR&S\]*;,<Jce^/uaR)Do9,>8`@cS.$;_aA/KMTpk&B`l1\PMN7E/
%<YLQQ"laR&-"i=1+<,/8m)cYECs2^]e0GN=FLH[OZ$=Yf'$mJTK)h_nA\e(0DiRapc3$tZ3Y94kL!*NP!&2ORblgh5Ujoh9UHD;O
%GEdE`qRiauXWd:=9/V2iY4uhV[Opmi=D6EHSB]:W_4#C&JYG2$^p?RV]Fb(5B2RX+X.Y>:\)9N3Q]!lG)4k'j?V5/1WGZ)gkAW3>
%-<8W-Z%GA+9MX@_/>BNQEr7J740Ro[Zi]bD=H,DO;b=]\ME2/$;-%fLOI?@&o0(ASp5Nkl5nnMn61eo04YR#5D5WsK/o#tBW]+fE
%"(&/bJ^1Q@^sfP*5te0nC%2N_6o6#gh-[BMO"Vqg9:r*:a,?hV)[RSm"6n?>6@<Y?BSQ\]_h)K@+FHNg,g0GR%P-ZYJ9-rIDI8d1
%`d#bnq407h##eK]46mp>=t9i/9CdB1bLS9_7oPSjT^<h59Ja%j@pI4PN@CoCNg4]OC,/^FDEr8H<1Q$<\MAs1l`toiEQLMr4%_ZQ
%##`bsVZ1nNX]BX%ZZJ2lL$D'=`j66+N.-Aq,halsE>+pR>@_Om0-FgU3mKO`-nA8&C)L3_'7Ou3-#.@!RJ*e>CC96l+kV<ni)UT6
%c3QAL"SgVSL3`:)8?$/-QM"SCEt[YS-<Cp&m46F.+QSck%*<X&-c/?24EY%0X/[(B);R<=a^:mA'_!7er.*"(?clj=h,I+PX%8sB
%WV;H(ea]>VS5"Cq;b!Q+SU#U)`6SIkaf<cXPY.kd4K9RJ1ET5a3qRlH&lm1)kZ'F4K8:%([2`0H2NhPc'b)FG+E"e@\e_QI;mnHe
%U91.o_Zm>p":+.e(o.0oD==Z/q,u)m'!Ti:'7V6Q/%IOYj(^.L1<T_sObW1djXD_<n"=9T2*sJg"3Roe<M\MSd1NWm;ZkS[LRNf8
%es)6_2O#d(qeOIdh6Lr]h[knB^70XhRg.B$_3nuH&IsJ2)qVp[CVnp0%H[<dWR]c88<(prf]^$o%CW!d22,aNIhK5R>P;@\$4gpn
%`g@<RQ`9ha@<>/\q\;8QRnP[u*td6;INegYZ*>AK)?IG'c1f81XcJtmH8pHWd<&r^Q=iWD3YZm-FDC?Beun/Jn("h%fClW37M!g8
%[GJJiTX@1Mc0ShH\O/6nWi%94V8euRM1s?!kC#Cc5!1CX_.=?/G._\UM#%Cc<1b)tg)3>g7\,Oa+5!$efk*a`AH171:HqkfA7m/\
%Fm<_qY[NQmDkGW!nfTWCZdV)GfD!&W7$!UE0&A-"f+N9r&$h*hE\j[`LQ>J;h'gA:0Hg&b@j0+mR<<,Ok2Fi5RJdX6,umCSU#Ylt
%XJ)"_8B5mBUSb$Ih`%m\52u0!`5T`Q+.7nL)#FS+--T1Pn2?qq$V1hlnUdEm]C7%KE9mHN;(KTj3?[+@T]KS9`\l8T2\!%==p<qU
%4W[%3Bf=(9eA"(C#:BOCDHVQ02IK<iUmJ[-d@J+2NemEl[m[ld;9o*=JnEgFWUHK\0*<\^2d7GpBtIrF7JaLj01?e'71V`N2U=cm
%s%2o/Fao3m1uu6[>ZdfO*9uCdmR(4;@"B^F.BStAZ99TkF8,VUS@cl$?5C:3%Mfe5mD&11bUg.U5dpOiRS3$uN)U(H9*Nk<"UgPd
%/n80F7iDjJQ)Y'-]t\,U2glSnYL,>eY"%q:jl,d-\l7m?>\r`U92Hg`er.k":tiTd$B\R6"^.X!H:?G<6uQ#BR4uC*d\An:>fqil
%s*o7Ud]:!BS`b8#q@@5ui=T0.Z<0KkZXXgp&0j_@6_cpA>4"/p]@B_>Er>B)n%'=WIFQErOOSjd3o@9%72@P!=gch,<tPZFW/>7)
%?N*4165pl$TfUpB^TJi23PM(hia'HOrpsLb2\Z5hP;m_<IE^rrViWA2#LaN0q%)MX>95_I/_aD"NCURe^VQJZ^XfY'F2]sbR)!sU
%FPXbD]7E_p`h=E&a*nn4SbRLj2F<c'00pB)+M#E5`'XrtIEUt)@jT[rGf2WF`'2CKp)1`'ZEi*:*=QTT_ZRPXr8FLh%/<Cmel$\@
%Q_6aH=\k/=1%gq0(!Ca1HLXiN4UX%:ABiFn@b0MRng3N#_[b&g2^PsUSI1\O9+a^)5PjBb)1`Ch1DYP/"A6OC+\r_SD&c>d`NWjj
%q-UP0Ce8F@N7`?;>d%^t5e28-*"L#"W>F,.lJQ87B<d,kr+qLs"F@/j=7X2Pd0S4^5UJ5&iNQ;aO"An2eYN.E'D?@5\;$.9*=!e8
%N]_:R18.ZF=!8%MWte*PILq4P!?UmSF4+OIBToa0kCm65PG^\WCMa\_Ls.c:+m%Vm6u7ZM%Nt"Ea+Hb!2N!S_Y,)XPeHKcR)G[*(
%E-)e)\N&-r\?*Eoh/?B6XB:[%j4+P)$P*;ZPj/b!8V5FdSFcAho([^gkOr=;WF`V`1./&[3-If<V*%r6-4i\c<7sESh)/#&Y'l#?
%A;dp.K?R\bB1cnEr1[m<?Z$rDoLeB,3YCi"0o_lXiQW-B-.\h2';X^cks!rIA.25jX)&)dd0dqVU*Q9DGXNCt9A&440HC(XcJ0pL
%:Yb1Y'ul0M)PJFbK@o.l0HU3W(E"d/IZ_GXlVJ%ge+MM5E;3WidRM.*=Zb'pP:po8#uaVA:'*!!)`a7,Lr@i#T=Z0dTV!Vt^SCjR
%XQDao2YSC*[+@sCa#>&X`Wo-;Q7m6jd4e9:D_sl2`u?>RG[n^/]WnJQ][8N1j,NmnpirPQp,_%qXetVs2Vp^"AnsDc2m=@-)M*o-
%:lO)MBttU*gq==)*373dS/!3=WQbO*?De;nRUs;sA<"'c"rqKf%lhY8#uOM@E5jcr/[]l>nU(d8&F.kf(iUU<['JVA%60.^6q?YI
%:*@M"FL.pspkY]Sd"e,+R:J$/H5"36YVBe+!ae\EF6odXQkPqP@u^a#gR+`b6@I'Ts+b=4dED8M7rO@t3f%\/pgNrjU[Nks3dRVd
%l@^K.L6/b#6<\*90_d=kJ!^=(<.$a?V_A^Z>/D:JHH4OpbsH`s`",PuLI[jgU9U)`pk0545PtmA?gp.9EpouQ04BY9nu(Ano7-4?
%2ZMO@?iTPl=HAIKnBuX'f(;/g/Rt*Uk^%?g)JU,tPFQg;?*Aa1ld6e#H6:b5/oMh5P>9$,1T9'c_097Gr[>2O0&6MQ)c./r1iA8X
%[AP#.0iReG5NW;jTca:eEs`2#[o?nsR^&RY_Gh;-86U^E&cL!QA.-0#7K@fM40PDL^Fl8ijHV%+Q_r++34dnpC\63eBLQ+p7_T(h
%MT>,)<C>pth\g_\^LBXXW/0gEZ)/ofPh?k+-om0_FXl(P4uSA4?.+jT:_!-k3-j'(g+gXiV,+Q(q)!?L@5mXqPCoJL<2q70JBjNg
%Aidq_$o^SUq:Fi)N/BQS]aDKt+-G,^lS16U,DMeqQ<7?VEa!bl7Q"h$W(qQ(_KcmD1XPHoEo%(F*56.QHb!.(galb)GSH'\6A'0G
%NC<#i=Inr-m.5V+(&TWB9S"!<"3NXoM2OsXWP1O9/Y*J6c,npk?\E1LheNpOFVdWb:`%d+TouWrilFN&0mKkEdU\'.aVJdX_)*aD
%@DbEKfROW>90d8b0htY^4ON2TL)3S3-SBY<a4ur6_f(WiVs^(G7':0Wa"IruKUr8$$I%f.frtQ(2PrJ:OnL\2n3i>Jru)tCUcj9,
%-I:JpJ$I`FG$)]R2K#JSJ@hMqR7d4/j@A9$I?.F2/g@9qjsGniRK.2MQ_>jNo_;N+E_=4=_KYNM^S*o>=X6iS71t+0Jt8g_l@sVT
%.=FX)";!tV8':h4E$$Oof]lgZ8)fXj<#fPna_9T9;sL3_kaM$p]9M?1!NZp-/)?C/\s8RKmrmL7M!A*6mejKglpL#O:*OS_V`E!R
%NAXs&h,iiFp9ZN-W3SSsj(k=JN"e((i.jd">;fmq"0<U_kRo71Z\$9sg@hMWJAM<P<5irHFdffr%^:Ou5dCd)K&-oqk.#-o)u[P/
%1W484Cl%&brpf=;2a>,>/4#8-?clLNY%&p<Eo%c8TrtehIG%,7$8Y!$e$"%(E/aYQ`B^+#aH-Fl@VVD8eDLo]dK#@4lA3L<doaH4
%'4toE6&:[TnE>:/aI_4\\P5Dm5cIaa5%@(`6SS<Y1o_4jA!%n./tj\&D"a`*l\$jF'Y<XOmYD8"WXr-!*^djm*3=V.INqneLq8S>
%cA:\)>fY5'SL7'f^pu=/<Z6EJ&)FVh+^WMIU)Q;*V]_pc.=-L+BCj-GT(LB(/j$sUM>Y!X`0W.)8f4Kb;'G)T'!`1564q.g.(`tY
%=On\j8&`b/4@o%cl?XuuQLT4c'')A8gr*qDn]Lq0.`L&.q[UG8Gu[!m&ahtGEq"$RXGjP%%%j[iQ#Y!2.-6g1'ki=kL+,fi?'N:O
%jeZEb&M:NaOiW\NH9mBNTEZ;f4it1N*(]MubaOX%V*i9($Z_ltrmGojZ._Ku]oaQ[O^1+i.=!UX6%r#Mp=NUd:3OA>A8Aso/9(4'
%1I@U*B&O`-=o;j(3jKG.OZ=Rl3Scc^6SsI+@Bd_*>UW\n9=TZ?*6%LRWY\c!l]t@'&n3t.p,sWD/ZcXH07qV8.&lUE_U[j8q;]#2
%M1`cT77O8V=4OarMLnTc13=ZaG*fc*kT%Y/e[P%N.XCRePc&*SY[p0F6)^n;l\+o;FKElYY]$nhLL4KG(/7CbXcb&]WcEAcc5SKQ
%CDl$N[C,I21GB3hg3.J1RVo!$Uj.S&dM1XrEZ)d4/_iuB:[`#!&>DL*.fhMi[sUI27QMPa+#=LVW*EE[Gdf`h73V6kpq!Po?bFp2
%D.O"@E?R]^]cA2I86#/G=>'*Y/2H!3ZCQ]95AdF;b?$aOZ;G6q5%\j+`qd\uG"20W9pB5*Zn?1MFZrXJLeYrRCY,XhQT872Qs-5.
%qhUDoTK0t=LNr=%#8Lo>:[X(mD);r+ogPoSHYYd>oY[d.4^FV&PhHbDS4Lhm$j5Rrp39XcA@HKO]6:kkSN`$P??p.\CQ-S@S"m0=
%5\W'^:_55pDG<j<ZP`,(+rLYtN2tTugA#:'oC2#tYM_KY,4QHZ$OXjd@dlbcbf_j2^hT-'f8]>Vd+GlV&s#t^AY>nP]$b(05f;Q@
%YXR[eM)al>Sn6E[kp$uD8DiZm!Bqduqtt2T%%)acbT7f-bce@G\KQ5,-[L0#o&gVNPUGU+[O7r=q"Q&sP%-tfENeJfW/f*g,Qr:A
%`sd1efiJu_]dG'm,/(f$Nt[bGRO[+,Jk3dIl9!DR9M,$(Q#pA![58O95LJLb.:KP5p:c,L<D@3jd2Ac9?D-c5"d`,^-MB#Xrr03o
%\lklMRI5dTbUOb0U`la9l>oSG=Y=W/86uk*1?DNpc<!ieh59R799t@MR<B%]8XsC/oXL"W.k&N8GCiK-kAKjcL-C%URn.B*TdoT9
%TKUo.-TTQl[IMoF&P#I-FhX@`T5Ms&JHT(ri`-M%YW!iZm$)iee$4B+OjKG"o81bKH9F7pLY[S88>R)aFI60h:`_X_<TP2JHLRGr
%r'Ec)lgeW;?CpT%$La.K(H(c2aT5r2aAW%W<if9^\TQJ!RaI!a.E:;&deXL);-YRCNBEnhrsdWji-;MH;RU]glZa%6"Pk$Cr7P8E
%+\:9)cT!nah%5SDX17nM628Dse:?)X_nJpm0qK+\)%s=GX$aURSNd6_RnebXqd<i$FqO;a.Io$sW@PN<\A+]HKQE<_a1!^Orq\9t
%\b?J/oAi\UP8nY;EBEnU3i-D0Zt&K*(X7`d?n'B:)E0PBWUsQ&:""_.UJ90j(8FUOBs^*N%JTMX[n=7"'eClr`V:(R?-F]#d0VS@
%&0aDt3kCfFaIWErs/nsM7^2uV3)u:1PFO(_!\f5Ad,ul,0\;CKc-7QKnKX&1K?ReoW9a54$U#h/8L:G$c)b94C%<#fmTCia!$H=4
%#ZhLc`kk#cTo!pPQQfZGbW#FI529E'>?brB>W1HOYZ_>nq9_$e<!AsT6D9guHfHG(,W:0*5!d7eT!V<f5o0.uMD'i`gmY\>;NR,p
%9IGU9ZE(>C$h;"J8F&`Hp!H)#V@@IW.nE7Z>7]&91`JAgG^,N$/dXq_J.NH\JPTVS[)-O)NSkbfCp-camK8Ts@sC)<QhZ$5!X(:!
%C7S]8]A7%R]Lc'@_d[jb98S^IZl3/$&+2.4$'04N9l5k1L>%*n$_qBaN=&od75Deg6Kg[s2P@gbPiGpMlV7n7oD?l[JaRVq.)SUg
%@h<4:1R1SI53*k7D`+1^Q(siR4%=UgK]8QW=qZ`<R4%Lbfs;.^HH@Am;Kp\2Vdh6VJWNt`=e!I,gE@qeD9#lL9S.\Xm<];)[B-m%
%(Ck&OpU.0Rm3+1r2e8`b(e?CO.uj1;]Wd*'';sL"><PGAQBPLnmfq&(\PM$hL&^TkdSAh<+m06J""LX2)c.-9m8@<De_0[c'UJZV
%&N^`a.r<,oH\E_sOB#LhO^0e!RQXcm8hNo!B&bQ):prA;?Y6*&]"(OR]^`'GC0-WX%Ud?%2oT4#a$fNla9$KX2;HYWK?;I`B/aP7
%^kuA/?VP0=71RE&1!stG`lsPM9!@3FL)PO@7F3o_:,qZ^-<JLWKMH%-?GeohS^:=Gk7akufmH,]Z"gK$T$A^2#F/^r>fDJNg_qip
%]89(5$C.6rMG"4O)r1mMLO5q)<iC%=r=]&T7O/%!!2Qfah2dRZ+X!/cV@cM9$.a*c`\j[Sn?S7:V;8eqEK>*VaID@8ei_bpIGnfl
%pAmq@D;ShnUUu<?@Z[Rt=mK6X`Xg9_=`6t+m4`*_h(Vd:Z`3>EHV:o%EPag$8rCd"l%Zgr_)9kRUTWjY*H*"gXY1B`R&H7,<Dq$c
%TjNLrCai9f%,"WX%Z`PF2Io1)Y1%LYp9B\,<6Ees#AkCj+hC*8q=R'%$JDQ(M>"fE$:?"\)dG32doXu/%UC!9bVbN0p.cY8:(V4^
%-^/!l\_a6nhK[,OO<Y`g0.GlK$S.LIUQs5!iAUc+r<kh%&Cah(fN>$KXg&X0X[6\TS5'V9R)S/B'MRN<jg@+*kB&0ik&o@R?eY9E
%5;*rF-ipK2[^>Yu_G+bBR6iA8kmo:9lL9TnQBQ`.D)IWVK9sW]16b=R9cBUr'Q>sB]<'rLo-VC[<SlZka\G;qXrQorPGq15AW->B
%[+8AaDWa`VZFSJ_8]bDaCYbq^4@n9D"(5O_o6tsQks:9\PShR)iUDq2gNZ%qFaHRu\XX7bN"-g8C6B=I:qr.f\j&2D:L9;shWD1s
%4u^^lFKQ8`Vk%Kkig*3INE;Nl:`_/Mg1?sq'dCte7MAa5c]G`kW)uc?=*VH%I49b06>TE[4W=.KjKU,PX_=LVN=TK*l+M6S?[o!M
%#eW4SArRm_+Sk:N4_?5NcP!MbHZbA0]FTGoQ,bGj5c`2"EG=lg"YjCN_/TO$QcVr"_MdN@Vbq#<dC!rl[R(D'>3)RCV$F/QbTUL3
%]9Hm)0:*tnCge8Ha>%BH<Asf1-n=-;/`CQTq#lE%d_cDJmn+3/]Rm(EK;fQ+6f5C)@7++"OJ7oIS6TS;[$+(uH\)SljP!Cc4Ds:6
%6g;FoeP4U&]Pna%j&Ph=>GD"(IF(6+P%EO98r^4onb9<MjUY6pP#JCM*1,`Y\DW2bB:?=4_#c:Q=-;pahpCDeUU1RJWc(@9]c4Wa
%?*"\VVE0c,NBII\8^Dm\a4+D5_b$_H3X<iMg;QU:-Rok:$be:ZrN./K9S*co8a7oc3iU1:06SFAQhmVVUI+15#:_6>$/f<)=*8VU
%'krWS&[Tu\H"^6kri<P<k*j7M!Uhh5H^2J5][:bM7*:mj?$h2_c\o0:QeD)Ue3hligr*QNQ;)I"jf*sUE@&_Rg5!";1kO('/DoXE
%V#!d>IrVLV4_pRf,6e]_!+Db>,1d:;*k!%J\)Ya-`SU0&@0]E91Y,DI#-RV??`YiaDb'#8iD$rQ9j]GsMp/?hh72mGL*mu7gr$1c
%RrRD@Z$GtdZ,R>$H[@[0`d3a-_Ti)^I<K3e>Bh)<1l\e)4&5F]F%8b\7b]U"+I0`3MS,:&omXoqBHhZ\RdT\IFUBDaKp(3U&5U^L
%)[R0%lmVUFZ6Wq`]OO:l2F9j=jUe#+NUs`mh,01'DOZ<Gce@Z>Rs)I%3^uVIGq\:N`&drXTfC8s+i:r*?fm,>abOg3i65jG^;42u
%#[_SU3M=^NFUs1#(3k,W?js^YfSXS#n`DpnQ@8!\?KPODd&/kR*A_u8i[HGjDbY.mg4/]gJ?TCs7Le*))e`UBj0h[ilQuON[_^_8
%)r/4,p:EQgm^+5<1N%dtH\\*D=C@.TVj-^C[\g[sA'Ahc,Ah-:pO6IiqA!q#]4Q*="F&,P\:s<,DKgF:p[mY+"Et_V;D:J$;3;os
%>ff_KZk(gD8!aM_ko/]@A">MQ3Yna5iXWSgiOk%e//dH62APRnc`l[9$KlPH([0CP1Tp+nUVR.$R=3b"e!FN%8.Tm1*(XZfb](tg
%R1+ZVYbm3LlFQKWX0Skt_5ab/]!9DD=idkJ+W#$=@t"EbG1qA]bWW9k\a-\-NBjI]E\)(B"-lUp'J)3NB8amY;doP=Jc`s2UD9#0
%LcXSQ8]\5/Lnbh3+++_]Nmd,AW6sX%6LRQY?*%.G1cm;:((8'K&:i\Rs567)R6GNeepF"2ae[tZ!PNIYJ>f\UD(@]u]eI^sg;@EA
%j^NR+5\q(M_CY;'<(^%Q9+B`,H/h0RE9iWdA_!38KF@lZp-"#g>;M":?%6Yf&P>o@5sgeGml;I?ZTB;7m>9^$#USmp,"Ie=a&MCt
%p9b)@#.iU`V*)]'A-geI"UI3SNCaPToe!QCU8O&PGMt(p1SmX66E<QK>,gRVF7WerqK8960$I@M`L[IV+fHE?"<l,%%Ep>mcFf8#
%NkE6J_"sF)&pW%#c4\[oAZfHe+=(IXkfJTPF(<$*,kjmXKCuiJ"=TjBOrDg2NIdf:OpF#&8Udnj2CER^lBu\?Qe\;57-<1BiEoE!
%>rI#_H0*ha&&*I/,GQQn+X&`JUp2mW&4dQr"&YY83EE6%H0'/AZ/EXdqQCFnN?<A!*k>AeG#"=r_DI)e5j0^Hmqb3"o]0L`%WdF0
%H$s!;DchWg-?2?k046LIC`Lj"Sed\aE(2V<H4nsOA'2;qHTBpY"Ym;3hK`cL;(<73>IQcW&"uh]1h(Ldf%$isJsATHD\?Y>Q<l'j
%3d4nPjMFL1*`8QbSkp9&W10hFk]CI#S*(U4oXo%=!MkQj#?$P*^/(ZIo+!qgKfgoL/D\D@9&DXt+A\10=IA?8Fak!QR%=+hHO&)6
%!j`IsP/4ITF,CV:(NTqOS6"6k:6_JkAP,u1TXrU64]#I"$DPRqSihGUGP^%,TZqGg3`X2.o0/mV19PW=S9+k.-"hW_:EDW4elK2g
%2,"E,Fd$`+4egN9h8P"\X1ZJ*b@7-0(@m*NMjsc!VOr7/5Zg*Ort)5o-#>^,ar@8.[Y9q'NI`5BhX&'32@6Y:@ZYcB?03-E$ADEG
%0KBo2>>6JbnI-</?(RSBC.N='71Bb1Tsi#p)4m@m-U2a!`3GuJ#[X(80lgI_(`0T7_pT$M["Gt`b!bUF4S6a\T9?T@=&*j2#)'W[
%?P-Uo\VUR?/_=sJ62%t27hUqK\s_OaLW\[(\G>:(L/qP%N2O+gefe',Ug;so1Hpt**S$)YTq,"bQl&gF^JGp[O?d6*+GcUi;`grn
%oN@J[k9uo\:q],tcC/`imlP?!]r03Ur`?Vps7YdYr$f;Na1JXA0t5)%)MD/2<.t:UNB,XYGA_+8*EPSihrSe'5k1VVaeN^i<QLqH
%_.g8CGRaE>kI40qa;Yb21_b6r;\NhV)*4Dn="@?b2Y;N!$?j[-b,,ki7cL;V9S`)DiOHmk9Sfk6_8clln[l!RN@%=$/pmR;CNW>]
%,EY\KTO!im^+XUrV*a]ZMhaA<%oJ,kNAY/SkeY\7-[IJ3Q")rS#*I>nq2%Xr1R.`LKQ6hq)M:u\J<:17oSAZ%7UJHe\38AeU/L#R
%\bFS32i,A7:DM/OlK`6A:'Y-&dpYC?fJ.:trD]Q@i-?2Sk%uWAA`(ITMDVW42O&A?/gu$nnXK:k#sG$LUE:Pk9(B6FBYb1I#g+#Z
%n6b4KhLt9RSAYMfS9p9qlr\nObhT%!pfnX.f=66:F"XfPd=Yn5-k`D6hGj:,.(84ekO=C/p@;JZdcQZE^_s&9k`eX,eEJ\bUtOVX
%[l-@0':%aS1u+n<Ese-L's-BVk:pRWk_bDT)tM!Q$o+SqV]%FOL?-+mQ_Z-Kn;'n^C!:PgE,/mQ>0`fJ7,Kju9*%/L3j-jT$4%RS
%WZ75&Vhf"BXboY2CMKWa7#TujGN"q3Wk6l>640l%b-D0n>bs$%]fCrkX<(D'YL%qD/46=@8#5!;$cQLM/%o_5$AqCPIq3d9$GVKG
%h18LLpJi<SKPG<S]idm)\R4;tW(%,YQ6NL:]f@km#J2?*X&Kj/Z+A*7+lTdp*qMHBoO(:V4/K@X^2DmL&c'DiPggIXFn1RMHjd]Z
%4io;I9`FLqqsN5=i.(ad+27X7l#V6EoD]MOOeor+FGpr[*WI$.paQ<TD=ku,`6DL]A%CI:fD.?bec4%V@<&mI11>1.mPI]*Xb'dP
%mZ[VL0DR;H\"l_Rj:pZaGp/Og>LLNU[>h.Bno?&LK;QS<?Nh/M5SEU?s6A%OEJo#:i41,I[mD-Xi!CG-a/G?fA!;/?H2YoaC:F]%
%ep-T]dBeunh.kD.+mm,`,3llH#\OEZ@'4&^%?[]"lhpskc-aseq"='/E$fM"k%8n,TV`=Rfd9+_<m"p+NQ42D-af+[3+B-D/fIoY
%PE7!.T__>'',9V)Y?r;crA'U"l2'LVXdHN;WcB:rI,*P;GDf:tC^QV;@<gM7H?uf_KB:f^&7I#VeBZp/9:_^P9"2Pj7AIW2iaC%b
%KRP["2&=c]Gn6,.n>;%p-!],$O8BXOnNd""04O[R`#eDSb.Okq%g+8)i4[.5RL<c/GQa9VX9EV`cO&HT*+(m10RXn(fnhQH&:DoW
%!m1:&(9JqI@Ng4"ALi%hoZZ1G<"++LlQ3'H'$_=:[_Iq(,BG-/n#2Vr:i%B=,JD0Y!R18)3H`(/*/Jlg5`b/NelK;i5Fand%Cnba
%B')h=Ba\O`J]M#V+-]+Fh!qC$QGLnGj@QJ8?nEm`aQI](<B9S*"t1:BAJ;ZelG[,bpg,$@Te0bl$&ppYHSVTLo[c2AQKni&[)F2s
%^`e^#<QSE(SC(i1]U,s6&-CHm>a:Ll7Yc:u.W=DbIqdp^GJ]Id@;0f'#-WT[7>SdZZ((12YouPB=\`8\V91ajC[^MVQX88ldXV4f
%J,`*gA7MSmVRh0rX8"F)Q!QEK_n(grig9u2^NIb`\+FH28`T)&E=2't6u`S"1sU9XL3rdg>J*2;Mn*_g+(a2mbVD#:<*KG-=_ebi
%`-Cd11r*[47GUHF&Mgi#K@B]NOt]/`ZChXi##-m!Fhr'E6#SR_@IE)8(bqcb,IVr#l6DP)^]@,W3Pd_k;:odq<9#>mFkYr1o.#'l
%imDuoiX-]8$#@j5<p(m&f;W&K=(fdf[eCZHL]"=oV=;?_UR;W4k7WJ`baudhO#%P4MHAn=;g*iZ12IXM`F7q0oShcs?4^&cXmE;R
%8+F5em/js^CW<cq^Ta9Sm?cjkNBR!BN(NO&4I5L;&QZahmMOQb6#3KC`BX+YDpeRSU\#/,``CA5O.biqOpRVFYE)6[iKf5YInmo%
%.ajl%_8jsBo!,K?GgN"H2J87&F!ns_8iC5D_8i/2N5c3`ZV5PPN55Z!ZkP'Z-WEate:cmLCIHH&_h7P!Eb\+kPqiqHLeJdR4&$=s
%4o!YC"l`'26_Ck2D0ce2"h?^AAOF^XLt:*sOqTuf3_%JVbcmC2nW#kRB]$22)1mq[K-Rp=P&VV59'7/"1k$X'Y`4_`UKlKCl%U6Q
%pQcKA!](#l*$8KU[AL)aSg_son_G#RM$pTt+"0-V!EJ1nR1[^%$'"Jj0)J%faF2(UpKWgIOKmTHkrg;+h(d2q8>[Uma+YR.G6n&*
%fc=VROVkN>$'Un+7Yri.8W>))6p[c3^?:(^LHcS+#Xor%._R\.=f&a,85=3"EnRhLT+C*.(C6bnCJW"OQCLd"B*cAjqF\Kb@LZI0
%VIHnc7ANnYks\RgWcs>^SDcjHVKLFYAVX2@/YQ@1HaY<-BfM4^B*cAJk_A/e3>=UjKM.Te-d!n@7(On/kStBG`,Y!q^?:(fMEVb[
%X55?o[Hc#jel;;f-ORf^ieHM>*8Nam9N?"s+]sDRODqLq@ts=+g!]!gVgo^@-2Nu9EWl/jaL-(Qa-@]>3@jQ?3,>*[Lg59[23OBr
%;Bs5>LVn=-A25=R?TZjFB?IfVC;aF?pZ\m0*M^`1I!%'m+f"#U/1JD!7Ch>$,,=%Ze+YrKS7u9)?LCBNOK':7OLdB\&FcW\')QIh
%BNoi4,Fu8[iJV3bR9.b&`YUehC#:>(]5#uoK_34E6n%A_*9oA%p3@B+GQj@LQ#tNH@loLP(.fcgg\K4G\3!.Jh+bi(Bl=APk:A_@
%h'']E-V;UtF4)S5P^7%5R4Mp8p`HFkc(Q4nD066W<3Mt&agaj08r_g)C\]ZH0q%42ZA:IO=eFeHVnGseo:88Imh'.CHDa`7#W1pj
%>9ZD^@R;%@!`\m#l`j2TccR&kA/MsJlgAt3OhhVKgN$L<OU")`BQk=FiSgP`#a+hOhM`d9/I?.aYl?>U$VeXaQ,>4dPkVnG/DWRf
%0.,cAPXH(6<Z+n=%aL0"ORjIMf'23#KFIQ,rr>G6CH7*sNRR7qAJo6VP.B6pOpnf*/njpqN+fEAV7M2u81Z-.g(sP-<B:2;Froln
%WqHHcEJ"i\hH2I_#nZb4T-+:\\o\T^KikII@[04s&O<IGR*iA/298\rm:ihH'H*.Uj%lE/UM+<#3Dck@md-J-m)d;RneW]k%*o1t
%dNFI,g^js!jni051Q1H$H0?-nNe_C_!:<>j]gH9t7W*$!P6R#AdJ7;SRgeDLGJ<.>.hCF+2nrUg%;:IdX,FXlOYl^j$^]-UF`B0J
%(N)d"djobU\d/W4;H5nPPn!e1XI_]>^B"[[P!OMU'Ds.e?eSI8-]8BfBSA[<ldGl3:b0o&pUJ$F0&!mY[n6;O5q*?#_3@('"s#A<
%SlQI;)Vl'41FuQ'*e]AJ7T^2!8jFSLhI$D]KZ^H!Q#c%YQ*7\?lb7sO8=9I_E&5kPXF+jP$oWAnf\IeZBnc;7KtpFgc4Fh]-A%fb
%Gro&L`PPUtbUGH#WbW66JQkI/&>2H\G$Mf(=H?nVN$@QbBcoJMje2i-=SB7b'p+6B"-V3(?389:!(;9QKGpSgJCnWGLf0qqL0\A_
%321,`F&_[m`Ci*MQUHXXG(FCFne<aAmSsj#A\?3%?*I=2&/qkG)c%E^&80Wglhk>db^S??.k/^<-NlrY;Z(;M^DE&`[BH,29Uo@S
%.$@_blkJOB*Qjg=Dr*N"3E3!O>)4cQHuZX:H9C8+6S^?iR*Ej.4%nX^6^D*J;WU`QeGTGG(2iT:^Z'i*f.HXX1J/%IK2NWA-m5E!
%W1sO%eE+>t@:_nbps>^E`_8*L2GhYsp.f/E.1U<;W)F`D#AW=CC.%-BBOH8ZYtAR=#,44\KW*@e&WPXfXOAoHo*&%3/"[9pLuo+d
%XAbQpR(.uI6GDH"#'mM+<(*_)=\V:>pQ8B6V0N[b3L'AV9$ZC[Vd8W*/hT=PRh<p)j<RK7&dYiiITL'[-ms#WF%XM*V^dlqRXCi;
%TK5`"1J?^d7V9/.cm_bEOl%JT)^Frc.Hm"nej*G31<ZR%\.j$Wo62<Pr*ZjY.Hm"_"3=`#<-5ilOFg)=J^LE(@GqQ!S4GrD]S[R4
%qMVNg<F(QB;W,-2jX[9Iid3O[>%%G/5/,V[/^<?YVmNa6Oj8flAR7Z\T%9U<*0H2.ThHm/aB"iFjlIr(d`%l!Meod_;-k"_@2HKP
%lIu%a0'A<sfg(cmpRYpckPg$A[+*.3Mlj_K9;'<nOif(na9AXZL$&K!\ueK%/,:G]!RMW%:dKX"Y-rMI\ef>0FGr,'h`e])::gmp
%gHC>U0A&22$lTq5!B@Dr1R*dXdY&YT79Y41<#50%3u3kUrD[r^*S]gPbYI>(3*5^!U0FQdj#h3VMN-?K?f'C5UR[&CGQkSGe>uL#
%g(gWqFp/YM&<=K&Tk3]N''7SF\.;ZO2ng2,)HJN7Qj9k$R%r'4p;N=k9RCEi4)3e<k^?qcV4Uc0PGbBBSb6Hld+(4Ik+1-RAQl$3
%YKc7Meq.[9hrkutP1PE\*IQ<1_N]ZqI(kFOGZ?)W]TPYuB8X[7258<`qmspRO)c_g'`fuRi!ItZ$B?s2,3KAIfu>\pb(33*)1mCW
%D7U1<.df<fQSf=V:@#80\j_i66B9<2UaC<g)tP=XfC2[V6=o'GZrUt4B]?DqgRpQkBUQrU_VVZ(R%2d&m&t8Mk-PmEP8o$#PP>4V
%U'P)#Z;e:*O(jm>erL+b^WtW(,GRidR-YOEKh"VP!Ei<EMV/%W8X[(.7nS`K#E:lomhF9$>0''k-KQ@hBIb9n=p1Q6:1?E.@R(`V
%KM+c=1PY0m:@"\bBfqj:JS;mZFpqXg"=oDS\A_"8B!5V?<9']H$DP3lCl42n5#DB7ZliiiI/P4(g1dFk+E(jUUXXLZ-Q)6,5q748
%mU0rA^9t[;=7YG&%kdpb(kTFL@=qQkA3/g?q:Zqo,D5:$RNQTZ&t0a$bA''Kb;u-g?TOJ9"RNhb=NG#rN:?R4Tc<JjmtoPBdA/^D
%fM8-c.6<gd;VJR<G7]Y';eP1qD1ucU"Vf6te?7,V%G$8,;r>h936[]rr9TWY?79*`;'*/rqp([q(lNSn`[R&KWLZ(/Kh$g)@4l%M
%+$WW[CA,pF32IS-brj15X+'(Gp7D7^lS$;.C4TBqNUCC@K+,6%0g4GZN":#(hK.q(04R\._W0OHs4!)GF::oDY1sl,TRt6pE0q!L
%NOSNriC;qn`NbW?EtTjU$%fCPP:fjOaK=Ne">/?UB*_!QbeoIQ9#EF+'bM&]gi=!d'2=4!oU%%S7@,R9[]P:2)J]'G>^ZKjN6p>D
%KM##f'EdaeK_Nu3^^2`Tca;:@>DRt665QL')N69<j6u63IA(n!T@Y'Ok:j7f*.La;X_Se1NfJeX$VNWj,DS`bAD9j&ff#]RFWo_/
%C-EAAQ$C5Pq_lh&;HF/ZY5kD^pOM>W'0Tguo5M2dSdm-)W2f37C;\]jU`sYd_@Bl/fp;q<Kd/%/Z>us6^boU7ULP-3cg\F0:am<(
%b)4:_ffc\l3cJS16U:33$H5('4'h=Mj6\)%obO^jW1UIgGDM)&F8uZc=7&Mun,H9sr;NCP=ijXM^p@7Nq87c4,=A6SA#A6$Gg&&#
%;m50Sdi[)R31j%3HpY58cW._H]`qAk>9sNje3[[okl#UOObU;t)XckF6N9DhTiW7=(hdSUW8X=S>.?CmlQF!JE!g.!2/aKLErBqB
%.]YYbYaSFSm$"):p=U#>fJ4bQ?RRWXeo?&9/"s82fif2>:OZmpl$V0a+/i,4:>>CE)Jf,lBG;9YeOXEM#uii=U=4:'l'-h8ZZT35
%hfN[DklYZRV;?E9;V[UFU#1F^BC(V99Rrj%iAXd[h<c][9u6n=7f2IAdL'VY="=@sEVCh&.3:m+>!I23.182plU-$NI`-=RXj7R/
%37`S=P6QZEe$.kBpN!AmFsYe.VaM-NH.!Qh8TLQpLbL"DB2dbT4oV%-$@Y4+7cMKIT2";/ClQ'pe(O/g<IhED5\=gO2Fo:L3O[2j
%e-\;:St=XO8pf;Z`SS$'6S$%DpN1-hbd4s9XrGG8Hm^<SO7,oV(o(s.iSKHW9$q.[j1;Q%[&7Iu*@ot^\tb(ba4(E4LN5"<gRpg=
%k<,/M5fFG7'TK7eN)J_g![?Bs_/'r;;PdDH=OJN;*>M5sE!mCDVAlS#DKjXu5<lgG[[`u.;7r?tgN%',X4V^C29.oVqV^5($[L&8
%eG@?k7up_doYA0,H*9B73B()2Vh4Qe>?[05'R:S*?YdeQQYd"$B\.Y</)VN^&JiPUp>M=OpCd<m0:t&ESJ"<*Rh[THJi\baP2X6]
%P,cZlmXLY_=b;UEqp&\n7qPt#BhCCI#Z2Mp#:F[p$Lqp">s13Km<[c4g<,_,E?)SsiT'=ih-#0SS7Z(e8UXf`U^,B(2=+lnl[k3M
%+(i"l4d'IE"j3C>0iEk66B1J0bY<\Y-t^RWSD0Y8br*5CeYL*%H-gM-5!N\Il.M%i[TamCZ(r][`LcB:dS"'TF:8fUS;$7"cG<)M
%GKQ,1LIs3.*rWUDF:rRF]3aE">O30$p]"g%nuUmba'c,-*T&U"T-L5"2DrK`AVZ3VDGB;E0m-lKn."Ce%.ThfW%CFSGp#lHUP0b:
%p\1eHcN3i>KEi\JL:NEB0-I=gQkIT\KQ^(O_HLc#\8h`N`O8*78`*1;*I2#&q>)9/NQjtr;M#R`=:tURl5fOKHgkgi\[3*oLFl<R
%?>+fnm'XSlT/SuSqr78@H^UhHWWu2;E!?<<DpQc=+[K#kc(OQV%A,tmV//jn._d<V(7R=U6:>dhEkQB?^<YSV8>-94-elN8LZ4I)
%Ug'7m(E#lVQYrKZs%GN9cp/8_:D.,k"_nO@Xg2]1HQja/lXIp]h$)MF/=k>\>[%8X4NXin+!PPj5"j]^N;\seK;is'FrS*+ZZ#m?
%Phtr@9:,=gq7FW!&6dnL1b;T=`Oo)9GOF9^_5(3ROK;qCPZg9fLEK7AXZCK(O%=XaT7!S9Eq>6t8IlohlCEC:^c4#N9@U-sZra"H
%it*KRfDIZ4>KKR\+k#u4gZ$!^gDbH.8V0dc^2C,,,!,0TB';)nSFh63CQFHX<lq0&:%j,ehD']"Y'E1d1"=Kl)nY(-H>W2O6t/s<
%Tg%R7Qb3[aSGjF\bOa?,RpkcY2qHj80TsR/I2ZJ3#'?@a)2l?6;3On&Ef-GcP$fc<?^"J+OkQCE5.f.cA,iR.)*AV18_?ZMZC.;^
%M;HkjjZQe&;7a!E_S24@d0cZFVUs'(_]hO_b82JZfaHk/8`Kp-pcSh(hd#+Z40SD6KU'O:5CW5$5Q'abrqAYWq(M?Vn`NI,\KHK?
%/`UF"OOmrU@gq@NjPIoIB+-dPO7,)i7F\MD>gO/OLXi25l48fhOOQLr)agA!>Pa91OA2ikjp+H$/=f\nU]q(.,*T5<cdOV:)1UcP
%,qS.fJj$h:osKR?^N&+^"BUJ^dhhk$O_AtgKPJAsab[7f-g6X;N`2HU:K!/#lJJ?,jW^C.Sr4Wndt3Oq4,NONY#=Y//Aa.K'dVFL
%P!C*4SNJ\I6Uk:(.bHY&3JCWuZ<>'_Ub.qa,1Mr+;91K'iO0jYI4(5P=OrVY^%<TA4BbQG3$n4F[h`Se5]*4&#kkV<KE[I2JK<bB
%!BiCUFl,%`Q/(OYFS33jg`Vep+H<g&T/]["=Jo*]I-Rb#Vi@!]@V:lo;"DODJM<l_(5"CUGo0^b7`#HVPj?3L!+ueUG]N$j__0eC
%ED>d_95aX(#s!*f%j\\O1lUe`'b2iuWFZOU=&\Y49\Fb@[@J&70_R&R=0f;4_3:K/59MJ1D-;mW>j+8M'9Z;BTgmQt*$2Tc%f.QG
%KPnM1S!W^NW!3$pV=3>oA\C\SO'*G4j,FIHm/D7aq7YEOY28Uls*hue7EZfhpF<Qn=%`PP()k[.QI&L.#Gp<D,u7QDi0VfJq1W$a
%f+pQfMe'sUf$]nQb)9f&%gZFH9i"-m1J1;bWFgV+>*BU[j-+Q(/!]plM-#4DE#nWdnqN_jiHm!:f.TUKRtgKNLb5r=Rg@&S$bAE`
%3&/1&GWgYM;&<amaEel#3_+SO8!Nk+X.l$11+&MY(H^Sb_Q#"h[263YH$'_`Wp"bANd#Mmbg_j!(q0(T;MX-+QS'0Ka+r/(]*AH?
%p'$ci9@ke0gR"uDeqkI>0GY.B[-rk!7bRMe(?WFd,UYRico[OogP7a,6fYUP!0D[8fRD.p%>$K'j@0e(K;-EYE0ME9UG@`5Fio("
%B3mHW<Nko.?ZRaI^bN=N1*(/ZRF/SLbK`o4,Y.)Re&8!C5SB9,O%9^cVG/FaS>j`&MT2jVUJ5<NcL<e\&n_GQoCb3h]8'@1U;r[^
%]?LeLJCo45Qc7[+U,*uDbkH1p"YS_4:0b&BakiN37SiY9;qgC>P"=AT[.V[]K@:R4#,%4()N_TV:+J5iJL!YX*gLWhc68^N0\;VX
%>p4<E#SYWp!/XkC*\BOsX):n=N'JtYhh`O;M,Thg,><nWmsCil8N1`\AB4WI>]@nCla46bmAdA"T[PVfnR_<YX@05F+SUsZOsFlB
%<AZmg]BBp!&TrJANgr"1:%V`Z[3OomZUXM#f.&..d=Z)bP-<)Eh"mB(K!';@+mDC!_\5LfLsIOBPk;S-M'2Ffn/%P8RUgS%;3Dtf
%#)C'j:;o'!dbI%Rl<(BW,SP:<daLYl4IaJ1<\RSqDZj@e`Yl3ie]SLuaf8sO:mu+46*iSRDG8S'9RSs?VD)KMh9ZPR'Tp5`/1\[W
%;0*h\*lFjW>puGUb_nXK9<P&X0?7n9f$@QVq"MQ&na!+*PlC0MhgbN%R#T+EC>[%;8n1OubBW6J"1*qt3)%:q.GIr)Y4^D:"ks_q
%K%7pG?\6ZQBYsuMO:/eX_4TNc_,A>6l`#`i?XMbX:`L(DpR)#0GY"mbp)GDV%m'+]\[&&oBjPFL';=Y'&hWWsY>9a&ll`b&JMc2>
%J>P3FYgdEXdVr26aE;?q)e'JJM,6EqUeC&A.D6*j2D_L/]IJ'$1(ft<+:1t>V]!SkEbueJW&#'MWA/2@6tGG"@9f'c!m9!p^?4/k
%k85O%&B?'+oP_<N8[AQ</8cmFnlt4(=s(?u5s**kC6K*`7'_)lOaBIRDN@F0"Engc.(/Cb,bZi"fLm0QiXdJ@f\3g>KC2.3NB[HL
%o0'#3`\$0'*AfcOc\FLCg>mVkOYIYlf9JjOA,sb.8<Ut*N_#\d8f`!ccH8^0+[L_9\8\*fh+j'uO1.N\8[bPm^r!W398<0qePEo)
%7*(!h99KBM9uT(e<F*hU\O!6cU2pR]YcT%L=$gk::]Eukd^WKmnl[aU/K?^C:="JV5\TP*Qp]NHZlZaV+rk,d)HQ/1UAP'LnWR=U
%-@YN?BP\)Ap8)_eZK/Yb[Oht>).`-pNV5:SABP<VXIML?aC"L`3fjEU-UR@Z';=XXo7=8qmuJ0CW3@HK1AWu?U@>!oM`1"ZrQ4C)
%iC'UPi\NWkINoEGLD;9TTD/0DYR?28]XmbCY<C0<V]2+$qW]Mea<S)eT#c(H]`V-pri)O;>ZM(ql&jJf(=R+q(^sDg]J(;u1AQ-V
%>tXSO1d)gFPVu)j7i;EAO4:OZI%5;TRKq/c>KN-h!V.4Z`]dPs>'\GrS)G#p*6L>tE\P3R=Tci)ajl)65WQ#3c%V#`aYGV#q%SUb
%gL@N_HS,M(,p*R"I#;Fr>p2h4odPp0RQg&IK+jpYqX75!g-!70'$UT*KuXKDo9R]PmXSp/\jDmmBP+DCEO)@M\W/c81FLH!odS1t
%e/A7qK0G&h)sO7[rDW1Xism81kO(pT-lFe'I-rF%=Du=$\aD?$(XE^iOO)T>ID3RTOKUffQgV6a_R5Amg?2p?aNTQsm[E!%PD1(\
%.9hSFM3-IV+%tGY7nY/Ja&7/C_hh3EJPW1Q"HT5BAAM/-):4&USXmGX>)q[a(G(<K:>([iH+SIrlq3g0SrYUHdPU);VXaGujo%<F
%QRZTMg+ph./BV[uoLoDl4YrNVAf5lAnXD&I8QF1i,dZS`EM<Akh]9H?e@+qmo0$#NQ*Zc#NDsIHB"s=jZXe_N<`rW#UEu@TcuCFX
%"N<oQ)F__SmkH72(/7NPW)Cd!#:U:Wi%[MiTa7uZI*1'uRbr3P;.:@r9;\`rddVqZ6M\"WLup7fR?ces>$f80"@j[K^OeW%=$XsA
%Boi5i4bkbU_U;E:6?B%Y*4%^EPaC/NJ;sMV50!4f[:j`E!Kg,Bi+cu*BZ+Mmm;_HW=lXC"L\`gf#TJ"6d=j+H7)d0g]Zd^=#te%Q
%Gbp`t5*::>jkB2h_de96B?2^P:;3W8V<@6R@M7H5aq/ig%]"C!+LROU#[a(=!h1/f9R;\OM`ISY*$R%_h#lVF%OFG_$kI+aKSqjd
%M&uA2qR-UF`>gdh6(&@`&ME4-\k(Hdq/oYg@M*c3FUaKnGZ>%d;[?gQ)F%p^>g+@So-2P&=h4\fjG]o"+a1Sq2%VD&O:iES#^+7O
%E&!,)@BT)s/L_5`k&APB&Y>$LIlS&mk)e0E#cV&cEh<URF4_%JXpGO42i:!kF*6R*=gf4S(NW+RS1:nng):55;`OUaNfcgc=UKh?
%3@+'*AH%]^1a-,J@:&I\2tg$h_SmMS",5B2=p!VKc72?9,=J[=_SmKmqPoG*_&NHARMeNR;NV12)MLgEV!Pn)=fe2+'YD.H`\j,.
%qqe1%#n@#D5UJT$3hu4LUBilB0pe<]!*)rAPE.gBRTY=k+?qX(rKX5/#nF8;>n3Z@b$=99#GD9A^<#AE-Wh=CMgVm&6nWY7'c@ie
%]bEQE\msc\_7%I$EFo:u9aMUCc)g>rpVBnT>j;HQ4(udU+;BmRa.=Cq>Ou#"S-Z5kO_Zc=_^+fG"'MWOPhJ7?gWhrVQY[=I+@,AM
%\k$cPKnl/E[\]V6>RK^a27/UL-ck\fjqt.V7+%On9W^!.0_7^,UY0EV!8,bIP5m:h^2S0WP#ue(ImF.p1#B$dK7Sic"<j?<T>1tJ
%MBYR\-VaGN-:tG;::!BW4r.spi<l4`QGrKm(,FIm-0s1HZO5-BD7jJC=F2C%(_LPXka-5#*[*m]gF-bPY8t][=Z5>J?$U$RKOPai
%F@NqPZ%XB;b.bq<,XqW*K_?M`;CRI,Rr+:bHk/<]a@FJgDmq[sJI]dUm2'q=aMuI08rM3Mm]C)BIh&q<D!k#:99]PIZ_SmA`HR%M
%+V3+!Vdd$TGYF2=;UYf0Q$0mWS9PW*_#h6q&!37RolSF[-SiCXg0:0lq6^&"TtIktqDfF2,^X,2aTP0no!:aXCZkPV*O2cF].q#$
%P1fgs.9RC%!j)3<DoKo_#KW5*la>[R5?C=776a%`=g")\E3;nn[O74F#uP@@TS.)B_22^@aaJXg<_.r)$M9fkOTHuVh$YR#A^r`p
%iDq@hjp`L"#8-NGkLpp(LAl1ES]!CgJF"WD)R/E-EC@@/Nn9pA%G7kW5\XGC3+01MBfoTU8g%r\(Ais*YQ;eR%*f^&i6\YGetWU`
%>81;RZp0Ct\uY/"ko60%OCN$8B0,;g387tse<_/!E$EdfI6&+L53r=u64WhK:W9--quNNX!6E3mD6cl0hLnG)aU*05o68Gq9DKG'
%e"A\:5o;Mg?o"rUIjUcr"CE.i!O"P5NY*[fn>Zg`5EJg9jp0o.h`&YMDAOXhKM]_Aa94=b6@SPlI/D6Z-ijCC,"QT:a3Ljgdt=Za
%'YSg\80B_RWgdq6X+h=b<PrIi@ZX*hKf'f6>,ij:LS_MaL1L9P'*`:5;:7#!Me%Thf$fR1aUT3^d?(QG/1"!"pb7J[&tA9gl61G`
%!uOh.GF_]254joENJ?6Z=TSSbAi7e$ARbG)-M8"Zb)7Xh90>924g#B.iq\t-Orb5PQD#fKXk(fa?.TFR#at$DSVe!fCZ\I;f@sWU
%#mD6=M\-B`q5Kb8!kam6g=&"t,8b5+;_b[YGVLS@PIqYU(p"jc!gkPf![j/cZ<iD#A.-Z%KQaJ0l],d@*d9<jMIa[]gR0O\duQRM
%&R110PdT5.9p2m^!96MBgWJpiD'V:lPFB9s1<8W?2\O9#rTR:?i'_AfmP[=:V]RjVm"o2.k^&Vb-7'#u\:_WK),(W[&f!4BEIr#o
%.%5uCg-j^1/*<)V"N`K1Q<guD\-5uN3l_Q4KugC:_*[4+B!Eu5`b2\Z\W&Z&Wm$nPF'W,16lO>(-cFRp[?f\Ng(o_rF_,B[(UKuB
%"Tr.JU=o"#9U:-]`sK&fdWPq7#pj3Eg.lT2A2X=7.],++gSq\/1h3"u3@qM.D2'J77)^.O@G1?RD@'IAVu7I=DeDq4Noo`E3"KCt
%U$5cJ7WtrjU#`qnco3+Q]gK7$BBW:'HfA2n-cl/r8bK+D5"((2LOmu6$Wu:!gAH3BJIZDS"L/97*ianZG=\2UE6E#iI>t1P`<9mZ
%#L7[#hZMj6*R^5bk(bK7W]N^X;6^dVU:X0*RqQ<trmX>L(CP,1S*nAF7b>.R\@YoC?@(5^UfMgQ_bhOqr$g]am;U8k.3#)o*],Ng
%--QdCq7!!Y^&j?W3"]>8I[Z.&Fdd!L]5:1NKSqk?=ITUp?k!6&32<Gc51Ul/Z&]Q'AQ*N![Yg-Ma@>+kaXhCcAl?.SM,5&PpJWfS
%>'up'!T\5]OPk,1CcqMUfi4"&![g<8SPQ.m<VD3OE$D[;4!.*KebN<qe""cWmsHZ<p<L\k$q(kXkOg)Xj9J5@c1!62A*OELK7ST?
%6VKX[XtS$VNKg'i;Z!L8GQ9La5GB0Cfgi5@_I[He?Ee&,3S8nXQMgt.@Q:L6=L$\`Uo$HGc4$e<D3c>bm3$\W6-/f_UMEuA980m8
%Yb))E'n(1H13ea(a^`<L?Y2]_4qB`,e&,1i;i'S7<)NAFE`k#2m"`eT@Q0Eg/%R(IFBo'qqFH;5%EqmbJK23KF`\CR-!69RG=/k=
%_.Bqq?(1")LI^L0SOi[aXO3N'!\E<ABHG.9kic5NT0:b-er8BTdEUps,n`BCOsbP';8U>n6uI25IL<3#[dfNAQ2Z6\G?*7C25I;3
%;8n,kCqop*!H"+2Oa*E[0"+*%fN8'G8^Ng*9qm/P2XRr:V=K6-qRo"CdYV9m16LPo,)Hf.l;VEYp,T9_Hs#L>CJ-Zd9e*9a!gN(W
%7X-/41'rVC\mo8.)$j,@`qY^Yj1XPnc'O/Jhb2P=>J]:TI)kl-B4cV;RQoE?`ej&Wo5hr3l5pIH(LV<p1dSo53&t+b25s.np=%@J
%9J4?@Vc890gns8h]'6p!TRa)9*;qP/BEZ]3!TQ+uCNmO7@FsLE4ukH;8\AlpOV)!)?B,n?6!7LP2k>GK%6g!\7cd>W@b<'K(""?F
%DA>kLRE;^Sqn2V1&=FQQF:*Wich3rX5U3WNA1$]pg&dp_n2huteSf9;T.^+jfAE#EC/i+If;%@Kf)_\(>1!IEiRfHQ0[beN,&8XL
%E9Arf5k6Cl#[@WBP#7B<UB"!)a-;$kdcYD'kYP*qO8/pI2p/>aNmMJ=TJiUAaWAQFnt=Qo.;B5:O6IEnKhg]$?pj&nL+p'P9O1fX
%0=8ShH=Hj[dS5S-SaY=p6+h3X_08)manOm,*X&2('Au:"U%9caQIn>O\fm,=`ca%W6Zs)IR!2k,c0in>a%up5k=Eg>HKV46GHa:!
%+Ok&V`$O9oHmf/&b^SCb3!_N'311e6`Kg@G*G0BfAuG5kaBSVD;_`m1LN7?`^VE*dlb'hl>Je_pRt1>'8'#TImSb.#!A8=8(0V7m
%#9^N$[h(08JeOh\kdagUfL5BGBCKX+-GLute(8Xi$H+pl?m$*#0cqpF$BMq+B%]pY#C%Da-EhZN*H?"D:2)\=<K^tu?[_GUp)!ff
%_K_H(3dj2d&%^K?/F#YuEul0nk.=-N$`beR"U:t90a-<g7j83)8C3utB/_5MA9!)dJ>(!bM4oA*$e3FZ:eX6E]HZPA/f]gNg"oA`
%?9\]RY1sqPYmP&)@=G.^j2_Rs?AVJchQ<_7,8,)O?"9Na?;WJh:4shG4QMQS`V54m&pZ-)KQcr6@W?H!-/Vg\0c]eEe>F-Ufdc%u
%lIA6@OHX5c=DF%03ID?\IoY@e3'b)_V/R(1l+pO?UYTT/\ZL[*n,p]][2+1to%5c!e*]?<@<cmJ+qiYP-^4nAJp_#84ib#!E>(<b
%YBm?2J)`-!eDc]Lj+Bkf:paufJ1XW&O[)tYbgF?=rm@^;eK[OI>Kj0;j_t81M5*qu(Wj#Bhm<REWWRijL-L9VJhm'u&BCqL0hB@%
%IBB-hLu8OqPk`J"Ia!D*XXghFj[^rBq#VqlF<%bu_IBGg6):oL9,aK%LkCu0Bo'.SmRYDPbm3%^M/\.^TqM!koU"M.#uG4UT/ES5
%"';Z[7*+,A_kQHA+\)m3^''L\.ibrSjErEIeks/F<a"\-5>`fEs0>Yu?gul7A>Ndc;N=Vb:(Q5A$%:-aXG'Sbr:\n6rqO*h[)Yrn
%j\^AZgJAo#Df7XQP%+U6a\oQagpkkg(^T]930a\D@q+/N(I0s5@tY320HA*>)1MKHrRnMki!O.)_6$aO@B5oAcfrK)D5eg"SHDKL
%*HWA_eu=<X*bS*]QQLEfRh^e#'Z8r4<P]^fC4mU9h'/[6@9M_59C]On`M/B0W`*%;Nij)i`,1DKcsUY@n5@!E$#.%aUsesHVMk5(
%2^D_eUMW!IF$WT,Gno(,.#:T#DR`^`:q5[`FV]\3JJ0h`I.oI(\Pmjf&45:NoFbEdQ8dOLYRTU"MNJcp+Hj;Z`NM$PP-%/Jc&N*j
%6MC(;26hg9`a5)_`KhphZ#IYAGKL8%daQl`?)r#\cg0(5d&PPaS6Pi3qfTOqR/tZ_=Q#:,!ehY^Q<QPZ%VWEe7Q$AUWY8r<1:$aJ
%q=g*1"AV9:7Bg4C/pOs#&PtT\;i4Yl.qEeueR+gA%ef8`b\i\j[/Kmj^AIUgpn.TUp%*[j-b9*@fDkYFN5g.eN9cj'_3&T9+51u'
%494NK+Bc`)FS'fKD`njWInQR,rs8WgraG`pn,HttTE"P]hbiDuIN7;7rq5T,qrYYCp[oX-ps""ir8uo9o(Db7I/*P6ImUR#r-A5)
%_nUWoc!UJKg[DlPn<a1Jm=0ZE+?SNMrpHEXl[S`i2uaDEU.ob~>
%AI9_PrivateDataEnd
